// Generated by view binder compiler. Do not edit!
package com.tymek805.exercise_02.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.tymek805.exercise_02.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRightBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final TextView colorColorTextView;

  @NonNull
  public final TextView colorTextView;

  @NonNull
  public final TextView datePicker;

  @NonNull
  public final TextView dateTextView;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ConstraintLayout main;

  private ActivityRightBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull TextView colorColorTextView, @NonNull TextView colorTextView,
      @NonNull TextView datePicker, @NonNull TextView dateTextView,
      @NonNull FloatingActionButton fab, @NonNull LinearLayout linearLayout,
      @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.colorColorTextView = colorColorTextView;
    this.colorTextView = colorTextView;
    this.datePicker = datePicker;
    this.dateTextView = dateTextView;
    this.fab = fab;
    this.linearLayout = linearLayout;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_right, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.colorColorTextView;
      TextView colorColorTextView = ViewBindings.findChildViewById(rootView, id);
      if (colorColorTextView == null) {
        break missingId;
      }

      id = R.id.colorTextView;
      TextView colorTextView = ViewBindings.findChildViewById(rootView, id);
      if (colorTextView == null) {
        break missingId;
      }

      id = R.id.datePicker;
      TextView datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.dateTextView;
      TextView dateTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTextView == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new ActivityRightBinding((ConstraintLayout) rootView, backButton, colorColorTextView,
          colorTextView, datePicker, dateTextView, fab, linearLayout, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
