// Generated by view binder compiler. Do not edit!
package com.tymek805.exercise_04.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tymek805.exercise_04.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final TextView cityEditText;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final CheckBox lrowCheckBox;

  @NonNull
  public final ImageView lrowImage;

  @NonNull
  public final TextView lrowTv1;

  @NonNull
  public final TextView lrowTv2;

  @NonNull
  public final Button modifyButton;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final TextView timeTextEdit;

  @NonNull
  public final TextView transportType;

  private FragmentDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull CheckBox checkbox, @NonNull TextView cityEditText,
      @NonNull LinearLayout linearLayout1, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout linearLayout3, @NonNull CheckBox lrowCheckBox,
      @NonNull ImageView lrowImage, @NonNull TextView lrowTv1, @NonNull TextView lrowTv2,
      @NonNull Button modifyButton, @NonNull RatingBar ratingBar, @NonNull TextView timeTextEdit,
      @NonNull TextView transportType) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.checkbox = checkbox;
    this.cityEditText = cityEditText;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.lrowCheckBox = lrowCheckBox;
    this.lrowImage = lrowImage;
    this.lrowTv1 = lrowTv1;
    this.lrowTv2 = lrowTv2;
    this.modifyButton = modifyButton;
    this.ratingBar = ratingBar;
    this.timeTextEdit = timeTextEdit;
    this.transportType = transportType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.checkbox;
      CheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.cityEditText;
      TextView cityEditText = ViewBindings.findChildViewById(rootView, id);
      if (cityEditText == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.lrow_checkBox;
      CheckBox lrowCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (lrowCheckBox == null) {
        break missingId;
      }

      id = R.id.lrow_image;
      ImageView lrowImage = ViewBindings.findChildViewById(rootView, id);
      if (lrowImage == null) {
        break missingId;
      }

      id = R.id.lrow_tv1;
      TextView lrowTv1 = ViewBindings.findChildViewById(rootView, id);
      if (lrowTv1 == null) {
        break missingId;
      }

      id = R.id.lrow_tv2;
      TextView lrowTv2 = ViewBindings.findChildViewById(rootView, id);
      if (lrowTv2 == null) {
        break missingId;
      }

      id = R.id.modifyButton;
      Button modifyButton = ViewBindings.findChildViewById(rootView, id);
      if (modifyButton == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.timeTextEdit;
      TextView timeTextEdit = ViewBindings.findChildViewById(rootView, id);
      if (timeTextEdit == null) {
        break missingId;
      }

      id = R.id.transportType;
      TextView transportType = ViewBindings.findChildViewById(rootView, id);
      if (transportType == null) {
        break missingId;
      }

      return new FragmentDetailsBinding((ConstraintLayout) rootView, backButton, checkbox,
          cityEditText, linearLayout1, linearLayout2, linearLayout3, lrowCheckBox, lrowImage,
          lrowTv1, lrowTv2, modifyButton, ratingBar, timeTextEdit, transportType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
