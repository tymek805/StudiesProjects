{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass BvEvent {\n  constructor(eventType, eventInit = {}) {\n    __publicField(this, \"cancelable\", true);\n    __publicField(this, \"componentId\", null);\n    __publicField(this, \"_defaultPrevented\", false);\n    __publicField(this, \"eventType\", \"\");\n    __publicField(this, \"nativeEvent\", null);\n    __publicField(this, \"_preventDefault\");\n    __publicField(this, \"relatedTarget\", null);\n    __publicField(this, \"target\", null);\n    if (!eventType) {\n      throw new TypeError(`Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`);\n    }\n    Object.assign(this, BvEvent.Defaults, eventInit, {\n      eventType\n    });\n    this._preventDefault = function _preventDefault() {\n      if (this.cancelable) {\n        this.defaultPrevented = true;\n      }\n    };\n  }\n  // Readable by everyone,\n  // But only overwritten by inherrited constructors\n  get defaultPrevented() {\n    return this._defaultPrevented;\n  }\n  set defaultPrevented(prop) {\n    this._defaultPrevented = prop;\n  }\n  // I think this is right\n  // We want to be able to have it callable to everyone,\n  // But only overwritten by inherrited constructors\n  get preventDefault() {\n    return this._preventDefault;\n  }\n  // This may not be correct, because it doesn't get correct type inferences in children\n  // Ex overwrite this.preventDefault = () => true is valid. Could be a TS issue\n  set preventDefault(setter) {\n    this._preventDefault = setter;\n  }\n  static get Defaults() {\n    return {\n      cancelable: true,\n      componentId: null,\n      eventType: \"\",\n      nativeEvent: null,\n      relatedTarget: null,\n      target: null\n    };\n  }\n}\nclass BvTriggerableEvent extends BvEvent {\n  constructor(eventType, eventInit = {}) {\n    super(eventType, eventInit);\n    __publicField(this, \"trigger\", null);\n    Object.assign(this, BvEvent.Defaults, eventInit, {\n      eventType\n    });\n  }\n  static get Defaults() {\n    return {\n      ...super.Defaults,\n      trigger: null\n    };\n  }\n}\nclass BvCarouselEvent extends BvEvent {\n  constructor(eventType, eventInit) {\n    super(eventType, eventInit);\n    __publicField(this, \"from\");\n    __publicField(this, \"to\");\n    __publicField(this, \"direction\");\n    Object.assign(this, BvEvent.Defaults, eventInit, {\n      eventType\n    });\n    const {\n      from,\n      direction,\n      to\n    } = eventInit;\n    this.from = from;\n    this.to = to;\n    this.direction = direction;\n  }\n  static get Defaults() {\n    return {\n      ...super.Defaults\n    };\n  }\n}\nexport { BvEvent as B, BvTriggerableEvent as a, BvCarouselEvent as b };","map":{"version":3,"names":["BvEvent","constructor","eventType","eventInit","__publicField","TypeError","name","arguments","length","Object","assign","Defaults","_preventDefault","cancelable","defaultPrevented","_defaultPrevented","prop","preventDefault","setter","componentId","nativeEvent","relatedTarget","target","BvTriggerableEvent","trigger","BvCarouselEvent","from","direction","to"],"sources":["../src/utils/classes.ts"],"sourcesContent":["/**\n * Items that are omitted from the BvEventInit constructor arg\n */\nexport type BvEventConstructorOmittables = 'eventType' | 'defaultPrevented'\n\nexport class BvEvent {\n  readonly cancelable: boolean = true\n  readonly componentId: string | null = null\n  private _defaultPrevented = false\n  readonly eventType: string = ''\n  readonly nativeEvent: string | null = null\n  private _preventDefault: () => void\n  readonly relatedTarget: EventTarget | null = null\n  readonly target: EventTarget | null = null\n  // Readable by everyone,\n  // But only overwritten by inherrited constructors\n  public get defaultPrevented() {\n    return this._defaultPrevented\n  }\n  protected set defaultPrevented(prop) {\n    this._defaultPrevented = prop\n  }\n  // I think this is right\n  // We want to be able to have it callable to everyone,\n  // But only overwritten by inherrited constructors\n  public get preventDefault() {\n    return this._preventDefault\n  }\n  // This may not be correct, because it doesn't get correct type inferences in children\n  // Ex overwrite this.preventDefault = () => true is valid. Could be a TS issue\n  protected set preventDefault(setter: () => void) {\n    this._preventDefault = setter\n  }\n\n  constructor(\n    eventType: string,\n    eventInit: Partial<Omit<BvEvent, BvEventConstructorOmittables>> = {}\n  ) {\n    if (!eventType) {\n      throw new TypeError(\n        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`\n      )\n    }\n\n    // Merge defaults first, the eventInit, and the type last\n    // so, it can't be overwritten\n    Object.assign(this, BvEvent.Defaults, eventInit, {eventType})\n\n    this._preventDefault = function _preventDefault() {\n      if (this.cancelable) {\n        this.defaultPrevented = true\n      }\n    }\n  }\n\n  static get Defaults() {\n    return {\n      cancelable: true,\n      componentId: null,\n      eventType: '',\n      nativeEvent: null,\n      relatedTarget: null,\n      target: null,\n    }\n  }\n}\n\nexport class BvTriggerableEvent extends BvEvent {\n  readonly trigger: string | null = null\n\n  constructor(\n    eventType: string,\n    eventInit: Partial<Omit<BvTriggerableEvent, BvEventConstructorOmittables>> = {}\n  ) {\n    super(eventType, eventInit)\n\n    // Merge defaults first, the eventInit, and the type last\n    // so, it can't be overwritten\n    Object.assign(this, BvEvent.Defaults, eventInit, {eventType})\n  }\n\n  static get Defaults() {\n    return {\n      ...super.Defaults,\n      trigger: null,\n    }\n  }\n}\n\nexport class BvCarouselEvent extends BvEvent {\n  readonly from: number\n  readonly to: number\n  readonly direction: 'left' | 'right'\n\n  constructor(\n    eventType: string,\n    eventInit: Partial<Omit<BvEvent, BvEventConstructorOmittables>> & {\n      from: number\n      to: number\n      direction: 'left' | 'right'\n    }\n  ) {\n    super(eventType, eventInit)\n    Object.assign(this, BvEvent.Defaults, eventInit, {eventType})\n    const {from, direction, to} = eventInit\n    this.from = from\n    this.to = to\n    this.direction = direction\n  }\n\n  static get Defaults() {\n    return {\n      ...super.Defaults,\n    }\n  }\n}\n"],"mappings":";;;;;;;;AAKO,MAAMA,OAAA,CAAQ;EA6BnBC,YACEC,SAAA,EACAC,SAAA,GAAkE,IAClE;IA/BOC,aAAA,qBAAsB;IACtBA,aAAA,sBAA6B;IAC9BA,aAAA,4BAAoB;IACnBA,aAAA,oBAAoB;IACpBA,aAAA,sBAA6B;IAC9BA,aAAA;IACCA,aAAA,wBAAoC;IACpCA,aAAA,iBAA6B;IAyBpC,IAAI,CAACF,SAAA,EAAW;MACd,MAAM,IAAIG,SAAA,CACR,wBAAwB,KAAKJ,WAAA,CAAYK,IAAI,2BAA2BC,SAAA,CAAUC,MAAM,SAC1F;IAAA;IAKFC,MAAA,CAAOC,MAAA,CAAO,MAAMV,OAAA,CAAQW,QAAA,EAAUR,SAAA,EAAW;MAACD;IAAA,CAAU;IAEvD,KAAAU,eAAA,GAAkB,SAASA,gBAAA,EAAkB;MAChD,IAAI,KAAKC,UAAA,EAAY;QACnB,KAAKC,gBAAA,GAAmB;MAAA;IAE5B;EAAA;EAAA;EAAA;EApCF,IAAWA,iBAAA,EAAmB;IAC5B,OAAO,KAAKC,iBAAA;EAAA;EAEd,IAAcD,iBAAiBE,IAAA,EAAM;IACnC,KAAKD,iBAAA,GAAoBC,IAAA;EAAA;EAAA;EAAA;EAAA;EAK3B,IAAWC,eAAA,EAAiB;IAC1B,OAAO,KAAKL,eAAA;EAAA;EAAA;EAAA;EAId,IAAcK,eAAeC,MAAA,EAAoB;IAC/C,KAAKN,eAAA,GAAkBM,MAAA;EAAA;EAwBzB,WAAWP,SAAA,EAAW;IACb;MACLE,UAAA,EAAY;MACZM,WAAA,EAAa;MACbjB,SAAA,EAAW;MACXkB,WAAA,EAAa;MACbC,aAAA,EAAe;MACfC,MAAA,EAAQ;IACV;EAAA;AAEJ;AAEO,MAAMC,kBAAA,SAA2BvB,OAAA,CAAQ;EAG9CC,YACEC,SAAA,EACAC,SAAA,GAA6E,IAC7E;IACA,MAAMD,SAAA,EAAWC,SAAS;IANnBC,aAAA,kBAAyB;IAUhCK,MAAA,CAAOC,MAAA,CAAO,MAAMV,OAAA,CAAQW,QAAA,EAAUR,SAAA,EAAW;MAACD;IAAA,CAAU;EAAA;EAG9D,WAAWS,SAAA,EAAW;IACb;MACL,GAAG,MAAMA,QAAA;MACTa,OAAA,EAAS;IACX;EAAA;AAEJ;AAEO,MAAMC,eAAA,SAAwBzB,OAAA,CAAQ;EAK3CC,YACEC,SAAA,EACAC,SAAA,EAKA;IACA,MAAMD,SAAA,EAAWC,SAAS;IAZnBC,aAAA;IACAA,aAAA;IACAA,aAAA;IAWPK,MAAA,CAAOC,MAAA,CAAO,MAAMV,OAAA,CAAQW,QAAA,EAAUR,SAAA,EAAW;MAACD;IAAA,CAAU;IAC5D,MAAM;MAACwB,IAAA;MAAMC,SAAA;MAAWC;IAAM,IAAAzB,SAAA;IAC9B,KAAKuB,IAAA,GAAOA,IAAA;IACZ,KAAKE,EAAA,GAAKA,EAAA;IACV,KAAKD,SAAA,GAAYA,SAAA;EAAA;EAGnB,WAAWhB,SAAA,EAAW;IACb;MACL,GAAG,MAAMA;IACX;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}