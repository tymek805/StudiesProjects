{"ast":null,"code":"import { defineComponent, ref, watch, useSlots, inject, computed, createBlock, openBlock, resolveDynamicComponent, mergeProps, unref, withCtx, createElementBlock, createCommentVNode, renderSlot, createElementVNode, normalizeStyle, toDisplayString, createTextVNode, provide, toRef } from \"vue\";\nimport { f as avatarGroupInjectionKey } from \"./keys-D3gOZjD-.mjs\";\nimport { u as useBLinkHelper, _ as _sfc_main$2 } from \"./BLink.vue_vue_type_script_setup_true_lang-CinzoAgQ.mjs\";\nimport { _ as _sfc_main$3 } from \"./BBadge.vue_vue_type_script_setup_true_lang-Dv_mxsog.mjs\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nimport { u as useNumberishToStyle } from \"./useNumberishToStyle-yYj2DkI2.mjs\";\nimport { u as useRadiusElementClasses } from \"./useRadiusElementClasses-DtKYQuWz.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useToNumber } from \"./index-CLgoGrAV.mjs\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"b-avatar-custom\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"b-avatar-img\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  key: 3,\n  class: \"b-avatar-img\"\n};\nconst FONT_SIZE_SCALE = 0.4;\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BAvatar\",\n  props: {\n    alt: {\n      default: \"avatar\"\n    },\n    badge: {\n      type: [Boolean, String],\n      default: false\n    },\n    badgeBgVariant: {\n      default: null\n    },\n    badgePlacement: {\n      default: \"bottom-end\"\n    },\n    badgeTextVariant: {\n      default: null\n    },\n    badgeVariant: {\n      default: \"primary\"\n    },\n    badgePill: {\n      type: Boolean,\n      default: false\n    },\n    badgeDotIndicator: {\n      type: Boolean,\n      default: false\n    },\n    button: {\n      type: Boolean,\n      default: false\n    },\n    buttonType: {\n      default: \"button\"\n    },\n    size: {\n      default: void 0\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    src: {\n      default: void 0\n    },\n    text: {\n      default: void 0\n    },\n    active: {\n      type: Boolean,\n      default: void 0\n    },\n    activeClass: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: void 0\n    },\n    exactActiveClass: {\n      default: void 0\n    },\n    href: {\n      default: void 0\n    },\n    noRel: {\n      type: Boolean\n    },\n    opacity: {\n      default: void 0\n    },\n    opacityHover: {\n      default: void 0\n    },\n    prefetch: {\n      type: Boolean\n    },\n    prefetchOn: {},\n    noPrefetch: {\n      type: Boolean\n    },\n    prefetchedClass: {},\n    rel: {\n      default: void 0\n    },\n    replace: {\n      type: Boolean,\n      default: void 0\n    },\n    routerComponentName: {\n      default: void 0\n    },\n    stretched: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      default: void 0\n    },\n    to: {},\n    underlineOffset: {\n      default: void 0\n    },\n    underlineOffsetHover: {\n      default: void 0\n    },\n    underlineOpacity: {\n      default: void 0\n    },\n    underlineOpacityHover: {\n      default: void 0\n    },\n    underlineVariant: {\n      default: void 0\n    },\n    variant: {\n      default: \"secondary\"\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    },\n    rounded: {\n      type: [Boolean, String, Number],\n      default: \"circle\"\n    },\n    roundedTop: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedBottom: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedStart: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedEnd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    }\n  },\n  emits: [\"click\", \"img-error\"],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const localSrc = ref(props.src);\n    watch(() => props.src, value => {\n      localSrc.value = value;\n    });\n    const emit = __emit;\n    const slots = useSlots();\n    const {\n      computedLink,\n      computedLinkProps\n    } = useBLinkHelper(props);\n    const parentData = inject(avatarGroupInjectionKey, null);\n    const SIZES = Object.freeze([null, ...Object.keys({\n      lg: null,\n      md: null,\n      sm: null\n    })]);\n    const BADGE_FONT_SIZE_SCALE = FONT_SIZE_SCALE * 0.7;\n    const hasDefaultSlot = computed(() => !isEmptySlot(slots.default));\n    const hasBadgeSlot = computed(() => !isEmptySlot(slots.badge));\n    const showBadge = computed(() => !!props.badge || props.badge === \"\" || hasBadgeSlot.value);\n    const computedSquare = computed(() => (parentData == null ? void 0 : parentData.square.value) || props.square);\n    const computedSize = useNumberishToStyle(() => (parentData == null ? void 0 : parentData.size.value) ?? props.size);\n    const computedSizeIsLiteralSize = computed(() => !!computedSize.value && SIZES.includes(computedSize.value));\n    const computedVariant = computed(() => (parentData == null ? void 0 : parentData.variant.value) ?? props.variant);\n    const computedRounded = computed(() => (parentData == null ? void 0 : parentData.rounded.value) ?? props.rounded);\n    const computedRoundedTop = computed(() => (parentData == null ? void 0 : parentData.roundedTop.value) ?? props.roundedTop);\n    const computedRoundedBottom = computed(() => (parentData == null ? void 0 : parentData.roundedBottom.value) ?? props.roundedBottom);\n    const computedRoundedStart = computed(() => (parentData == null ? void 0 : parentData.roundedStart.value) ?? props.roundedStart);\n    const computedRoundedEnd = computed(() => (parentData == null ? void 0 : parentData.roundedEnd.value) ?? props.roundedEnd);\n    const radiusElementClasses = useRadiusElementClasses(() => ({\n      rounded: computedRounded.value,\n      roundedTop: computedRoundedTop.value,\n      roundedBottom: computedRoundedBottom.value,\n      roundedStart: computedRoundedStart.value,\n      roundedEnd: computedRoundedEnd.value\n    }));\n    const badgeText = computed(() => props.badge === true ? \"\" : props.badge);\n    const badgeImplicitlyDot = computed(() => !badgeText.value && !hasBadgeSlot.value);\n    const colorClasses = useColorVariantClasses(() => ({\n      bgVariant: (parentData == null ? void 0 : parentData.bgVariant.value) ?? props.bgVariant,\n      textVariant: (parentData == null ? void 0 : parentData.textVariant.value) ?? props.textVariant,\n      variant: computedVariant.value\n    }));\n    const computedClasses = computed(() => [colorClasses.value,\n    // Square overwrites all else\n    computedSquare.value === true ? void 0 : radiusElementClasses.value, {\n      [`b-avatar-${computedSize.value}`]: computedSizeIsLiteralSize.value && computedSize.value !== \"md\",\n      [`btn-${computedVariant.value}`]: props.button ? computedVariant.value !== null : false,\n      \"badge\": !props.button && computedVariant.value !== null && hasDefaultSlot.value,\n      \"btn\": props.button,\n      // Square is the same as rounded-0 class\n      \"rounded-0\": computedSquare.value === true\n    }]);\n    const badgeStyle = computed(() => ({\n      fontSize: (!computedSizeIsLiteralSize.value ? `calc(${computedSize.value} * ${BADGE_FONT_SIZE_SCALE})` : \"\") || \"\"\n    }));\n    const textFontStyle = computed(() => {\n      const fontSize = !computedSizeIsLiteralSize.value ? `calc(${computedSize.value} * ${FONT_SIZE_SCALE})` : null;\n      return fontSize ? {\n        fontSize\n      } : {};\n    });\n    const marginStyle = computed(() => {\n      var _a;\n      const overlapScale = ((_a = parentData == null ? void 0 : parentData.overlapScale) == null ? void 0 : _a.value) || 0;\n      const value = computedSize.value && overlapScale ? `calc(${computedSize.value} * -${overlapScale})` : null;\n      return value ? {\n        marginLeft: value,\n        marginRight: value\n      } : {};\n    });\n    const computedTag = computed(() => computedLink.value ? _sfc_main$2 : props.button ? \"button\" : \"span\");\n    const computedStyle = computed(() => ({\n      ...marginStyle.value,\n      ...(!computedSizeIsLiteralSize.value ? {\n        width: computedSize.value,\n        height: computedSize.value\n      } : void 0)\n    }));\n    const clicked = e => {\n      if (!props.disabled && (computedLink.value || props.button)) emit(\"click\", e);\n    };\n    const onImgError = e => {\n      localSrc.value = void 0;\n      emit(\"img-error\", e);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(computedTag.value), mergeProps({\n        class: [\"b-avatar\", computedClasses.value],\n        style: computedStyle.value\n      }, unref(computedLinkProps), {\n        type: props.button && !unref(computedLink) ? props.buttonType : void 0,\n        disabled: props.disabled || null,\n        variant: null,\n        onClick: clicked\n      }), {\n        default: withCtx(() => [hasDefaultSlot.value ? (openBlock(), createElementBlock(\"span\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")])) : !!localSrc.value ? (openBlock(), createElementBlock(\"span\", _hoisted_2, [createElementVNode(\"img\", {\n          src: localSrc.value,\n          alt: props.alt,\n          onError: onImgError\n        }, null, 40, _hoisted_3)])) : !!props.text ? (openBlock(), createElementBlock(\"span\", {\n          key: 2,\n          class: \"b-avatar-text\",\n          style: normalizeStyle(textFontStyle.value)\n        }, toDisplayString(props.text), 5)) : (openBlock(), createElementBlock(\"span\", _hoisted_4, _cache[0] || (_cache[0] = [createElementVNode(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"80%\",\n          height: \"80%\",\n          fill: \"currentColor\",\n          class: \"bi bi-person-fill\",\n          viewBox: \"0 0 16 16\"\n        }, [createElementVNode(\"path\", {\n          d: \"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"\n        })], -1)]))), showBadge.value ? (openBlock(), createBlock(_sfc_main$3, {\n          key: 4,\n          pill: props.badgePill,\n          \"dot-indicator\": props.badgeDotIndicator || badgeImplicitlyDot.value,\n          variant: props.badgeVariant,\n          \"bg-variant\": props.badgeBgVariant,\n          \"text-variant\": props.badgeTextVariant,\n          style: normalizeStyle(badgeStyle.value),\n          placement: props.badgePlacement\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"badge\", {}, () => [createTextVNode(toDisplayString(badgeText.value), 1)])]),\n          _: 3\n        }, 8, [\"pill\", \"dot-indicator\", \"variant\", \"bg-variant\", \"text-variant\", \"style\", \"placement\"])) : createCommentVNode(\"\", true)]),\n        _: 3\n      }, 16, [\"class\", \"style\", \"type\", \"disabled\"]);\n    };\n  }\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BAvatarGroup\",\n  props: {\n    overlap: {\n      default: 0.3\n    },\n    size: {\n      default: void 0\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"div\"\n    },\n    variant: {\n      default: null\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    },\n    rounded: {\n      type: [Boolean, String, Number],\n      default: \"circle\"\n    },\n    roundedTop: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedBottom: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedStart: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedEnd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BAvatarGroup\");\n    const overlapNumber = useToNumber(() => props.overlap);\n    const computedSize = useNumberishToStyle(() => props.size);\n    const overlapScale = computed(() => Math.min(Math.max(overlapNumber.value, 0), 1) / 2);\n    const paddingStyle = computed(() => {\n      const value = computedSize.value ? `calc(${computedSize.value} * ${overlapScale.value})` : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    });\n    provide(avatarGroupInjectionKey, {\n      overlapScale,\n      size: toRef(() => props.size),\n      square: toRef(() => props.square),\n      rounded: toRef(() => props.rounded),\n      roundedTop: toRef(() => props.roundedTop),\n      roundedBottom: toRef(() => props.roundedBottom),\n      roundedStart: toRef(() => props.roundedStart),\n      roundedEnd: toRef(() => props.roundedEnd),\n      variant: toRef(() => props.variant),\n      bgVariant: toRef(() => props.bgVariant),\n      textVariant: toRef(() => props.textVariant)\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: \"b-avatar-group\",\n        role: \"group\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"div\", {\n          class: \"b-avatar-group-inner\",\n          style: normalizeStyle(paddingStyle.value)\n        }, [renderSlot(_ctx.$slots, \"default\")], 4)]),\n        _: 3\n      });\n    };\n  }\n});\nexport { _sfc_main$1 as _, _sfc_main as a };","map":{"version":3,"names":["FONT_SIZE_SCALE","props","__props","localSrc","ref","src","watch","value","emit","__emit","slots","useSlots","computedLink","computedLinkProps","useBLinkHelper","parentData","inject","avatarGroupInjectionKey","SIZES","Object","freeze","keys","lg","md","sm","BADGE_FONT_SIZE_SCALE","hasDefaultSlot","computed","isEmptySlot","default","hasBadgeSlot","badge","showBadge","computedSquare","square","computedSize","useNumberishToStyle","size","computedSizeIsLiteralSize","includes","computedVariant","variant","computedRounded","rounded","computedRoundedTop","roundedTop","computedRoundedBottom","roundedBottom","computedRoundedStart","roundedStart","computedRoundedEnd","roundedEnd","radiusElementClasses","useRadiusElementClasses","badgeText","badgeImplicitlyDot","colorClasses","useColorVariantClasses","bgVariant","textVariant","computedClasses","button","badgeStyle","fontSize","textFontStyle","marginStyle","overlapScale","_a","marginLeft","marginRight","computedTag","_sfc_main$2","computedStyle","width","height","clicked","e","disabled","onImgError","_props","useDefaults","overlapNumber","useToNumber","overlap","Math","min","max","paddingStyle","paddingLeft","paddingRight","provide","toRef"],"sources":["../src/components/BAvatar/BAvatar.vue","../src/components/BAvatar/BAvatarGroup.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    class=\"b-avatar\"\n    :class=\"computedClasses\"\n    :style=\"computedStyle\"\n    v-bind=\"computedLinkProps\"\n    :type=\"props.button && !computedLink ? props.buttonType : undefined\"\n    :disabled=\"props.disabled || null\"\n    :variant=\"null\"\n    @click=\"clicked\"\n  >\n    <span v-if=\"hasDefaultSlot\" class=\"b-avatar-custom\">\n      <slot />\n    </span>\n    <span v-else-if=\"!!localSrc\" class=\"b-avatar-img\">\n      <img :src=\"localSrc\" :alt=\"props.alt\" @error=\"onImgError\" />\n    </span>\n    <span v-else-if=\"!!props.text\" class=\"b-avatar-text\" :style=\"textFontStyle\">\n      {{ props.text }}\n    </span>\n    <span v-else class=\"b-avatar-img\"\n      ><svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"80%\"\n        height=\"80%\"\n        fill=\"currentColor\"\n        class=\"bi bi-person-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6\" />\n      </svg>\n    </span>\n    <BBadge\n      v-if=\"showBadge\"\n      :pill=\"props.badgePill\"\n      :dot-indicator=\"props.badgeDotIndicator || badgeImplicitlyDot\"\n      :variant=\"props.badgeVariant\"\n      :bg-variant=\"props.badgeBgVariant\"\n      :text-variant=\"props.badgeTextVariant\"\n      :style=\"badgeStyle\"\n      :placement=\"props.badgePlacement\"\n    >\n      <slot name=\"badge\">\n        {{ badgeText }}\n      </slot>\n    </BBadge>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {avatarGroupInjectionKey} from '../../utils/keys'\nimport {computed, type CSSProperties, inject, ref, type StyleValue, watch} from 'vue'\nimport type {BAvatarProps} from '../../types/ComponentProps'\nimport BLink from '../BLink/BLink.vue'\nimport BBadge from '../BBadge/BBadge.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useNumberishToStyle} from '../../composables/useNumberishToStyle'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport type {Size} from '../../types'\n\nconst props = withDefaults(defineProps<BAvatarProps>(), {\n  alt: 'avatar',\n  badge: false,\n  badgeBgVariant: null,\n  badgeTextVariant: null,\n  badgeVariant: 'primary',\n  badgePlacement: 'bottom-end',\n  badgeDotIndicator: false,\n  badgePill: false,\n  button: false,\n  buttonType: 'button',\n  size: undefined,\n  square: false,\n  src: undefined,\n  text: undefined,\n  // Link props\n  variant: 'secondary',\n  // All others use defaults\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  stretched: false,\n  routerComponentName: undefined,\n  target: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  // End link props\n  // ColorExtendables props\n  // Variant is here as well\n  bgVariant: null,\n  textVariant: null,\n  // End ColorExtendables props\n  // RadiusElementExtendables props\n  rounded: 'circle',\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\n\nconst localSrc = ref(props.src)\nwatch(\n  () => props.src,\n  (value) => {\n    localSrc.value = value\n  }\n)\n\nconst emit = defineEmits<{\n  'click': [value: MouseEvent]\n  'img-error': [value: Event]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  badge?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props)\n\nconst parentData = inject(avatarGroupInjectionKey, null)\n\nconst SIZES = Object.freeze([\n  null,\n  ...Object.keys({\n    lg: null,\n    md: null,\n    sm: null,\n  } satisfies Record<Size, null>),\n] as (string | null)[])\nconst FONT_SIZE_SCALE = 0.4\nconst BADGE_FONT_SIZE_SCALE = FONT_SIZE_SCALE * 0.7\n\nconst hasDefaultSlot = computed(() => !isEmptySlot(slots.default))\nconst hasBadgeSlot = computed(() => !isEmptySlot(slots.badge))\n\nconst showBadge = computed(() => !!props.badge || props.badge === '' || hasBadgeSlot.value)\nconst computedSquare = computed(() => parentData?.square.value || props.square)\n\n// const computedPropSize = useNumberishToStyle(() => props.size)\n// const propSizeIsLiteralSize = (val: unknown): val is Size =>\n//   !!val && typeof val === 'string' && SIZES.includes(val)\n// const computedParentSize = useNumberishToStyle(() => parentData?.size.value)\n// const computedSize = computed(() => computedParentSize.value ?? computedPropSize.value)\n// const computedPropSizeIsLiteralSize = computed(() => propSizeIsLiteralSize(computedSize.value))\n\nconst computedSize = useNumberishToStyle(() => parentData?.size.value ?? props.size)\nconst computedSizeIsLiteralSize = computed(\n  () => !!computedSize.value && SIZES.includes(computedSize.value)\n)\n\nconst computedVariant = computed(() => parentData?.variant.value ?? props.variant)\nconst computedRounded = computed(() => parentData?.rounded.value ?? props.rounded)\nconst computedRoundedTop = computed(() => parentData?.roundedTop.value ?? props.roundedTop)\nconst computedRoundedBottom = computed(() => parentData?.roundedBottom.value ?? props.roundedBottom)\nconst computedRoundedStart = computed(() => parentData?.roundedStart.value ?? props.roundedStart)\nconst computedRoundedEnd = computed(() => parentData?.roundedEnd.value ?? props.roundedEnd)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: computedRounded.value,\n  roundedTop: computedRoundedTop.value,\n  roundedBottom: computedRoundedBottom.value,\n  roundedStart: computedRoundedStart.value,\n  roundedEnd: computedRoundedEnd.value,\n}))\n\nconst badgeText = computed(() => (props.badge === true ? '' : props.badge))\nconst badgeImplicitlyDot = computed(() => !badgeText.value && !hasBadgeSlot.value)\n\nconst colorClasses = useColorVariantClasses(() => ({\n  bgVariant: parentData?.bgVariant.value ?? props.bgVariant,\n  textVariant: parentData?.textVariant.value ?? props.textVariant,\n  variant: computedVariant.value,\n}))\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  // Square overwrites all else\n  computedSquare.value === true ? undefined : radiusElementClasses.value,\n  {\n    [`b-avatar-${computedSize.value}`]:\n      computedSizeIsLiteralSize.value && computedSize.value !== 'md',\n    [`btn-${computedVariant.value}`]: props.button ? computedVariant.value !== null : false,\n    'badge': !props.button && computedVariant.value !== null && hasDefaultSlot.value,\n    'btn': props.button,\n    // Square is the same as rounded-0 class\n    'rounded-0': computedSquare.value === true,\n  },\n])\n\nconst badgeStyle = computed<StyleValue>(() => ({\n  fontSize:\n    (!computedSizeIsLiteralSize.value\n      ? `calc(${computedSize.value} * ${BADGE_FONT_SIZE_SCALE})`\n      : '') || '',\n}))\n\nconst textFontStyle = computed<StyleValue>(() => {\n  const fontSize = !computedSizeIsLiteralSize.value\n    ? `calc(${computedSize.value} * ${FONT_SIZE_SCALE})`\n    : null\n  return fontSize ? {fontSize} : {}\n})\n\nconst marginStyle = computed(() => {\n  const overlapScale = parentData?.overlapScale?.value || 0\n\n  const value =\n    computedSize.value && overlapScale ? `calc(${computedSize.value} * -${overlapScale})` : null\n  return value ? {marginLeft: value, marginRight: value} : {}\n})\n\nconst computedTag = computed(() => (computedLink.value ? BLink : props.button ? 'button' : 'span'))\n\nconst computedStyle = computed<CSSProperties>(() => ({\n  ...marginStyle.value,\n  ...(!computedSizeIsLiteralSize.value\n    ? {\n        width: computedSize.value,\n        height: computedSize.value,\n      }\n    : undefined),\n}))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (!props.disabled && (computedLink.value || props.button)) emit('click', e)\n}\n\nconst onImgError = (e: Readonly<Event>) => {\n  localSrc.value = undefined\n  emit('img-error', e)\n}\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"b-avatar-group\" role=\"group\">\n    <div class=\"b-avatar-group-inner\" :style=\"paddingStyle\">\n      <slot />\n    </div>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, type StyleValue, toRef} from 'vue'\nimport type {BAvatarGroupProps} from '../../types/ComponentProps'\nimport {avatarGroupInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useToNumber} from '@vueuse/core'\nimport {useNumberishToStyle} from '../../composables/useNumberishToStyle'\n\nconst _props = withDefaults(defineProps<BAvatarGroupProps>(), {\n  overlap: 0.3,\n  size: undefined,\n  square: false,\n  tag: 'div',\n  // RadiusElementExtendables props\n  rounded: 'circle',\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n  // ColorExtendables props\n  bgVariant: null,\n  textVariant: null,\n  variant: null,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BAvatarGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst overlapNumber = useToNumber(() => props.overlap)\n\nconst computedSize = useNumberishToStyle(() => props.size)\nconst overlapScale = computed(() => Math.min(Math.max(overlapNumber.value, 0), 1) / 2)\n\nconst paddingStyle = computed<StyleValue>(() => {\n  const value = computedSize.value ? `calc(${computedSize.value} * ${overlapScale.value})` : null\n  return value ? {paddingLeft: value, paddingRight: value} : {}\n})\n\nprovide(avatarGroupInjectionKey, {\n  overlapScale,\n  size: toRef(() => props.size),\n  square: toRef(() => props.square),\n  rounded: toRef(() => props.rounded),\n  roundedTop: toRef(() => props.roundedTop),\n  roundedBottom: toRef(() => props.roundedBottom),\n  roundedStart: toRef(() => props.roundedStart),\n  roundedEnd: toRef(() => props.roundedEnd),\n  variant: toRef(() => props.variant),\n  bgVariant: toRef(() => props.bgVariant),\n  textVariant: toRef(() => props.textVariant),\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}