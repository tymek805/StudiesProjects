{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { defineComponent, mergeModels, useSlots, useModel, useTemplateRef, ref, onMounted, computed, watch, provide, toRef, createElementBlock, openBlock, normalizeClass, unref, createCommentVNode, createElementVNode, Fragment, renderList, createVNode, TransitionGroup, withCtx, withDirectives, createBlock, resolveDynamicComponent, normalizeStyle, vShow, toDisplayString, inject, renderSlot } from \"vue\";\nimport { b as BvCarouselEvent } from \"./classes-IC0yVJlq.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { l as useElementHover, m as useSwipe, o as onKeyStroke } from \"./index-cC189kCW.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as carouselInjectionKey } from \"./keys-D3gOZjD-.mjs\";\nimport { u as useToNumber, f as useIntervalFn } from \"./index-CLgoGrAV.mjs\";\nimport { _ as _sfc_main$2 } from \"./BImg.vue_vue_type_script_setup_true_lang-MMXD4NiQ.mjs\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nconst getSlotElements = (slot, filterBy) => ((slot == null ? void 0 : slot()) ?? []).reduce((arr, slot2) => {\n  if (typeof slot2.type === \"symbol\") {\n    arr = arr.concat(slot2.children);\n  } else {\n    arr.push(slot2);\n  }\n  return arr;\n}, []).filter(child => {\n  var _a;\n  return ((_a = child.type) == null ? void 0 : _a.__name) === filterBy;\n});\nconst _hoisted_1$1 = [\"id\"];\nconst _hoisted_2 = [\"aria-label\", \"aria-owns\"];\nconst _hoisted_3 = [\"aria-current\", \"aria-label\", \"aria-controls\", \"aria-describedby\", \"onClick\"];\nconst _hoisted_4 = {\n  ref: \"_relatedTarget\",\n  class: \"carousel-inner\"\n};\nconst _hoisted_5 = {\n  class: \"visually-hidden\"\n};\nconst _hoisted_6 = {\n  class: \"visually-hidden\"\n};\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BCarousel\",\n  props: /* @__PURE__ */mergeModels({\n    background: {\n      default: void 0\n    },\n    controls: {\n      type: Boolean,\n      default: false\n    },\n    controlsNextText: {\n      default: \"Next\"\n    },\n    controlsPrevText: {\n      default: \"Previous\"\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    imgHeight: {\n      default: void 0\n    },\n    imgWidth: {\n      default: void 0\n    },\n    indicators: {\n      type: Boolean,\n      default: false\n    },\n    indicatorsButtonLabel: {\n      default: \"Slide\"\n    },\n    interval: {\n      default: 5e3\n    },\n    labelIndicators: {\n      default: \"Select a slide to display\"\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    noAnimation: {\n      type: Boolean,\n      default: false\n    },\n    noHoverPause: {\n      type: Boolean,\n      default: false\n    },\n    noTouch: {\n      type: Boolean,\n      default: false\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    },\n    ride: {\n      type: [Boolean, String],\n      default: false\n    },\n    rideReverse: {\n      type: Boolean,\n      default: false\n    },\n    touchThreshold: {\n      default: 50\n    }\n  }, {\n    \"modelValue\": {\n      default: 0\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"slide\", \"slid\", \"prev-click\", \"next-click\"], [\"update:modelValue\"]),\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCarousel\");\n    const emit = __emit;\n    const slots = useSlots();\n    const computedId = useId(() => props.id, \"carousel\");\n    const buttonOwnership = useId(void 0, \"carousel-button-ownership\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const slideValues = useTemplateRef(\"_slideValues\");\n    const touchThresholdNumber = useToNumber(() => props.touchThreshold);\n    const slideInterval = ref(null);\n    onMounted(() => {\n      var _a, _b;\n      slideInterval.value = ((_b = (_a = slideValues.value) == null ? void 0 : _a.find(slid => slid.$el.style.display !== \"none\")) == null ? void 0 : _b._interval) ?? null;\n    });\n    const intervalNumber = useToNumber(() => slideInterval.value ?? props.interval);\n    const isTransitioning = ref(false);\n    const rideStarted = ref(false);\n    const direction = ref(true);\n    const relatedTarget = useTemplateRef(\"_relatedTarget\");\n    const element = useTemplateRef(\"_element\");\n    const previousModelValue = ref(modelValue.value);\n    const isHovering = useElementHover(element);\n    const enterClasses = computed(() => `carousel-item carousel-item-${!direction.value ? \"next\" : \"prev\"} carousel-item-${!direction.value ? \"start\" : \"end\"}`);\n    const leaveClasses = computed(() => `carousel-item active carousel-item-${direction.value ? \"start\" : \"end\"}`);\n    const {\n      pause,\n      resume\n    } = useIntervalFn(() => {\n      if (props.rideReverse) {\n        prev();\n        return;\n      }\n      next();\n    }, intervalNumber, {\n      immediate: props.ride === \"carousel\"\n    });\n    const isRiding = computed(() => props.ride === true && rideStarted.value === true || props.ride === \"carousel\");\n    const slides = computed(() => getSlotElements(slots.default, \"BCarouselSlide\"));\n    const computedClasses = computed(() => ({\n      \"carousel-fade\": props.fade\n    }));\n    const buildBvCarouselEvent = event => {\n      var _a;\n      return new BvCarouselEvent(event, {\n        componentId: computedId.value,\n        cancelable: false,\n        target: element.value,\n        direction: direction.value ? \"right\" : \"left\",\n        from: previousModelValue.value,\n        to: modelValue.value,\n        relatedTarget: ((_a = relatedTarget.value) == null ? void 0 : _a.children[modelValue.value]) ?? null\n      });\n    };\n    const goToValue = value => {\n      if (isTransitioning.value === true) return;\n      if (props.ride === true) {\n        rideStarted.value = true;\n      }\n      if (isRiding.value === true) {\n        resume();\n      }\n      direction.value = value < modelValue.value ? false : true;\n      if (value >= slides.value.length) {\n        if (props.noWrap) return;\n        modelValue.value = 0;\n        return;\n      }\n      if (value < 0) {\n        if (props.noWrap) return;\n        modelValue.value = slides.value.length - 1;\n        return;\n      }\n      previousModelValue.value = modelValue.value;\n      modelValue.value = value;\n    };\n    const prev = () => {\n      goToValue(modelValue.value - 1);\n    };\n    const next = () => {\n      goToValue(modelValue.value + 1);\n    };\n    const onKeydown = fn => {\n      if (props.keyboard === false) return;\n      fn();\n    };\n    const onMouseEnter = () => {\n      if (props.noHoverPause) return;\n      pause();\n    };\n    const onMouseLeave = () => {\n      if (!isRiding.value) return;\n      resume();\n    };\n    const {\n      lengthX\n    } = useSwipe(element, {\n      passive: true,\n      onSwipeStart() {\n        if (props.noTouch === true) return;\n        pause();\n      },\n      onSwipeEnd() {\n        if (props.noTouch === true) return;\n        const resumeRiding = () => {\n          if (isRiding.value === false) return;\n          resume();\n        };\n        if (lengthX.value >= touchThresholdNumber.value) {\n          next();\n          resumeRiding();\n          return;\n        }\n        if (lengthX.value <= -touchThresholdNumber.value) {\n          prev();\n          resumeRiding();\n        }\n      }\n    });\n    const onBeforeLeave = () => {\n      emit(\"slide\", buildBvCarouselEvent(\"slide\"));\n      isTransitioning.value = true;\n    };\n    const onAfterLeave = () => {\n      emit(\"slid\", buildBvCarouselEvent(\"slid\"));\n      isTransitioning.value = false;\n    };\n    const onAfterEnter = el => {\n      if (modelValue.value !== 0) {\n        el.classList.add(\"carousel-item\");\n      }\n    };\n    const onEnter = el => {\n      var _a, _b;\n      slideInterval.value = ((_b = (_a = slideValues.value) == null ? void 0 : _a.find(slid => slid.$el === el)) == null ? void 0 : _b._interval) ?? null;\n    };\n    onKeyStroke(\"ArrowLeft\", () => {\n      onKeydown(prev);\n    }, {\n      target: element\n    });\n    onKeyStroke(\"ArrowRight\", () => {\n      onKeydown(next);\n    }, {\n      target: element\n    });\n    watch(() => props.ride, () => {\n      rideStarted.value = false;\n    });\n    watch(isHovering, newValue => {\n      if (newValue) {\n        onMouseEnter();\n        return;\n      }\n      onMouseLeave();\n    });\n    const onClickPrev = event => {\n      emit(\"prev-click\", event);\n      if (event.defaultPrevented) return;\n      prev();\n    };\n    const onClickNext = event => {\n      emit(\"next-click\", event);\n      if (event.defaultPrevented) return;\n      next();\n    };\n    __expose({\n      next,\n      pause,\n      prev,\n      resume\n    });\n    provide(carouselInjectionKey, {\n      background: toRef(() => props.background),\n      width: toRef(() => props.imgWidth),\n      height: toRef(() => props.imgHeight)\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        id: unref(computedId),\n        ref: \"_element\",\n        class: normalizeClass([\"carousel slide pointer-event\", computedClasses.value])\n      }, [unref(props).indicators ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: \"carousel-indicators\",\n        \"aria-label\": unref(props).labelIndicators,\n        \"aria-owns\": unref(buttonOwnership)\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(slides.value.length, (_, i) => {\n        var _a;\n        return openBlock(), createElementBlock(\"button\", {\n          key: i,\n          type: \"button\",\n          \"data-bs-target\": \"\",\n          class: normalizeClass(i === modelValue.value ? \"active\" : \"\"),\n          \"aria-current\": i === modelValue.value ? true : void 0,\n          \"aria-label\": `${unref(props).indicatorsButtonLabel} ${i}`,\n          \"aria-controls\": unref(buttonOwnership),\n          \"aria-describedby\": (_a = unref(slideValues)) == null ? void 0 : _a[i]._id,\n          onClick: $event => goToValue(i)\n        }, null, 10, _hoisted_3);\n      }), 128))], 8, _hoisted_2)) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_4, [createVNode(TransitionGroup, {\n        \"enter-from-class\": enterClasses.value,\n        \"enter-active-class\": enterClasses.value,\n        \"enter-to-class\": enterClasses.value,\n        \"leave-from-class\": leaveClasses.value,\n        \"leave-active-class\": leaveClasses.value,\n        \"leave-to-class\": leaveClasses.value,\n        onBeforeLeave,\n        onAfterLeave,\n        onAfterEnter,\n        onEnter\n      }, {\n        default: withCtx(() => [(openBlock(true), createElementBlock(Fragment, null, renderList(slides.value, (slide, i) => {\n          return withDirectives((openBlock(), createBlock(resolveDynamicComponent(slide), {\n            key: i,\n            ref_for: true,\n            ref: \"_slideValues\",\n            class: normalizeClass({\n              active: i === modelValue.value && isTransitioning.value === false\n            }),\n            style: normalizeStyle(unref(props).noAnimation && {\n              transition: \"none\"\n            })\n          }, null, 8, [\"class\", \"style\"])), [[vShow, i === modelValue.value]]);\n        }), 128))]),\n        _: 1\n      }, 8, [\"enter-from-class\", \"enter-active-class\", \"enter-to-class\", \"leave-from-class\", \"leave-active-class\", \"leave-to-class\"])], 512), unref(props).controls ? (openBlock(), createElementBlock(Fragment, {\n        key: 1\n      }, [createElementVNode(\"button\", {\n        class: \"carousel-control-prev\",\n        type: \"button\",\n        onClick: onClickPrev\n      }, [_cache[0] || (_cache[0] = createElementVNode(\"span\", {\n        class: \"carousel-control-prev-icon\",\n        \"aria-hidden\": \"true\"\n      }, null, -1)), createElementVNode(\"span\", _hoisted_5, toDisplayString(unref(props).controlsPrevText), 1)]), createElementVNode(\"button\", {\n        class: \"carousel-control-next\",\n        type: \"button\",\n        onClick: onClickNext\n      }, [_cache[1] || (_cache[1] = createElementVNode(\"span\", {\n        class: \"carousel-control-next-icon\",\n        \"aria-hidden\": \"true\"\n      }, null, -1)), createElementVNode(\"span\", _hoisted_6, toDisplayString(unref(props).controlsNextText), 1)])], 64)) : createCommentVNode(\"\", true)], 10, _hoisted_1$1);\n    };\n  }\n});\nconst _hoisted_1 = [\"id\"];\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BCarouselSlide\",\n  props: {\n    background: {\n      default: void 0\n    },\n    caption: {\n      default: void 0\n    },\n    captionTag: {\n      default: \"h3\"\n    },\n    contentTag: {\n      default: \"div\"\n    },\n    contentVisibleUp: {\n      default: void 0\n    },\n    id: {\n      default: void 0\n    },\n    imgAlt: {\n      default: void 0\n    },\n    imgBlank: {\n      type: Boolean,\n      default: false\n    },\n    imgBlankColor: {\n      default: \"transparent\"\n    },\n    imgHeight: {\n      default: void 0\n    },\n    imgSrc: {\n      default: void 0\n    },\n    imgSrcset: {\n      default: void 0\n    },\n    imgWidth: {\n      default: void 0\n    },\n    interval: {\n      default: void 0\n    },\n    text: {\n      default: void 0\n    },\n    textTag: {\n      default: \"p\"\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCarouselSlide\");\n    const slots = useSlots();\n    const computedId = useId(() => props.id, \"carousel-slide\");\n    const parentData = inject(carouselInjectionKey, null);\n    const hasText = computed(() => props.text || !isEmptySlot(slots.text));\n    const hasCaption = computed(() => props.caption || !isEmptySlot(slots.caption));\n    const hasContent = computed(() => hasText.value || hasCaption.value || !isEmptySlot(slots.default));\n    const computedStyle = computed(() => ({\n      background: `${props.background || (parentData == null ? void 0 : parentData.background.value) || \"rgb(171, 171, 171)\"} none repeat scroll 0% 0%`\n    }));\n    const computedContentClasses = computed(() => ({\n      \"d-none\": props.contentVisibleUp !== void 0,\n      [`d-${props.contentVisibleUp}-block`]: props.contentVisibleUp !== void 0\n    }));\n    __expose({\n      _interval: toRef(() => props.interval),\n      _id: computedId\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        id: unref(computedId),\n        class: \"carousel-item\",\n        style: normalizeStyle(computedStyle.value)\n      }, [renderSlot(_ctx.$slots, \"img\", {}, () => {\n        var _a, _b;\n        return [createVNode(_sfc_main$2, {\n          class: \"d-block w-100\",\n          alt: unref(props).imgAlt,\n          srcset: unref(props).imgSrcset,\n          src: unref(props).imgSrc,\n          width: unref(props).imgWidth || ((_a = unref(parentData)) == null ? void 0 : _a.width.value),\n          height: unref(props).imgHeight || ((_b = unref(parentData)) == null ? void 0 : _b.height.value),\n          blank: unref(props).imgBlank,\n          \"blank-color\": unref(props).imgBlankColor\n        }, null, 8, [\"alt\", \"srcset\", \"src\", \"width\", \"height\", \"blank\", \"blank-color\"])];\n      }), hasContent.value ? (openBlock(), createBlock(resolveDynamicComponent(unref(props).contentTag), {\n        key: 0,\n        class: normalizeClass([\"carousel-caption\", computedContentClasses.value])\n      }, {\n        default: withCtx(() => [hasCaption.value ? (openBlock(), createBlock(resolveDynamicComponent(unref(props).captionTag), {\n          key: 0\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"caption\", {}, () => [createElementVNode(\"span\", null, toDisplayString(unref(props).caption), 1)])]),\n          _: 3\n        })) : createCommentVNode(\"\", true), hasText.value ? (openBlock(), createBlock(resolveDynamicComponent(unref(props).textTag), {\n          key: 1\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"text\", {}, () => [createElementVNode(\"span\", null, toDisplayString(unref(props).text), 1)])]),\n          _: 3\n        })) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\"])) : createCommentVNode(\"\", true)], 12, _hoisted_1);\n    };\n  }\n});\nexport { _sfc_main$1 as _, _sfc_main as a };","map":{"version":3,"names":["getSlotElements","slot","filterBy","reduce","arr","slot2","type","concat","children","push","filter","child","_a","__name","_props","__props","props","useDefaults","emit","__emit","slots","useSlots","computedId","useId","id","buttonOwnership","modelValue","useModel","slideValues","useTemplateRef","touchThresholdNumber","useToNumber","touchThreshold","slideInterval","ref","onMounted","value","_b","find","slid","$el","style","display","_interval","intervalNumber","interval","isTransitioning","rideStarted","direction","relatedTarget","element","previousModelValue","isHovering","useElementHover","enterClasses","computed","leaveClasses","pause","resume","useIntervalFn","rideReverse","prev","next","immediate","ride","isRiding","slides","default","computedClasses","fade","buildBvCarouselEvent","event","BvCarouselEvent","componentId","cancelable","target","from","to","goToValue","length","noWrap","onKeydown","fn","keyboard","onMouseEnter","noHoverPause","onMouseLeave","lengthX","useSwipe","passive","onSwipeStart","noTouch","onSwipeEnd","resumeRiding","onBeforeLeave","onAfterLeave","onAfterEnter","el","classList","add","onEnter","onKeyStroke","watch","newValue","onClickPrev","defaultPrevented","onClickNext","__expose","provide","carouselInjectionKey","background","toRef","width","imgWidth","height","imgHeight","parentData","inject","hasText","text","isEmptySlot","hasCaption","caption","hasContent","computedStyle","computedContentClasses","contentVisibleUp","_id"],"sources":["../src/utils/getSlotElements.ts","../src/components/BCarousel/BCarousel.vue","../src/components/BCarousel/BCarouselSlide.vue"],"sourcesContent":["import type {Slot, VNode} from 'vue'\n\nexport const getSlotElements = (slot: Slot | undefined, filterBy: string): VNode[] =>\n  (slot?.() ?? [])\n    .reduce((arr: VNode[], slot: VNode) => {\n      if (typeof slot.type === 'symbol') {\n        arr = arr.concat(slot.children as unknown as VNode)\n      } else {\n        arr.push(slot)\n      }\n      return arr\n    }, [])\n    .filter((child) => (child.type as {__name: string} | undefined)?.__name === filterBy)\n","<template>\n  <div\n    :id=\"computedId\"\n    ref=\"_element\"\n    class=\"carousel slide pointer-event\"\n    :class=\"computedClasses\"\n  >\n    <div\n      v-if=\"props.indicators\"\n      class=\"carousel-indicators\"\n      :aria-label=\"props.labelIndicators\"\n      :aria-owns=\"buttonOwnership\"\n    >\n      <!-- :data-bs-target=\"`#${computedId}`\" is required since the classes target elems with that attr -->\n      <button\n        v-for=\"(_, i) in slides.length\"\n        :key=\"i\"\n        type=\"button\"\n        data-bs-target=\"\"\n        :class=\"i === modelValue ? 'active' : ''\"\n        :aria-current=\"i === modelValue ? true : undefined\"\n        :aria-label=\"`${props.indicatorsButtonLabel} ${i}`\"\n        :aria-controls=\"buttonOwnership\"\n        :aria-describedby=\"slideValues?.[i]._id\"\n        @click=\"goToValue(i)\"\n      />\n    </div>\n\n    <div ref=\"_relatedTarget\" class=\"carousel-inner\">\n      <TransitionGroup\n        :enter-from-class=\"enterClasses\"\n        :enter-active-class=\"enterClasses\"\n        :enter-to-class=\"enterClasses\"\n        :leave-from-class=\"leaveClasses\"\n        :leave-active-class=\"leaveClasses\"\n        :leave-to-class=\"leaveClasses\"\n        @before-leave=\"onBeforeLeave\"\n        @after-leave=\"onAfterLeave\"\n        @after-enter=\"onAfterEnter\"\n        @enter=\"onEnter\"\n      >\n        <component\n          :is=\"slide\"\n          v-for=\"(slide, i) in slides\"\n          v-show=\"i === modelValue\"\n          :key=\"i\"\n          ref=\"_slideValues\"\n          :class=\"{active: i === modelValue && isTransitioning === false}\"\n          :style=\"props.noAnimation && {transition: 'none'}\"\n        />\n      </TransitionGroup>\n    </div>\n\n    <template v-if=\"props.controls\">\n      <button class=\"carousel-control-prev\" type=\"button\" @click=\"onClickPrev\">\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsPrevText }}</span>\n      </button>\n      <button class=\"carousel-control-next\" type=\"button\" @click=\"onClickNext\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsNextText }}</span>\n      </button>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvCarouselEvent} from '../../utils'\nimport {computed, onMounted, provide, ref, toRef, useTemplateRef, watch} from 'vue'\nimport {useId} from '../../composables/useId'\nimport type {BCarouselProps} from '../../types/ComponentProps'\nimport {onKeyStroke, useElementHover, useIntervalFn, useSwipe, useToNumber} from '@vueuse/core'\nimport type BCarouselSlide from './BCarouselSlide.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {Numberish} from '../../types/CommonTypes'\nimport {getSlotElements} from '../../utils/getSlotElements'\nimport {carouselInjectionKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<Omit<BCarouselProps, 'modelValue'>>(), {\n  background: undefined,\n  controls: false,\n  controlsNextText: 'Next',\n  controlsPrevText: 'Previous',\n  fade: false,\n  id: undefined,\n  imgHeight: undefined,\n  imgWidth: undefined,\n  indicators: false,\n  indicatorsButtonLabel: 'Slide',\n  interval: 5000,\n  labelIndicators: 'Select a slide to display',\n  keyboard: true,\n  noAnimation: false,\n  noHoverPause: false,\n  noTouch: false,\n  noWrap: false,\n  ride: false,\n  rideReverse: false,\n  touchThreshold: 50,\n})\nconst props = useDefaults(_props, 'BCarousel')\n\nconst emit = defineEmits<{\n  'slide': [value: BvCarouselEvent]\n  'slid': [value: BvCarouselEvent]\n  'prev-click': [value: MouseEvent]\n  'next-click': [value: MouseEvent]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel')\nconst buttonOwnership = useId(undefined, 'carousel-button-ownership')\n\nconst modelValue = defineModel<Exclude<BCarouselProps['modelValue'], undefined>>({default: 0})\n\nconst slideValues = useTemplateRef<InstanceType<typeof BCarouselSlide>[]>('_slideValues')\n\nconst touchThresholdNumber = useToNumber(() => props.touchThreshold)\nconst slideInterval = ref<Numberish | null>(null)\nonMounted(() => {\n  slideInterval.value =\n    slideValues.value?.find((slid) => slid.$el.style.display !== 'none')?._interval ?? null\n})\nconst intervalNumber = useToNumber(() => slideInterval.value ?? props.interval)\n\nconst isTransitioning = ref(false)\nconst rideStarted = ref(false)\nconst direction = ref(true)\nconst relatedTarget = useTemplateRef<HTMLElement>('_relatedTarget')\nconst element = useTemplateRef<HTMLElement>('_element')\nconst previousModelValue = ref(modelValue.value)\n\nconst isHovering = useElementHover(element)\n\n// Class carousel-item is a static property\n// If you make it static, the direction can be reversed -- properly (atm it does the carousel-item-${} logic backwards for entering, a weird hack)\n// So all that would be great. However, when you do this, it will break the transition flow. Something about it breaks and I'm not sure why!\n// Try it by removing carousel-item from below and making `!direction.value` => `direction.value` for enter\n// Then reviewing the behavior\nconst enterClasses = computed(\n  () =>\n    `carousel-item carousel-item-${!direction.value ? 'next' : 'prev'} carousel-item-${\n      !direction.value ? 'start' : 'end'\n    }`\n)\nconst leaveClasses = computed(\n  () => `carousel-item active carousel-item-${direction.value ? 'start' : 'end'}`\n)\n\nconst {pause, resume} = useIntervalFn(\n  () => {\n    if (props.rideReverse) {\n      prev()\n      return\n    }\n    next()\n  },\n  intervalNumber,\n  {immediate: props.ride === 'carousel'}\n)\n\nconst isRiding = computed(\n  () => (props.ride === true && rideStarted.value === true) || props.ride === 'carousel'\n)\nconst slides = computed(() => getSlotElements(slots.default, 'BCarouselSlide'))\nconst computedClasses = computed(() => ({'carousel-fade': props.fade}))\n\nconst buildBvCarouselEvent = (event: 'slid' | 'slide') =>\n  new BvCarouselEvent(event, {\n    componentId: computedId.value,\n    cancelable: false,\n    target: element.value,\n    direction: direction.value ? 'right' : 'left',\n    from: previousModelValue.value,\n    to: modelValue.value,\n    relatedTarget: relatedTarget.value?.children[modelValue.value] ?? null,\n  })\n\nconst goToValue = (value: number): void => {\n  if (isTransitioning.value === true) return\n\n  if (props.ride === true) {\n    rideStarted.value = true\n  }\n  if (isRiding.value === true) {\n    resume()\n  }\n  direction.value = value < modelValue.value ? false : true\n  if (value >= slides.value.length) {\n    if (props.noWrap) return\n    modelValue.value = 0\n    return\n  }\n  if (value < 0) {\n    if (props.noWrap) return\n    modelValue.value = slides.value.length - 1\n    return\n  }\n  previousModelValue.value = modelValue.value\n  modelValue.value = value\n}\n\nconst prev = (): void => {\n  goToValue(modelValue.value - 1)\n}\nconst next = (): void => {\n  goToValue(modelValue.value + 1)\n}\n\nconst onKeydown = (fn: () => void) => {\n  if (props.keyboard === false) return\n  fn()\n}\n\nconst onMouseEnter = () => {\n  if (props.noHoverPause) return\n  pause()\n}\nconst onMouseLeave = () => {\n  if (!isRiding.value) return\n  resume()\n}\n\nconst {lengthX} = useSwipe(element, {\n  passive: true,\n  onSwipeStart() {\n    if (props.noTouch === true) return\n    pause()\n  },\n  onSwipeEnd() {\n    if (props.noTouch === true) return\n    const resumeRiding = () => {\n      if (isRiding.value === false) return\n      resume()\n    }\n    if (lengthX.value >= touchThresholdNumber.value) {\n      next()\n      resumeRiding()\n      return\n    }\n    if (lengthX.value <= -touchThresholdNumber.value) {\n      prev()\n      resumeRiding()\n    }\n  },\n})\n\nconst onBeforeLeave = () => {\n  emit('slide', buildBvCarouselEvent('slide'))\n  isTransitioning.value = true\n}\nconst onAfterLeave = () => {\n  emit('slid', buildBvCarouselEvent('slid'))\n  isTransitioning.value = false\n}\n// carousel-item class is removed from the slide during the transition,\n// as is included within enter classes.\n// The first slide recovers carousel-item class,\nconst onAfterEnter = (el: Readonly<Element>) => {\n  if (modelValue.value !== 0) {\n    el.classList.add('carousel-item')\n  }\n}\nconst onEnter = (el: Readonly<Element>) => {\n  slideInterval.value = slideValues.value?.find((slid) => slid.$el === el)?._interval ?? null\n}\n\nonKeyStroke(\n  'ArrowLeft',\n  () => {\n    onKeydown(prev)\n  },\n  {target: element}\n)\nonKeyStroke(\n  'ArrowRight',\n  () => {\n    onKeydown(next)\n  },\n  {target: element}\n)\n\nwatch(\n  () => props.ride,\n  () => {\n    rideStarted.value = false\n  }\n)\n\nwatch(isHovering, (newValue) => {\n  if (newValue) {\n    onMouseEnter()\n    return\n  }\n  onMouseLeave()\n})\n\nconst onClickPrev = (event: MouseEvent) => {\n  emit('prev-click', event)\n  if (event.defaultPrevented) return\n  prev()\n}\nconst onClickNext = (event: MouseEvent) => {\n  emit('next-click', event)\n  if (event.defaultPrevented) return\n  next()\n}\n\ndefineExpose({\n  next,\n  pause,\n  prev,\n  resume,\n})\n\nprovide(carouselInjectionKey, {\n  background: toRef(() => props.background),\n  width: toRef(() => props.imgWidth),\n  height: toRef(() => props.imgHeight),\n})\n</script>\n","<template>\n  <div :id=\"computedId\" class=\"carousel-item\" :style=\"computedStyle\">\n    <slot name=\"img\">\n      <BImg\n        class=\"d-block w-100\"\n        :alt=\"props.imgAlt\"\n        :srcset=\"props.imgSrcset\"\n        :src=\"props.imgSrc\"\n        :width=\"props.imgWidth || parentData?.width.value\"\n        :height=\"props.imgHeight || parentData?.height.value\"\n        :blank=\"props.imgBlank\"\n        :blank-color=\"props.imgBlankColor\"\n      />\n    </slot>\n    <component\n      :is=\"props.contentTag\"\n      v-if=\"hasContent\"\n      class=\"carousel-caption\"\n      :class=\"computedContentClasses\"\n    >\n      <component :is=\"props.captionTag\" v-if=\"hasCaption\">\n        <slot name=\"caption\">\n          <span>{{ props.caption }}</span>\n        </slot>\n      </component>\n      <component :is=\"props.textTag\" v-if=\"hasText\">\n        <slot name=\"text\">\n          <span>{{ props.text }}</span>\n        </slot>\n      </component>\n      <slot />\n    </component>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type CSSProperties, inject, toRef} from 'vue'\nimport type {BCarouselSlideProps} from '../../types/ComponentProps'\nimport {carouselInjectionKey} from '../../utils/keys'\nimport BImg from '../BImg/BImg.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useId} from '../../composables/useId'\n\nconst _props = withDefaults(defineProps<BCarouselSlideProps>(), {\n  background: undefined,\n  caption: undefined,\n  captionTag: 'h3',\n  contentTag: 'div',\n  contentVisibleUp: undefined,\n  id: undefined,\n  imgAlt: undefined,\n  imgBlank: false,\n  imgBlankColor: 'transparent',\n  imgHeight: undefined,\n  imgSrc: undefined,\n  imgSrcset: undefined,\n  imgWidth: undefined,\n  interval: undefined,\n  text: undefined,\n  textTag: 'p',\n})\nconst props = useDefaults(_props, 'BCarouselSlide')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  caption?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  img?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  text?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel-slide')\nconst parentData = inject(carouselInjectionKey, null)\n\nconst hasText = computed(() => props.text || !isEmptySlot(slots.text))\nconst hasCaption = computed(() => props.caption || !isEmptySlot(slots.caption))\nconst hasContent = computed(() => hasText.value || hasCaption.value || !isEmptySlot(slots.default))\n\nconst computedStyle = computed<CSSProperties>(() => ({\n  background: `${\n    props.background || parentData?.background.value || 'rgb(171, 171, 171)'\n  } none repeat scroll 0% 0%`,\n}))\n\nconst computedContentClasses = computed(() => ({\n  'd-none': props.contentVisibleUp !== undefined,\n  [`d-${props.contentVisibleUp}-block`]: props.contentVisibleUp !== undefined,\n}))\n\ndefineExpose({\n  _interval: toRef(() => props.interval),\n  _id: computedId,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}