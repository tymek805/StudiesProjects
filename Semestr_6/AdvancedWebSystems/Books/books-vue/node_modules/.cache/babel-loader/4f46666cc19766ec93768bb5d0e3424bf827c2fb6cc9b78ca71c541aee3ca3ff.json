{"ast":null,"code":"import { computed, toValue } from \"vue\";\nconst useStateClass = value => computed(() => {\n  const resolvedValue = toValue(value);\n  return resolvedValue === true ? \"is-valid\" : resolvedValue === false ? \"is-invalid\" : null;\n});\nexport { useStateClass as u };","map":{"version":3,"names":["useStateClass","value","computed","resolvedValue","toValue"],"sources":["../src/composables/useStateClass.ts"],"sourcesContent":["import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport type {ValidationState} from '../types/CommonTypes'\n\nexport const useStateClass = (value: MaybeRefOrGetter<ValidationState>) =>\n  computed(() => {\n    const resolvedValue = toValue(value)\n\n    return resolvedValue === true ? 'is-valid' : resolvedValue === false ? 'is-invalid' : null\n  })\n"],"mappings":";AAGO,MAAMA,aAAA,GAAiBC,KAAA,IAC5BC,QAAA,CAAS,MAAM;EACP,MAAAC,aAAA,GAAgBC,OAAA,CAAQH,KAAK;EAEnC,OAAOE,aAAA,KAAkB,OAAO,aAAaA,aAAA,KAAkB,QAAQ,eAAe;AACxF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}