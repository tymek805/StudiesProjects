{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { defineComponent, mergeModels, useSlots, useTemplateRef, useModel, computed, watchEffect, watch, createBlock, createCommentVNode, unref, openBlock, Transition, mergeProps, withCtx, withDirectives, createElementVNode, normalizeClass, resolveDynamicComponent, renderSlot, toDisplayString, createTextVNode, vShow, createElementBlock, Fragment, renderList, createVNode, TransitionGroup } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useBLinkHelper, _ as _sfc_main$2 } from \"./BLink.vue_vue_type_script_setup_true_lang-CinzoAgQ.mjs\";\nimport { _ as _sfc_main$3 } from \"./BCloseButton.vue_vue_type_script_setup_true_lang-Dh0Odbqa.mjs\";\nimport { _ as _sfc_main$4 } from \"./BProgress.vue_vue_type_script_setup_true_lang-csJop4n-.mjs\";\nimport { u as useCountdown, a as useCountdownHover } from \"./useCountdownHover-BZ6NmVEL.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { u as useShowHide } from \"./useShowHide-DHtnuxfQ.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nimport { _ as _sfc_main$5 } from \"./ConditionalTeleport.vue_vue_type_script_lang-2PJ2jBTg.mjs\";\nimport { useToastController } from \"./src/composables/useToastController/index.mjs\";\nconst _hoisted_1 = [\"id\", \"role\", \"aria-live\", \"aria-atomic\"];\nconst _hoisted_2 = {\n  class: \"me-auto\"\n};\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BToast\",\n  props: /* @__PURE__ */mergeModels({\n    body: {\n      default: void 0\n    },\n    bodyClass: {\n      default: void 0\n    },\n    headerClass: {\n      default: void 0\n    },\n    headerTag: {\n      default: \"div\"\n    },\n    id: {\n      default: void 0\n    },\n    interval: {\n      default: \"requestAnimationFrame\"\n    },\n    isStatus: {\n      type: Boolean,\n      default: false\n    },\n    noCloseButton: {\n      type: Boolean,\n      default: false\n    },\n    noHoverPause: {\n      type: Boolean,\n      default: false\n    },\n    noResumeOnHoverLeave: {\n      type: Boolean,\n      default: false\n    },\n    progressProps: {\n      default: void 0\n    },\n    showOnPause: {\n      type: Boolean,\n      default: true\n    },\n    solid: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      default: void 0\n    },\n    toastClass: {\n      default: void 0\n    },\n    variant: {\n      default: void 0\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    },\n    active: {\n      type: Boolean,\n      default: void 0\n    },\n    activeClass: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: void 0\n    },\n    exactActiveClass: {\n      default: void 0\n    },\n    href: {\n      default: void 0\n    },\n    icon: {\n      type: Boolean,\n      default: void 0\n    },\n    noRel: {\n      type: Boolean,\n      default: void 0\n    },\n    opacity: {\n      default: void 0\n    },\n    opacityHover: {\n      default: void 0\n    },\n    prefetch: {\n      type: Boolean\n    },\n    prefetchOn: {},\n    noPrefetch: {\n      type: Boolean\n    },\n    prefetchedClass: {},\n    rel: {\n      default: void 0\n    },\n    replace: {\n      type: Boolean,\n      default: void 0\n    },\n    routerComponentName: {\n      default: void 0\n    },\n    stretched: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      default: void 0\n    },\n    to: {\n      default: void 0\n    },\n    underlineOffset: {\n      default: void 0\n    },\n    underlineOffsetHover: {\n      default: void 0\n    },\n    underlineOpacity: {\n      default: void 0\n    },\n    underlineOpacityHover: {\n      default: void 0\n    },\n    underlineVariant: {\n      default: void 0\n    },\n    initialAnimation: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      type: Boolean\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    transProps: {\n      default: void 0\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  }, {\n    \"modelValue\": {\n      type: [Boolean, Number],\n      ...{\n        default: false\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"close\", \"close-countdown\", \"hide\", \"hide-prevented\", \"hidden\", \"show\", \"show-prevented\", \"shown\", \"toggle\", \"toggle-prevented\"], [\"update:modelValue\"]),\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BToast\");\n    const emit = __emit;\n    const slots = useSlots();\n    const element = useTemplateRef(\"_element\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const {\n      computedLink,\n      computedLinkProps\n    } = useBLinkHelper(props);\n    const computedId = useId(() => props.id, \"toast\");\n    const {\n      showRef,\n      renderRef,\n      hide,\n      toggle,\n      show,\n      buildTriggerableEvent,\n      computedNoAnimation,\n      isVisible,\n      transitionProps,\n      contentShowing\n    } = useShowHide(modelValue, props, emit, element, computedId);\n    const countdownLength = computed(() => typeof modelValue.value === \"boolean\" ? 0 : modelValue.value);\n    const {\n      isActive,\n      pause,\n      restart,\n      resume,\n      stop,\n      isPaused,\n      value: remainingMs\n    } = useCountdown(countdownLength, props.interval, {\n      immediate: typeof modelValue.value === \"number\" && !!modelValue.value\n    });\n    useCountdownHover(element, computed(() => ({\n      noHoverPause: props.noHoverPause || typeof modelValue.value !== \"number\",\n      noResumeOnHoverLeave: props.noResumeOnHoverLeave || typeof modelValue.value !== \"number\",\n      modelValueIgnoresHover: typeof modelValue.value === \"boolean\"\n    })), {\n      pause,\n      resume\n    });\n    watchEffect(() => {\n      emit(\"close-countdown\", remainingMs.value);\n    });\n    const computedTag = computed(() => computedLink.value ? _sfc_main$2 : \"div\");\n    const isToastVisible = computed(() => showRef.value || isActive.value || props.showOnPause && isPaused.value);\n    const colorClasses = useColorVariantClasses(props);\n    const computedClasses = computed(() => [colorClasses.value, {\n      show: isVisible.value,\n      fade: !computedNoAnimation.value\n    }]);\n    watch(modelValue, newValue => {\n      if (typeof newValue === \"number\") {\n        const event = buildTriggerableEvent(\"show\", {\n          cancelable: true,\n          trigger: \"model\"\n        });\n        emit(\"show\", event);\n        if (event.defaultPrevented) {\n          emit(\"show-prevented\", buildTriggerableEvent(\"show-prevented\"));\n        } else {\n          restart();\n        }\n      }\n    });\n    watch(isActive, newValue => {\n      if (newValue === false && isPaused.value === false) {\n        hide();\n        modelValue.value = 0;\n        stop();\n      }\n    });\n    __expose({\n      show,\n      hide,\n      toggle,\n      pause,\n      restart,\n      resume,\n      stop\n    });\n    return (_ctx, _cache) => {\n      return unref(renderRef) || unref(contentShowing) ? (openBlock(), createBlock(Transition, mergeProps({\n        key: 0\n      }, unref(transitionProps), {\n        appear: !!modelValue.value || unref(props).visible\n      }), {\n        default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n          id: unref(props).id,\n          ref: \"_element\",\n          class: normalizeClass([\"toast\", [unref(props).toastClass, computedClasses.value]]),\n          tabindex: \"0\",\n          role: !isToastVisible.value ? void 0 : unref(props).isStatus ? \"status\" : \"alert\",\n          \"aria-live\": !isToastVisible.value ? void 0 : unref(props).isStatus ? \"polite\" : \"assertive\",\n          \"aria-atomic\": !isToastVisible.value ? void 0 : true\n        }, [unref(contentShowing) && (slots.title || unref(props).title) ? (openBlock(), createBlock(resolveDynamicComponent(unref(props).headerTag), {\n          key: 0,\n          class: normalizeClass([\"toast-header\", unref(props).headerClass])\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"title\", {\n            hide: unref(hide)\n          }, () => [createElementVNode(\"strong\", _hoisted_2, toDisplayString(unref(props).title), 1)], true), !unref(props).noCloseButton ? (openBlock(), createBlock(_sfc_main$3, {\n            key: 0,\n            onClick: _cache[0] || (_cache[0] = $event => unref(hide)(\"close\"))\n          })) : createCommentVNode(\"\", true)]),\n          _: 3\n        }, 8, [\"class\"])) : createCommentVNode(\"\", true), unref(contentShowing) && (slots.default || unref(props).body) ? (openBlock(), createBlock(resolveDynamicComponent(computedTag.value), mergeProps({\n          key: 1,\n          class: [\"toast-body\", unref(props).bodyClass],\n          style: {\n            \"display\": \"block\"\n          }\n        }, unref(computedLinkProps), {\n          onClick: _cache[1] || (_cache[1] = $event => unref(computedLink) ? unref(hide)() : () => {})\n        }), {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n            hide: unref(hide)\n          }, () => [createTextVNode(toDisplayString(unref(props).body), 1)], true)]),\n          _: 3\n        }, 16, [\"class\"])) : createCommentVNode(\"\", true), typeof modelValue.value === \"number\" && unref(props).progressProps !== void 0 ? (openBlock(), createBlock(_sfc_main$4, {\n          key: 2,\n          animated: unref(props).progressProps.animated,\n          precision: unref(props).progressProps.precision,\n          \"show-progress\": unref(props).progressProps.showProgress,\n          \"show-value\": unref(props).progressProps.showValue,\n          striped: unref(props).progressProps.striped,\n          variant: unref(props).progressProps.variant,\n          max: modelValue.value,\n          value: unref(remainingMs),\n          height: \"4px\"\n        }, null, 8, [\"animated\", \"precision\", \"show-progress\", \"show-value\", \"striped\", \"variant\", \"max\", \"value\"])) : createCommentVNode(\"\", true)], 10, _hoisted_1), [[vShow, isToastVisible.value]])]),\n        _: 3\n      }, 16, [\"appear\"])) : createCommentVNode(\"\", true);\n    };\n  }\n});\nconst BToast = /* @__PURE__ */_export_sfc(_sfc_main$1, [[\"__scopeId\", \"data-v-eeb0e3de\"]]);\nconst positionClasses = {\n  \"top-start\": \"top-0 start-0\",\n  \"top-center\": \"top-0 start-50 translate-middle-x\",\n  \"top-end\": \"top-0 end-0\",\n  \"middle-start\": \"top-50 start-0 translate-middle-y\",\n  \"middle-center\": \"top-50 start-50 translate-middle\",\n  \"middle-end\": \"top-50 end-0 translate-middle-y\",\n  \"bottom-start\": \"bottom-0 start-0\",\n  \"bottom-center\": \"bottom-0 start-50 translate-middle-x\",\n  \"bottom-end\": \"bottom-0 end-0\"\n};\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BToastOrchestrator\",\n  props: {\n    appendToast: {\n      type: Boolean,\n      default: false\n    },\n    teleportDisabled: {\n      type: Boolean,\n      default: false\n    },\n    teleportTo: {\n      default: \"body\"\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BToastOrchestrator\");\n    const tools = useToastController();\n    watch(() => props.appendToast, value => {\n      var _a;\n      (_a = tools._setIsAppend) == null ? void 0 : _a.call(tools, value);\n    }, {\n      immediate: true\n    });\n    __expose({\n      ...tools\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$5, {\n        to: unref(props).teleportTo,\n        disabled: unref(props).teleportDisabled\n      }, {\n        default: withCtx(() => [createElementVNode(\"div\", mergeProps({\n          id: \"__BVID__toaster-container\"\n        }, _ctx.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(positionClasses), (value, key) => {\n          return openBlock(), createElementBlock(\"div\", {\n            key,\n            class: normalizeClass([value, \"toast-container position-fixed p-3\"])\n          }, [createVNode(TransitionGroup, {\n            name: \"b-list\"\n          }, {\n            default: withCtx(() => {\n              var _a;\n              return [(openBlock(true), createElementBlock(Fragment, null, renderList((_a = unref(tools).toasts) == null ? void 0 : _a.value.filter(el => el.props.pos === key), toast => {\n                return openBlock(), createElementBlock(\"span\", {\n                  key: toast.props._self\n                }, [(openBlock(), createBlock(resolveDynamicComponent(toast.component ?? BToast), mergeProps({\n                  ref_for: true\n                }, toast.props, {\n                  \"model-value\": toast.props._modelValue,\n                  \"initial-animation\": \"\",\n                  \"onUpdate:modelValue\": $event => {\n                    var _a2, _b;\n                    return (_b = (_a2 = unref(tools)).leave) == null ? void 0 : _b.call(_a2, toast.props._self);\n                  },\n                  onHidden: $event => {\n                    var _a2, _b;\n                    return (_b = (_a2 = unref(tools)).remove) == null ? void 0 : _b.call(_a2, toast.props._self);\n                  }\n                }), null, 16, [\"model-value\", \"onUpdate:modelValue\", \"onHidden\"]))]);\n              }), 128))];\n            }),\n            _: 2\n          }, 1024)], 2);\n        }), 128))], 16)]),\n        _: 1\n      }, 8, [\"to\", \"disabled\"]);\n    };\n  }\n});\nexport { BToast as B, _sfc_main as _ };","map":{"version":3,"names":["_props","__props","props","useDefaults","emit","__emit","slots","useSlots","element","useTemplateRef","modelValue","useModel","computedLink","computedLinkProps","useBLinkHelper","computedId","useId","id","showRef","renderRef","hide","toggle","show","buildTriggerableEvent","computedNoAnimation","isVisible","transitionProps","contentShowing","useShowHide","countdownLength","computed","value","isActive","pause","restart","resume","stop","isPaused","remainingMs","useCountdown","interval","immediate","useCountdownHover","noHoverPause","noResumeOnHoverLeave","modelValueIgnoresHover","watchEffect","computedTag","_sfc_main$2","isToastVisible","showOnPause","colorClasses","useColorVariantClasses","computedClasses","fade","watch","newValue","event","cancelable","trigger","defaultPrevented","__expose","positionClasses","tools","useToastController","appendToast","_a","_setIsAppend","call"],"sources":["../src/components/BToast/BToast.vue","../src/utils/positionClasses.ts","../src/components/BToast/BToastOrchestrator.vue"],"sourcesContent":["<template>\n  <Transition\n    v-if=\"renderRef || contentShowing\"\n    v-bind=\"transitionProps\"\n    :appear=\"!!modelValue || props.visible\"\n  >\n    <div\n      v-show=\"isToastVisible\"\n      :id=\"props.id\"\n      ref=\"_element\"\n      class=\"toast\"\n      :class=\"[props.toastClass, computedClasses]\"\n      tabindex=\"0\"\n      :role=\"!isToastVisible ? undefined : props.isStatus ? 'status' : 'alert'\"\n      :aria-live=\"!isToastVisible ? undefined : props.isStatus ? 'polite' : 'assertive'\"\n      :aria-atomic=\"!isToastVisible ? undefined : true\"\n    >\n      <component\n        :is=\"props.headerTag\"\n        v-if=\"contentShowing && (slots.title || props.title)\"\n        class=\"toast-header\"\n        :class=\"props.headerClass\"\n      >\n        <slot name=\"title\" :hide=\"hide\">\n          <strong class=\"me-auto\">\n            {{ props.title }}\n          </strong>\n        </slot>\n        <BCloseButton v-if=\"!props.noCloseButton\" @click=\"hide('close')\" />\n      </component>\n      <template v-if=\"contentShowing && (slots.default || props.body)\">\n        <component\n          :is=\"computedTag\"\n          class=\"toast-body\"\n          style=\"display: block\"\n          :class=\"props.bodyClass\"\n          v-bind=\"computedLinkProps\"\n          @click=\"computedLink ? hide() : () => {}\"\n        >\n          <slot :hide=\"hide\">\n            {{ props.body }}\n          </slot>\n        </component>\n      </template>\n      <BProgress\n        v-if=\"typeof modelValue === 'number' && props.progressProps !== undefined\"\n        :animated=\"props.progressProps.animated\"\n        :precision=\"props.progressProps.precision\"\n        :show-progress=\"props.progressProps.showProgress\"\n        :show-value=\"props.progressProps.showValue\"\n        :striped=\"props.progressProps.striped\"\n        :variant=\"props.progressProps.variant\"\n        :max=\"modelValue\"\n        :value=\"remainingMs\"\n        height=\"4px\"\n      />\n    </div>\n  </Transition>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type EmitFn, useTemplateRef, watch, watchEffect} from 'vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport type {BToastProps} from '../../types/ComponentProps'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport BLink from '../BLink/BLink.vue'\nimport BProgress from '../BProgress/BProgress.vue'\nimport {BvTriggerableEvent} from '../../utils'\nimport {useCountdown} from '../../composables/useCountdown'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useCountdownHover} from '../../composables/useCountdownHover'\nimport {useId} from '../../composables/useId'\nimport {type showHideEmits, useShowHide} from '../../composables/useShowHide'\n\nconst _props = withDefaults(defineProps<Omit<BToastProps, 'modelValue'>>(), {\n  bgVariant: null,\n  body: undefined,\n  bodyClass: undefined,\n  headerClass: undefined,\n  headerTag: 'div',\n  id: undefined,\n  initialAnimation: false,\n  interval: 'requestAnimationFrame',\n  isStatus: false,\n  lazy: false,\n  noCloseButton: false,\n  noFade: false,\n  noHoverPause: false,\n  noResumeOnHoverLeave: false,\n  progressProps: undefined,\n  unmountLazy: false,\n  showOnPause: true,\n  show: false,\n  solid: false,\n  textVariant: null,\n  title: undefined,\n  toastClass: undefined,\n  transProps: undefined,\n  visible: false,\n  // Link props\n  // All others use defaults\n  noRel: undefined,\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  icon: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  stretched: false,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  variant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BToast')\n\nconst emit = defineEmits<\n  {\n    'close': [value: BvTriggerableEvent]\n    'close-countdown': [value: number]\n  } & showHideEmits\n>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  title?: (props: {hide: (trigger?: string) => void}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: {hide: (trigger?: string) => void}) => any\n}>()\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst modelValue = defineModel<Exclude<BToastProps['modelValue'], undefined>>({default: false})\nconst {computedLink, computedLinkProps} = useBLinkHelper(props)\n\nconst computedId = useId(() => props.id, 'toast')\n\nconst {\n  showRef,\n  renderRef,\n  hide,\n  toggle,\n  show,\n  buildTriggerableEvent,\n  computedNoAnimation,\n  isVisible,\n  transitionProps,\n  contentShowing,\n} = useShowHide(modelValue, props, emit as EmitFn, element, computedId)\n\n// TODO solid is never used\nconst countdownLength = computed(() =>\n  typeof modelValue.value === 'boolean' ? 0 : modelValue.value\n)\n\nconst {\n  isActive,\n  pause,\n  restart,\n  resume,\n  stop,\n  isPaused,\n  value: remainingMs,\n} = useCountdown(countdownLength, props.interval, {\n  immediate: typeof modelValue.value === 'number' && !!modelValue.value,\n})\nuseCountdownHover(\n  element,\n  computed(() => ({\n    noHoverPause: props.noHoverPause || typeof modelValue.value !== 'number',\n    noResumeOnHoverLeave: props.noResumeOnHoverLeave || typeof modelValue.value !== 'number',\n    modelValueIgnoresHover: typeof modelValue.value === 'boolean',\n  })),\n  {pause, resume}\n)\n\nwatchEffect(() => {\n  emit('close-countdown', remainingMs.value)\n})\n\nconst computedTag = computed(() => (computedLink.value ? BLink : 'div'))\n\nconst isToastVisible = computed(\n  () => showRef.value || isActive.value || (props.showOnPause && isPaused.value)\n)\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    show: isVisible.value,\n    fade: !computedNoAnimation.value,\n  },\n])\n\nwatch(modelValue, (newValue) => {\n  if (typeof newValue === 'number') {\n    const event = buildTriggerableEvent('show', {cancelable: true, trigger: 'model'})\n    emit('show', event)\n    if (event.defaultPrevented) {\n      emit('show-prevented', buildTriggerableEvent('show-prevented'))\n    } else {\n      restart()\n    }\n  }\n})\n\n// isActive in the composable will cause the toast to hide when the countdown is done\nwatch(isActive, (newValue) => {\n  if (newValue === false && isPaused.value === false) {\n    hide()\n    modelValue.value = 0\n    stop()\n  }\n})\n\ndefineExpose({\n  show,\n  hide,\n  toggle,\n  pause,\n  restart,\n  resume,\n  stop,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.toast :deep(.progress .progress-bar) {\n  --bs-progress-bar-transition: none;\n}\n.toast:not(.show) {\n  display: block;\n  opacity: unset;\n}\n.toast.fade:not(.show) {\n  opacity: 0;\n}\n</style>\n","import type {ContainerPosition} from '../types/Alignment'\n\nexport const positionClasses = {\n  'top-start': 'top-0 start-0',\n  'top-center': 'top-0 start-50 translate-middle-x',\n  'top-end': 'top-0 end-0',\n  'middle-start': 'top-50 start-0 translate-middle-y',\n  'middle-center': 'top-50 start-50 translate-middle',\n  'middle-end': 'top-50 end-0 translate-middle-y',\n  'bottom-start': 'bottom-0 start-0',\n  'bottom-center': 'bottom-0 start-50 translate-middle-x',\n  'bottom-end': 'bottom-0 end-0',\n} as const satisfies Record<ContainerPosition, string>\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__toaster-container\" v-bind=\"$attrs\">\n      <div\n        v-for=\"(value, key) in positionClasses\"\n        :key\n        :class=\"value\"\n        class=\"toast-container position-fixed p-3\"\n      >\n        <TransitionGroup name=\"b-list\">\n          <span\n            v-for=\"toast in tools.toasts?.value.filter((el) => el.props.pos === key)\"\n            :key=\"toast.props._self\"\n          >\n            <component\n              :is=\"toast.component ?? BToast\"\n              v-bind=\"toast.props\"\n              :model-value=\"toast.props._modelValue\"\n              initial-animation\n              @update:model-value=\"tools.leave?.(toast.props._self)\"\n              @hidden=\"tools.remove?.(toast.props._self)\"\n            />\n          </span>\n        </TransitionGroup>\n      </div>\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {watch} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {positionClasses} from '../../utils/positionClasses'\nimport type {BToastOrchestratorProps} from '../../types/ComponentProps'\nimport BToast from './BToast.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useToastController} from '../../composables/useToastController'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BToastOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n  appendToast: false,\n})\nconst props = useDefaults(_props, 'BToastOrchestrator')\n\nconst tools = useToastController()\n\nwatch(\n  () => props.appendToast,\n  (value) => {\n    tools._setIsAppend?.(value)\n  },\n  {immediate: true}\n)\n\ndefineExpose({\n  ...tools,\n})\n</script>\n\n<style lang=\"scss\">\n/*\nIf you remove the last element in the list, the animation goes farther to the right then normal.\nI don't know why\nI kind of like it though, and even if I didn't, I don't know how to get rid of it.\nGetting the transitions to work here was basically all trial and error.\nI think it's because it's \"moving\", but I don't know where it's moving to\n*/\n.b-list-move,\n.b-list-enter-active,\n.b-list-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.b-list-enter-from,\n.b-list-leave-to {\n  opacity: 0; // TODO this should be the responsibility of the child\n}\n.b-list-leave-active {\n  position: fixed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}