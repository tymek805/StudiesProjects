{"ast":null,"code":"import { defineComponent, mergeModels, useSlots, useModel, useTemplateRef, computed, watch, createBlock, openBlock, unref, withCtx, createCommentVNode, renderSlot, Transition, mergeProps, withDirectives, createElementVNode, withModifiers, createElementBlock, normalizeClass, normalizeProps, guardReactiveProps, resolveDynamicComponent, createTextVNode, toDisplayString, Fragment, createVNode, vShow, normalizeStyle, renderList } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { o as onKeyStroke, u as useFocus } from \"./index-cC189kCW.mjs\";\nimport { a as useActivatedFocusTrap, u as useSafeScrollLock } from \"./useSafeScrollLock-iJTRWqXi.mjs\";\nimport { _ as _sfc_main$3 } from \"./BButton.vue_vue_type_script_setup_true_lang-ByjfGDl1.mjs\";\nimport { _ as _sfc_main$4 } from \"./BCloseButton.vue_vue_type_script_setup_true_lang-Dh0Odbqa.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { a as useModalManager } from \"./useModalManager-tL74pLur.mjs\";\nimport { u as useShowHide } from \"./useShowHide-DHtnuxfQ.mjs\";\nimport { _ as _sfc_main$2 } from \"./ConditionalTeleport.vue_vue_type_script_lang-2PJ2jBTg.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nimport { useModalController } from \"./src/composables/useModalController/index.mjs\";\nconst _hoisted_1 = [\"id\", \"aria-labelledby\", \"aria-describedby\"];\nconst _hoisted_2 = [\"id\"];\nconst fallbackClassSelector = \"modal-fallback-focus\";\nconst defaultModalDialogZIndex = 1056;\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BModal\",\n  props: /* @__PURE__ */mergeModels({\n    autofocus: {\n      type: Boolean,\n      default: true\n    },\n    autofocusButton: {\n      default: void 0\n    },\n    backdropFirst: {\n      type: Boolean,\n      default: false\n    },\n    body: {\n      default: void 0\n    },\n    bodyAttrs: {\n      default: void 0\n    },\n    bodyBgVariant: {\n      default: null\n    },\n    bodyClass: {\n      default: null\n    },\n    bodyScrolling: {\n      type: Boolean,\n      default: false\n    },\n    bodyTextVariant: {\n      default: null\n    },\n    bodyVariant: {\n      default: null\n    },\n    busy: {\n      type: Boolean,\n      default: false\n    },\n    buttonSize: {\n      default: \"md\"\n    },\n    cancelDisabled: {\n      type: Boolean,\n      default: false\n    },\n    cancelTitle: {\n      default: \"Cancel\"\n    },\n    cancelVariant: {\n      default: \"secondary\"\n    },\n    centered: {\n      type: Boolean,\n      default: false\n    },\n    contentClass: {\n      default: void 0\n    },\n    dialogClass: {\n      default: void 0\n    },\n    footerBgVariant: {\n      default: null\n    },\n    footerBorderVariant: {\n      default: null\n    },\n    footerClass: {\n      default: void 0\n    },\n    footerTextVariant: {\n      default: null\n    },\n    footerVariant: {\n      default: null\n    },\n    fullscreen: {\n      type: [Boolean, String],\n      default: false\n    },\n    headerBgVariant: {\n      default: null\n    },\n    headerBorderVariant: {\n      default: null\n    },\n    headerClass: {\n      default: void 0\n    },\n    headerCloseClass: {\n      default: void 0\n    },\n    headerCloseLabel: {\n      default: \"Close\"\n    },\n    headerCloseVariant: {\n      default: \"secondary\"\n    },\n    headerTextVariant: {\n      default: null\n    },\n    headerVariant: {\n      default: null\n    },\n    noBackdrop: {\n      type: Boolean,\n      default: false\n    },\n    noFooter: {\n      type: Boolean,\n      default: false\n    },\n    noHeader: {\n      type: Boolean,\n      default: false\n    },\n    noHeaderClose: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    modalClass: {\n      default: void 0\n    },\n    noCloseOnBackdrop: {\n      type: Boolean,\n      default: false\n    },\n    noCloseOnEsc: {\n      type: Boolean,\n      default: false\n    },\n    noTrap: {\n      type: Boolean,\n      default: false\n    },\n    noStacking: {\n      type: Boolean\n    },\n    okDisabled: {\n      type: Boolean,\n      default: false\n    },\n    okOnly: {\n      type: Boolean,\n      default: false\n    },\n    okTitle: {\n      default: \"OK\"\n    },\n    okVariant: {\n      default: \"primary\"\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      default: \"md\"\n    },\n    title: {\n      default: void 0\n    },\n    titleClass: {\n      default: void 0\n    },\n    titleVisuallyHidden: {\n      type: Boolean,\n      default: false\n    },\n    titleTag: {\n      default: \"h5\"\n    },\n    teleportDisabled: {\n      type: Boolean,\n      default: false\n    },\n    teleportTo: {\n      default: \"body\"\n    },\n    initialAnimation: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      type: Boolean\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    transProps: {\n      default: void 0\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  }, {\n    \"modelValue\": {\n      type: Boolean,\n      ...{\n        default: false\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"backdrop\", \"cancel\", \"close\", \"esc\", \"ok\", \"hide\", \"hide-prevented\", \"hidden\", \"show\", \"show-prevented\", \"shown\", \"toggle\", \"toggle-prevented\"], [\"update:modelValue\"]),\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BModal\");\n    const emit = __emit;\n    const slots = useSlots();\n    const computedId = useId(() => props.id, \"modal\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const element = useTemplateRef(\"_element\");\n    const fallbackFocusElement = useTemplateRef(\"_fallbackFocusElement\");\n    const okButton = useTemplateRef(\"_okButton\");\n    const cancelButton = useTemplateRef(\"_cancelButton\");\n    const closeButton = useTemplateRef(\"_closeButton\");\n    const pickFocusItem = () => {\n      if (props.autofocus === false) return;\n      if (props.autofocusButton === \"ok\") {\n        okButtonFocus.value = true;\n      } else if (props.autofocusButton === \"close\") {\n        closeButtonFocus.value = true;\n      } else if (props.autofocusButton === \"cancel\") {\n        cancelButtonFocus.value = true;\n      } else {\n        modalFocus.value = true;\n      }\n    };\n    const onAfterEnter = () => {\n      pickFocusItem();\n    };\n    const {\n      showRef,\n      renderRef,\n      renderBackdropRef,\n      hide,\n      show,\n      toggle,\n      computedNoAnimation,\n      transitionProps,\n      backdropTransitionProps,\n      isLeaving,\n      isVisible,\n      trapActive,\n      contentShowing,\n      backdropReady,\n      backdropVisible\n    } = useShowHide(modelValue, props, emit, element, computedId, {\n      // addShowClass: false,\n      transitionProps: {\n        onAfterEnter\n      }\n    });\n    const {\n      needsFallback\n    } = useActivatedFocusTrap({\n      element,\n      isActive: trapActive,\n      noTrap: () => props.noTrap,\n      fallbackFocus: {\n        ref: fallbackFocusElement,\n        classSelector: fallbackClassSelector\n      }\n    });\n    onKeyStroke(\"Escape\", () => {\n      hide(\"esc\");\n    }, {\n      target: element\n    });\n    useSafeScrollLock(showRef, () => props.bodyScrolling);\n    const {\n      focused: modalFocus\n    } = useFocus(element, {\n      initialValue: modelValue.value && props.autofocusButton === void 0 && props.autofocus === true\n    });\n    const {\n      focused: okButtonFocus\n    } = useFocus(okButton, {\n      initialValue: modelValue.value && props.autofocusButton === \"ok\" && props.autofocus === true\n    });\n    const {\n      focused: cancelButtonFocus\n    } = useFocus(cancelButton, {\n      initialValue: modelValue.value && props.autofocusButton === \"cancel\" && props.autofocus === true\n    });\n    const {\n      focused: closeButtonFocus\n    } = useFocus(closeButton, {\n      initialValue: modelValue.value && props.autofocusButton === \"close\" && props.autofocus === true\n    });\n    const hasHeaderCloseSlot = computed(() => !isEmptySlot(slots[\"header-close\"]));\n    const modalDialogClasses = computed(() => [props.dialogClass, {\n      \"modal-fullscreen\": props.fullscreen === true,\n      [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === \"string\",\n      [`modal-${props.size}`]: props.size !== \"md\",\n      \"modal-dialog-centered\": props.centered,\n      \"modal-dialog-scrollable\": props.scrollable\n    }]);\n    const bodyColorClasses = useColorVariantClasses(() => ({\n      bgVariant: props.bodyBgVariant,\n      textVariant: props.bodyTextVariant,\n      variant: props.bodyVariant\n    }));\n    const bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value]);\n    const headerColorClasses = useColorVariantClasses(() => ({\n      bgVariant: props.headerBgVariant,\n      textVariant: props.headerTextVariant,\n      variant: props.headerVariant,\n      borderVariant: props.headerBorderVariant\n    }));\n    const headerClasses = computed(() => [props.headerClass, headerColorClasses.value]);\n    const headerCloseAttrs = computed(() => ({\n      variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : void 0,\n      class: props.headerCloseClass\n    }));\n    const footerColorClasses = useColorVariantClasses(() => ({\n      bgVariant: props.footerBgVariant,\n      textVariant: props.footerTextVariant,\n      variant: props.footerVariant,\n      borderVariant: props.footerBorderVariant\n    }));\n    const footerClasses = computed(() => [props.footerClass, footerColorClasses.value]);\n    const titleClasses = computed(() => [props.titleClass, {\n      [\"visually-hidden\"]: props.titleVisuallyHidden\n    }]);\n    const disableCancel = computed(() => props.cancelDisabled || props.busy);\n    const disableOk = computed(() => props.okDisabled || props.busy);\n    const {\n      activePosition,\n      activeModalCount,\n      stackWithoutSelf\n    } = useModalManager(showRef, modelValue.value);\n    watch(stackWithoutSelf, (newValue, oldValue) => {\n      if (newValue.length > oldValue.length && showRef.value === true && props.noStacking === true) hide();\n    });\n    const computedZIndexNumber = computed(() =>\n    // Make sure that newly opened modals have a higher z-index than currently active ones.\n    // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n    //\n    // This means inactive modals will already be higher than active ones when opened.\n    showRef.value || isLeaving.value ?\n    // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n    defaultModalDialogZIndex - (((activeModalCount == null ? void 0 : activeModalCount.value) ?? 0) * 2 - ((activePosition == null ? void 0 : activePosition.value) ?? 0) * 2) : defaultModalDialogZIndex);\n    const computedZIndex = computed(() => ({\n      \"z-index\": computedZIndexNumber.value\n    }));\n    const computedZIndexBackdrop = computed(() => ({\n      \"z-index\": computedZIndexNumber.value - 1\n    }));\n    const sharedSlots = computed(() => ({\n      cancel: () => {\n        hide(\"cancel\");\n      },\n      close: () => {\n        hide(\"close\");\n      },\n      hide,\n      ok: () => {\n        hide(\"ok\");\n      },\n      active: showRef.value,\n      visible: showRef.value\n    }));\n    __expose({\n      hide,\n      id: computedId,\n      show,\n      toggle\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$2, {\n        to: unref(props).teleportTo,\n        disabled: unref(props).teleportDisabled\n      }, {\n        default: withCtx(() => [unref(renderRef) || unref(contentShowing) ? (openBlock(), createBlock(Transition, mergeProps({\n          key: 0\n        }, unref(transitionProps), {\n          appear: modelValue.value || unref(props).visible,\n          onAfterEnter\n        }), {\n          default: withCtx(() => [withDirectives(createElementVNode(\"div\", mergeProps({\n            id: unref(computedId),\n            ref: \"_element\",\n            class: [\"modal\", [unref(props).modalClass, {\n              fade: !unref(computedNoAnimation),\n              show: unref(isVisible)\n            }]],\n            role: \"dialog\",\n            \"aria-labelledby\": !unref(props).noHeader ? `${unref(computedId)}-label` : void 0,\n            \"aria-describedby\": `${unref(computedId)}-body`,\n            tabindex: \"-1\"\n          }, _ctx.$attrs, {\n            style: computedZIndex.value,\n            onClick: _cache[4] || (_cache[4] = withModifiers($event => unref(hide)(\"backdrop\"), [\"self\"]))\n          }), [createElementVNode(\"div\", {\n            class: normalizeClass([\"modal-dialog\", modalDialogClasses.value])\n          }, [unref(contentShowing) ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            class: normalizeClass([\"modal-content\", unref(props).contentClass])\n          }, [!unref(props).noHeader ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            class: normalizeClass([\"modal-header\", headerClasses.value])\n          }, [renderSlot(_ctx.$slots, \"header\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [(openBlock(), createBlock(resolveDynamicComponent(unref(props).titleTag), {\n            id: `${unref(computedId)}-label`,\n            class: normalizeClass([\"modal-title\", titleClasses.value])\n          }, {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"title\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [createTextVNode(toDisplayString(unref(props).title), 1)], true)]),\n            _: 3\n          }, 8, [\"id\", \"class\"])), !unref(props).noHeaderClose ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [hasHeaderCloseSlot.value ? (openBlock(), createBlock(_sfc_main$3, mergeProps({\n            key: 0\n          }, headerCloseAttrs.value, {\n            onClick: _cache[0] || (_cache[0] = $event => unref(hide)(\"close\"))\n          }), {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"header-close\", {}, void 0, true)]),\n            _: 3\n          }, 16)) : (openBlock(), createBlock(_sfc_main$4, mergeProps({\n            key: 1,\n            \"aria-label\": unref(props).headerCloseLabel\n          }, headerCloseAttrs.value, {\n            onClick: _cache[1] || (_cache[1] = $event => unref(hide)(\"close\"))\n          }), null, 16, [\"aria-label\"]))], 64)) : createCommentVNode(\"\", true)], true)], 2)) : createCommentVNode(\"\", true), createElementVNode(\"div\", mergeProps({\n            id: `${unref(computedId)}-body`,\n            class: [\"modal-body\", bodyClasses.value]\n          }, unref(props).bodyAttrs), [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [createTextVNode(toDisplayString(unref(props).body), 1)], true)], 16, _hoisted_2), !unref(props).noFooter ? (openBlock(), createElementBlock(\"div\", {\n            key: 1,\n            class: normalizeClass([\"modal-footer\", footerClasses.value])\n          }, [renderSlot(_ctx.$slots, \"footer\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [renderSlot(_ctx.$slots, \"cancel\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [!unref(props).okOnly ? (openBlock(), createBlock(_sfc_main$3, {\n            key: 0,\n            ref: \"_cancelButton\",\n            disabled: disableCancel.value,\n            size: unref(props).buttonSize,\n            variant: unref(props).cancelVariant,\n            onClick: _cache[2] || (_cache[2] = $event => unref(hide)(\"cancel\"))\n          }, {\n            default: withCtx(() => [createTextVNode(toDisplayString(unref(props).cancelTitle), 1)]),\n            _: 1\n          }, 8, [\"disabled\", \"size\", \"variant\"])) : createCommentVNode(\"\", true)], true), renderSlot(_ctx.$slots, \"ok\", normalizeProps(guardReactiveProps(sharedSlots.value)), () => [createVNode(_sfc_main$3, {\n            ref: \"_okButton\",\n            disabled: disableOk.value,\n            size: unref(props).buttonSize,\n            variant: unref(props).okVariant,\n            onClick: _cache[3] || (_cache[3] = $event => unref(hide)(\"ok\"))\n          }, {\n            default: withCtx(() => [createTextVNode(toDisplayString(unref(props).okTitle), 1)]),\n            _: 1\n          }, 8, [\"disabled\", \"size\", \"variant\"])], true)], true)], 2)) : createCommentVNode(\"\", true)], 2)) : createCommentVNode(\"\", true)], 2), unref(needsFallback) ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            ref: \"_fallbackFocusElement\",\n            class: normalizeClass(fallbackClassSelector),\n            tabindex: \"0\",\n            style: {\n              \"width\": \"0\",\n              \"height\": \"0\",\n              \"overflow\": \"hidden\"\n            }\n          }, null, 512)) : createCommentVNode(\"\", true)], 16, _hoisted_1), [[vShow, unref(showRef) && (unref(backdropReady) && unref(props).backdropFirst || !unref(props).backdropFirst)]])]),\n          _: 3\n        }, 16, [\"appear\"])) : createCommentVNode(\"\", true), !unref(props).noBackdrop ? renderSlot(_ctx.$slots, \"backdrop\", normalizeProps(mergeProps({\n          key: 1\n        }, sharedSlots.value)), () => [unref(renderBackdropRef) ? (openBlock(), createBlock(Transition, normalizeProps(mergeProps({\n          key: 0\n        }, unref(backdropTransitionProps))), {\n          default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n            class: normalizeClass([\"modal-backdrop\", {\n              fade: !unref(computedNoAnimation),\n              show: unref(backdropVisible) || unref(computedNoAnimation)\n            }]),\n            style: normalizeStyle(computedZIndexBackdrop.value),\n            onClick: _cache[5] || (_cache[5] = $event => unref(hide)(\"backdrop\"))\n          }, null, 6), [[vShow, unref(showRef) || unref(isLeaving) && unref(props).backdropFirst && !unref(computedNoAnimation)]])]),\n          _: 1\n        }, 16)) : createCommentVNode(\"\", true)], true) : createCommentVNode(\"\", true)]),\n        _: 3\n      }, 8, [\"to\", \"disabled\"]);\n    };\n  }\n});\nconst BModal = /* @__PURE__ */_export_sfc(_sfc_main$1, [[\"__scopeId\", \"data-v-93972863\"]]);\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BModalOrchestrator\",\n  props: {\n    teleportDisabled: {\n      type: Boolean,\n      default: false\n    },\n    teleportTo: {\n      default: \"body\"\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BModalOrchestrator\");\n    const tools = useModalController();\n    __expose({\n      ...tools\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$2, {\n        to: unref(props).teleportTo,\n        disabled: unref(props).teleportDisabled\n      }, {\n        default: withCtx(() => {\n          var _a;\n          return [createElementVNode(\"div\", mergeProps({\n            id: \"__BVID__modal-container\"\n          }, _ctx.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList((_a = unref(tools).modals) == null ? void 0 : _a.value, ([self, modal]) => {\n            return openBlock(), createBlock(resolveDynamicComponent(modal.component ?? BModal), mergeProps({\n              key: self,\n              ref_for: true\n            }, modal.props, {\n              modelValue: modal.props._modelValue,\n              \"onUpdate:modelValue\": [$event => modal.props._modelValue = $event, $event => {\n                var _a2, _b;\n                return (_b = (_a2 = unref(tools)).leave) == null ? void 0 : _b.call(_a2, self);\n              }],\n              \"initial-animation\": \"\",\n              \"teleport-disabled\": true,\n              onHide: e => {\n                if (modal.props._isConfirm === true) {\n                  if (e.trigger === \"ok\") {\n                    modal.props._promise.resolve(true);\n                    return;\n                  }\n                  if (e.trigger === \"cancel\") {\n                    modal.props._promise.resolve(false);\n                    return;\n                  }\n                  modal.props._promise.resolve(null);\n                }\n                modal.props._promise.resolve(true);\n              },\n              onHidden: $event => {\n                var _a2, _b;\n                return (_b = (_a2 = unref(tools)).remove) == null ? void 0 : _b.call(_a2, self);\n              }\n            }), null, 16, [\"modelValue\", \"onUpdate:modelValue\", \"onHide\", \"onHidden\"]);\n          }), 128))], 16)];\n        }),\n        _: 1\n      }, 8, [\"to\", \"disabled\"]);\n    };\n  }\n});\nexport { BModal as B, _sfc_main as _ };","map":{"version":3,"names":["fallbackClassSelector","defaultModalDialogZIndex","_props","__props","props","useDefaults","emit","__emit","slots","useSlots","computedId","useId","id","modelValue","useModel","element","useTemplateRef","fallbackFocusElement","okButton","cancelButton","closeButton","pickFocusItem","autofocus","autofocusButton","okButtonFocus","value","closeButtonFocus","cancelButtonFocus","modalFocus","onAfterEnter","showRef","renderRef","renderBackdropRef","hide","show","toggle","computedNoAnimation","transitionProps","backdropTransitionProps","isLeaving","isVisible","trapActive","contentShowing","backdropReady","backdropVisible","useShowHide","needsFallback","useActivatedFocusTrap","isActive","noTrap","fallbackFocus","ref","classSelector","onKeyStroke","target","useSafeScrollLock","bodyScrolling","focused","useFocus","initialValue","hasHeaderCloseSlot","computed","isEmptySlot","modalDialogClasses","dialogClass","fullscreen","size","centered","scrollable","bodyColorClasses","useColorVariantClasses","bgVariant","bodyBgVariant","textVariant","bodyTextVariant","variant","bodyVariant","bodyClasses","bodyClass","headerColorClasses","headerBgVariant","headerTextVariant","headerVariant","borderVariant","headerBorderVariant","headerClasses","headerClass","headerCloseAttrs","headerCloseVariant","class","headerCloseClass","footerColorClasses","footerBgVariant","footerTextVariant","footerVariant","footerBorderVariant","footerClasses","footerClass","titleClasses","titleClass","titleVisuallyHidden","disableCancel","cancelDisabled","busy","disableOk","okDisabled","activePosition","activeModalCount","stackWithoutSelf","useModalManager","watch","newValue","oldValue","length","noStacking","computedZIndexNumber","computedZIndex","computedZIndexBackdrop","sharedSlots","cancel","close","ok","active","visible","__expose","tools","useModalController"],"sources":["../src/components/BModal/BModal.vue","../src/components/BModal/BModalOrchestrator.vue"],"sourcesContent":["<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <Transition\n      v-if=\"renderRef || contentShowing\"\n      v-bind=\"transitionProps\"\n      :appear=\"modelValue || props.visible\"\n      @after-enter=\"onAfterEnter\"\n    >\n      <div\n        v-show=\"showRef && ((backdropReady && props.backdropFirst) || !props.backdropFirst)\"\n        :id=\"computedId\"\n        ref=\"_element\"\n        class=\"modal\"\n        :class=\"[\n          props.modalClass,\n          {\n            fade: !computedNoAnimation,\n            show: isVisible,\n          },\n        ]\"\n        role=\"dialog\"\n        :aria-labelledby=\"!props.noHeader ? `${computedId}-label` : undefined\"\n        :aria-describedby=\"`${computedId}-body`\"\n        tabindex=\"-1\"\n        v-bind=\"$attrs\"\n        :style=\"computedZIndex\"\n        @click.self=\"hide('backdrop')\"\n      >\n        <div class=\"modal-dialog\" :class=\"modalDialogClasses\">\n          <div v-if=\"contentShowing\" class=\"modal-content\" :class=\"props.contentClass\">\n            <div v-if=\"!props.noHeader\" class=\"modal-header\" :class=\"headerClasses\">\n              <slot name=\"header\" v-bind=\"sharedSlots\">\n                <component\n                  :is=\"props.titleTag\"\n                  :id=\"`${computedId}-label`\"\n                  class=\"modal-title\"\n                  :class=\"titleClasses\"\n                >\n                  <slot name=\"title\" v-bind=\"sharedSlots\">\n                    {{ props.title }}\n                  </slot>\n                </component>\n                <template v-if=\"!props.noHeaderClose\">\n                  <BButton\n                    v-if=\"hasHeaderCloseSlot\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  >\n                    <slot name=\"header-close\" />\n                  </BButton>\n                  <BCloseButton\n                    v-else\n                    :aria-label=\"props.headerCloseLabel\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  />\n                </template>\n              </slot>\n            </div>\n            <div\n              :id=\"`${computedId}-body`\"\n              class=\"modal-body\"\n              :class=\"bodyClasses\"\n              v-bind=\"props.bodyAttrs\"\n            >\n              <slot v-bind=\"sharedSlots\">\n                {{ props.body }}\n              </slot>\n            </div>\n            <div v-if=\"!props.noFooter\" class=\"modal-footer\" :class=\"footerClasses\">\n              <slot name=\"footer\" v-bind=\"sharedSlots\">\n                <slot name=\"cancel\" v-bind=\"sharedSlots\">\n                  <BButton\n                    v-if=\"!props.okOnly\"\n                    ref=\"_cancelButton\"\n                    :disabled=\"disableCancel\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.cancelVariant\"\n                    @click=\"hide('cancel')\"\n                  >\n                    {{ props.cancelTitle }}\n                  </BButton>\n                </slot>\n                <slot name=\"ok\" v-bind=\"sharedSlots\">\n                  <BButton\n                    ref=\"_okButton\"\n                    :disabled=\"disableOk\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.okVariant\"\n                    @click=\"hide('ok')\"\n                  >\n                    {{ props.okTitle }}\n                  </BButton>\n                </slot>\n              </slot>\n            </div>\n          </div>\n        </div>\n        <div\n          v-if=\"needsFallback\"\n          ref=\"_fallbackFocusElement\"\n          :class=\"fallbackClassSelector\"\n          tabindex=\"0\"\n          style=\"width: 0; height: 0; overflow: hidden\"\n        />\n      </div>\n    </Transition>\n    <slot v-if=\"!props.noBackdrop\" name=\"backdrop\" v-bind=\"sharedSlots\">\n      <Transition v-if=\"renderBackdropRef\" v-bind=\"backdropTransitionProps\">\n        <div\n          v-show=\"showRef || (isLeaving && props.backdropFirst && !computedNoAnimation)\"\n          class=\"modal-backdrop\"\n          :style=\"computedZIndexBackdrop\"\n          :class=\"{\n            fade: !computedNoAnimation,\n            show: backdropVisible || computedNoAnimation,\n          }\"\n          @click=\"hide('backdrop')\"\n        />\n      </Transition>\n    </slot>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, useFocus} from '@vueuse/core'\nimport {useActivatedFocusTrap} from '../../composables/useActivatedFocusTrap'\nimport {computed, type CSSProperties, type EmitFn, useTemplateRef, watch} from 'vue'\nimport type {BModalProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useSafeScrollLock} from '../../composables/useSafeScrollLock'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useModalManager} from '../../composables/useModalManager'\nimport {type showHideEmits, useShowHide} from '../../composables/useShowHide'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\n// aria\n// autofocus\n// close on escape when autofocus\n\n// Note, attempt to return focus to item that openned the modal after close\n// Implement auto focus props like autoFocusButton\n\nconst _props = withDefaults(defineProps<Omit<BModalProps, 'modelValue'>>(), {\n  autofocus: true,\n  autofocusButton: undefined,\n  backdropFirst: false,\n  body: undefined,\n  bodyBgVariant: null,\n  bodyAttrs: undefined,\n  bodyClass: null,\n  bodyScrolling: false,\n  bodyTextVariant: null,\n  bodyVariant: null,\n  busy: false,\n  buttonSize: 'md',\n  cancelDisabled: false,\n  cancelTitle: 'Cancel',\n  cancelVariant: 'secondary',\n  centered: false,\n  contentClass: undefined,\n  dialogClass: undefined,\n  footerBgVariant: null,\n  footerBorderVariant: null,\n  footerClass: undefined,\n  footerTextVariant: null,\n  footerVariant: null,\n  fullscreen: false,\n  headerBgVariant: null,\n  headerBorderVariant: null,\n  headerClass: undefined,\n  headerCloseClass: undefined,\n  headerCloseLabel: 'Close',\n  headerCloseVariant: 'secondary',\n  headerTextVariant: null,\n  headerVariant: null,\n  noFooter: false,\n  noHeader: false,\n  noHeaderClose: false,\n  id: undefined,\n  initialAnimation: false,\n  lazy: false,\n  modalClass: undefined,\n  noBackdrop: false,\n  noCloseOnBackdrop: false,\n  noCloseOnEsc: false,\n  noFade: false,\n  noTrap: false,\n  okDisabled: false,\n  okOnly: false,\n  okTitle: 'OK',\n  okVariant: 'primary',\n  unmountLazy: false,\n  scrollable: false,\n  size: 'md',\n  teleportDisabled: false,\n  teleportTo: 'body',\n  title: undefined,\n  titleClass: undefined,\n  titleVisuallyHidden: false,\n  titleTag: 'h5',\n  show: false,\n  transProps: undefined,\n  visible: false,\n})\nconst props = useDefaults(_props, 'BModal')\n\nconst emit = defineEmits<\n  {\n    backdrop: [value: BvTriggerableEvent]\n    cancel: [value: BvTriggerableEvent]\n    close: [value: BvTriggerableEvent]\n    esc: [value: BvTriggerableEvent]\n    ok: [value: BvTriggerableEvent]\n  } & showHideEmits\n>()\n\ntype SharedSlotsData = {\n  cancel: () => void\n  close: () => void\n  hide: (trigger?: string) => void\n  ok: () => void\n  active: boolean\n  visible: boolean\n}\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'backdrop'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'cancel'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'footer'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header-close'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'ok'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'title'?: (props: SharedSlotsData) => any\n}>()\n\nconst computedId = useId(() => props.id, 'modal')\n// Note: passive: true will sync an internal ref... This is required for useModalManager to exit,\n// Since the modelValue that's passed from that composable is not reactive, this internal ref _is_ and thus it will trigger closing the modal\nconst modelValue = defineModel<Exclude<BModalProps['modelValue'], undefined>>({default: false})\n\nconst element = useTemplateRef<HTMLElement>('_element')\nconst fallbackFocusElement = useTemplateRef<HTMLElement>('_fallbackFocusElement')\nconst okButton = useTemplateRef<HTMLElement>('_okButton')\nconst cancelButton = useTemplateRef<HTMLElement>('_cancelButton')\nconst closeButton = useTemplateRef<HTMLElement>('_closeButton')\n\nconst pickFocusItem = () => {\n  if (props.autofocus === false) return\n  if (props.autofocusButton === 'ok') {\n    okButtonFocus.value = true\n  } else if (props.autofocusButton === 'close') {\n    closeButtonFocus.value = true\n  } else if (props.autofocusButton === 'cancel') {\n    cancelButtonFocus.value = true\n  } else {\n    modalFocus.value = true\n  }\n}\n\nconst onAfterEnter = () => {\n  pickFocusItem()\n}\n\nconst {\n  showRef,\n  renderRef,\n  renderBackdropRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  backdropTransitionProps,\n  isLeaving,\n  isVisible,\n  trapActive,\n  contentShowing,\n  backdropReady,\n  backdropVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, element, computedId, {\n  // addShowClass: false,\n  transitionProps: {\n    onAfterEnter,\n  },\n})\n\nconst fallbackClassSelector = 'modal-fallback-focus'\nconst {needsFallback} = useActivatedFocusTrap({\n  element,\n  isActive: trapActive,\n  noTrap: () => props.noTrap,\n  fallbackFocus: {\n    ref: fallbackFocusElement,\n    classSelector: fallbackClassSelector,\n  },\n})\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide('esc')\n  },\n  {target: element}\n)\nuseSafeScrollLock(showRef, () => props.bodyScrolling)\nconst {focused: modalFocus} = useFocus(element, {\n  initialValue: modelValue.value && props.autofocusButton === undefined && props.autofocus === true,\n})\nconst {focused: okButtonFocus} = useFocus(okButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'ok' && props.autofocus === true,\n})\nconst {focused: cancelButtonFocus} = useFocus(cancelButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'cancel' && props.autofocus === true,\n})\nconst {focused: closeButtonFocus} = useFocus(closeButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'close' && props.autofocus === true,\n})\n\nconst hasHeaderCloseSlot = computed(() => !isEmptySlot(slots['header-close']))\n\nconst modalDialogClasses = computed(() => [\n  props.dialogClass,\n  {\n    'modal-fullscreen': props.fullscreen === true,\n    [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === 'string',\n    [`modal-${props.size}`]: props.size !== 'md',\n    'modal-dialog-centered': props.centered,\n    'modal-dialog-scrollable': props.scrollable,\n  },\n])\n\nconst bodyColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.bodyBgVariant,\n  textVariant: props.bodyTextVariant,\n  variant: props.bodyVariant,\n}))\nconst bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value])\n\nconst headerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.headerBgVariant,\n  textVariant: props.headerTextVariant,\n  variant: props.headerVariant,\n  borderVariant: props.headerBorderVariant,\n}))\nconst headerClasses = computed(() => [props.headerClass, headerColorClasses.value])\n\nconst headerCloseAttrs = computed(() => ({\n  variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : undefined,\n  class: props.headerCloseClass,\n}))\n\nconst footerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.footerBgVariant,\n  textVariant: props.footerTextVariant,\n  variant: props.footerVariant,\n  borderVariant: props.footerBorderVariant,\n}))\nconst footerClasses = computed(() => [props.footerClass, footerColorClasses.value])\n\nconst titleClasses = computed(() => [\n  props.titleClass,\n  {\n    ['visually-hidden']: props.titleVisuallyHidden,\n  },\n])\nconst disableCancel = computed(() => props.cancelDisabled || props.busy)\nconst disableOk = computed(() => props.okDisabled || props.busy)\n\nconst {activePosition, activeModalCount, stackWithoutSelf} = useModalManager(\n  showRef,\n  modelValue.value\n)\n\nwatch(stackWithoutSelf, (newValue, oldValue) => {\n  if (newValue.length > oldValue.length && showRef.value === true && props.noStacking === true)\n    hide()\n})\n\nconst defaultModalDialogZIndex = 1056\nconst computedZIndexNumber = computed<number>(() =>\n  // Make sure that newly opened modals have a higher z-index than currently active ones.\n  // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n  //\n  // This means inactive modals will already be higher than active ones when opened.\n\n  showRef.value || isLeaving.value\n    ? // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n      defaultModalDialogZIndex -\n      ((activeModalCount?.value ?? 0) * 2 - (activePosition?.value ?? 0) * 2)\n    : defaultModalDialogZIndex\n)\nconst computedZIndex = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value,\n}))\nconst computedZIndexBackdrop = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value - 1,\n}))\n\nconst sharedSlots = computed<SharedSlotsData>(() => ({\n  cancel: () => {\n    hide('cancel')\n  },\n  close: () => {\n    hide('close')\n  },\n  hide,\n  ok: () => {\n    hide('ok')\n  },\n  active: showRef.value,\n  visible: showRef.value,\n}))\n\ndefineExpose({\n  hide,\n  id: computedId,\n  show,\n  toggle,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.modal {\n  display: block;\n}\n\n.modal-dialog {\n  z-index: 1051;\n}\n</style>\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__modal-container\" v-bind=\"$attrs\">\n      <component\n        :is=\"modal.component ?? BModal\"\n        v-for=\"[self, modal] in tools.modals?.value\"\n        :key=\"self\"\n        v-bind=\"modal.props\"\n        v-model=\"modal.props._modelValue\"\n        initial-animation\n        :teleport-disabled=\"true\"\n        @update:model-value=\"tools.leave?.(self)\"\n        @hide=\"\n          (e: BvTriggerableEvent) => {\n            // These following are confirm rules, otherwise we always resolve true\n            if (modal.props._isConfirm === true) {\n              if (e.trigger === 'ok') {\n                modal.props._promise.resolve(true)\n                return\n              }\n              if (e.trigger === 'cancel') {\n                modal.props._promise.resolve(false)\n                return\n              }\n              modal.props._promise.resolve(null)\n            }\n            modal.props._promise.resolve(true)\n          }\n        \"\n        @hidden=\"tools.remove?.(self)\"\n      />\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BvTriggerableEvent} from '../../utils'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BModalOrchestratorProps} from '../../types/ComponentProps'\nimport BModal from './BModal.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useModalController} from '../../composables/useModalController'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BModalOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n})\nconst props = useDefaults(_props, 'BModalOrchestrator')\n\nconst tools = useModalController()\n\ndefineExpose({\n  ...tools,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}