{"ast":null,"code":"const IS_BROWSER = typeof window !== \"undefined\" && typeof document !== \"undefined\" && typeof navigator !== \"undefined\";\nconst parseEventOptions = options => {\n  const HAS_PASSIVE_EVENT_SUPPORT = (() => {\n    let passiveEventSupported = false;\n    if (IS_BROWSER) {\n      try {\n        const options2 = {\n          // This function will be called when the browser\n          // attempts to access the passive property\n          get passive() {\n            passiveEventSupported = true;\n            return;\n          }\n        };\n        WINDOW.addEventListener(\"test\", options2, options2);\n        WINDOW.removeEventListener(\"test\", options2, options2);\n      } catch {\n        passiveEventSupported = false;\n      }\n    }\n    return passiveEventSupported;\n  })();\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return typeof options === \"object\" ? options : {\n      capture: !!options || false\n    };\n  }\n  return typeof options === \"object\" ? options.capture : options;\n};\nconst eventOn = (el, eventName, handler, options) => {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options));\n  }\n};\nconst eventOff = (el, eventName, handler, options) => {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, options);\n  }\n};\nconst eventOnOff = (on, eventParams) => {\n  const method = on ? eventOn : eventOff;\n  method(...eventParams);\n};\nconst stopEvent = (event, {\n  preventDefault = true,\n  propagation = false,\n  immediatePropagation = false\n} = {}) => {\n  if (preventDefault) {\n    event.preventDefault();\n  }\n  if (propagation) {\n    event.stopPropagation();\n  }\n  if (immediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n};\nexport { eventOnOff as e, stopEvent as s };","map":{"version":3,"names":["IS_BROWSER","window","document","navigator","parseEventOptions","options","HAS_PASSIVE_EVENT_SUPPORT","passiveEventSupported","options2","passive","WINDOW","addEventListener","removeEventListener","capture","eventOn","el","eventName","handler","eventOff","eventOnOff","on","eventParams","method","stopEvent","event","preventDefault","propagation","immediatePropagation","stopPropagation","stopImmediatePropagation"],"sources":["../src/utils/event.ts"],"sourcesContent":["/**\n * @deprecated remove with parseEventOptions\n */\nexport const IS_BROWSER =\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined' &&\n  typeof navigator !== 'undefined'\n\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n/**\n * @deprecated\n */\nexport const parseEventOptions = (\n  options: boolean | Readonly<EventListenerOptions> | undefined\n): boolean | EventListenerOptions | undefined => {\n  const HAS_PASSIVE_EVENT_SUPPORT = (() => {\n    let passiveEventSupported = false\n    if (IS_BROWSER) {\n      try {\n        const options = {\n          // This function will be called when the browser\n          // attempts to access the passive property\n          get passive() {\n            passiveEventSupported = true\n            // eslint-disable-next-line no-useless-return\n            return\n          },\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        WINDOW.addEventListener('test', options, options)\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        WINDOW.removeEventListener('test', options, options)\n      } catch {\n        passiveEventSupported = false\n      }\n    }\n    return passiveEventSupported\n  })()\n\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return typeof options === 'object' ? options : {capture: !!options || false}\n  }\n  // Need to translate to actual Boolean value\n  return typeof options === 'object' ? options.capture : options\n}\n\n// Attach an event listener to an element\n/**\n * @deprecated\n */\nexport const eventOn = (\n  el: Readonly<Element>,\n  eventName: string,\n  handler: EventListener,\n  options: boolean | Readonly<EventListenerOptions> | undefined\n) => {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options))\n  }\n}\n\n// Remove an event listener from an element\n/**\n * @deprecated\n */\nexport const eventOff = (\n  el: Readonly<Element>,\n  eventName: string,\n  handler: EventListener,\n  options: boolean | Readonly<EventListenerOptions> | undefined\n) => {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, options)\n  }\n}\n\n// Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n/**\n * @deprecated\n */\nexport const eventOnOff = (on: boolean, eventParams: Parameters<typeof eventOff>) => {\n  const method = on ? eventOn : eventOff\n  method(...eventParams)\n}\n\n// Utility method to prevent the default event handling and propagation\nexport const stopEvent = (\n  event: Readonly<Event>,\n  {preventDefault = true, propagation = false, immediatePropagation = false} = {}\n) => {\n  if (preventDefault) {\n    event.preventDefault()\n  }\n  if (propagation) {\n    event.stopPropagation()\n  }\n  if (immediatePropagation) {\n    event.stopImmediatePropagation()\n  }\n}\n"],"mappings":"AAGa,MAAAA,UAAA,GACX,OAAOC,MAAA,KAAW,eAClB,OAAOC,QAAA,KAAa,eACpB,OAAOC,SAAA,KAAc;AAOV,MAAAC,iBAAA,GACXC,OAAA,IAC+C;EAC/C,MAAMC,yBAAA,IAA6B,MAAM;IACvC,IAAIC,qBAAA,GAAwB;IAC5B,IAAIP,UAAA,EAAY;MACV;QACF,MAAMQ,QAAA,GAAU;UAAA;UAAA;UAGd,IAAIC,QAAA,EAAU;YACYF,qBAAA;YAExB;UAAA;QAEJ;QAGOG,MAAA,CAAAC,gBAAA,CAAiB,QAAQH,QAAA,EAASA,QAAO;QAGzCE,MAAA,CAAAE,mBAAA,CAAoB,QAAQJ,QAAA,EAASA,QAAO;MAAA,QAC7C;QACkBD,qBAAA;MAAA;IAC1B;IAEK,OAAAA,qBAAA;EAAA,GACN;EAEH,IAAID,yBAAA,EAA2B;IACtB,cAAOD,OAAA,KAAY,WAAWA,OAAA,GAAU;MAACQ,OAAA,EAAS,CAAC,CAACR,OAAA,IAAW;IAAK;EAAA;EAG7E,OAAO,OAAOA,OAAA,KAAY,WAAWA,OAAA,CAAQQ,OAAA,GAAUR,OAAA;AACzD;AAMO,MAAMS,OAAA,GAAUA,CACrBC,EAAA,EACAC,SAAA,EACAC,OAAA,EACAZ,OAAA,KACG;EACC,IAAAU,EAAA,IAAMA,EAAA,CAAGJ,gBAAA,EAAkB;IAC7BI,EAAA,CAAGJ,gBAAA,CAAiBK,SAAA,EAAWC,OAAA,EAASb,iBAAA,CAAkBC,OAAO,CAAC;EAAA;AAEtE;AAMO,MAAMa,QAAA,GAAWA,CACtBH,EAAA,EACAC,SAAA,EACAC,OAAA,EACAZ,OAAA,KACG;EACC,IAAAU,EAAA,IAAMA,EAAA,CAAGH,mBAAA,EAAqB;IAC7BG,EAAA,CAAAH,mBAAA,CAAoBI,SAAA,EAAWC,OAAA,EAASZ,OAAO;EAAA;AAEtD;AAOa,MAAAc,UAAA,GAAaA,CAACC,EAAA,EAAaC,WAAA,KAA6C;EAC7E,MAAAC,MAAA,GAASF,EAAA,GAAKN,OAAA,GAAUI,QAAA;EAC9BI,MAAA,CAAO,GAAGD,WAAW;AACvB;AAGO,MAAME,SAAA,GAAYA,CACvBC,KAAA,EACA;EAACC,cAAA,GAAiB;EAAMC,WAAA,GAAc;EAAOC,oBAAA,GAAuB;AAAS,WAC1E;EACH,IAAIF,cAAA,EAAgB;IAClBD,KAAA,CAAMC,cAAA,CAAe;EAAA;EAEvB,IAAIC,WAAA,EAAa;IACfF,KAAA,CAAMI,eAAA,CAAgB;EAAA;EAExB,IAAID,oBAAA,EAAsB;IACxBH,KAAA,CAAMK,wBAAA,CAAyB;EAAA;AAEnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}