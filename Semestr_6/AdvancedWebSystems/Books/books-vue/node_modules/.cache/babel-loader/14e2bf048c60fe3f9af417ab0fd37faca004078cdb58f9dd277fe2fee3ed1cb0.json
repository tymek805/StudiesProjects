{"ast":null,"code":"import { computed, toValue, readonly, toRef } from \"vue\";\nimport { u as useAriaInvalid } from \"./useAriaInvalid-BTUbGj3Y.mjs\";\nimport { u as useStateClass } from \"./useStateClass-BGbSLWFN.mjs\";\nconst getClasses = items => computed(() => {\n  const resolvedItems = toValue(items);\n  return {\n    \"form-check\": resolvedItems.plain === false && resolvedItems.button === false && resolvedItems.hasDefaultSlot,\n    \"form-check-reverse\": resolvedItems.reverse === true,\n    \"form-check-inline\": resolvedItems.inline === true,\n    \"form-switch\": resolvedItems.switch === true,\n    [`form-control-${resolvedItems.size}`]: resolvedItems.size !== void 0 && resolvedItems.size !== \"md\" && resolvedItems.button === false\n  };\n});\nconst getInputClasses = items => {\n  const resolvedItems = readonly(toRef(items));\n  const stateClass = useStateClass(() => resolvedItems.value.state ?? null);\n  return computed(() => [stateClass.value, {\n    \"form-check-input\": resolvedItems.value.plain === false && resolvedItems.value.button === false,\n    \"btn-check\": resolvedItems.value.button === true\n  }]);\n};\nconst getLabelClasses = items => computed(() => {\n  const resolvedItems = toValue(items);\n  return {\n    \"form-check-label\": resolvedItems.plain === false && resolvedItems.button === false,\n    \"btn\": resolvedItems.button === true,\n    [`btn-${resolvedItems.buttonVariant}`]: resolvedItems.button === true && resolvedItems.buttonVariant !== void 0 && resolvedItems.buttonVariant !== null,\n    [`btn-${resolvedItems.size}`]: resolvedItems.button && resolvedItems.size && resolvedItems.size !== \"md\"\n  };\n});\nconst getGroupAttr = items => {\n  const resolvedItems = readonly(toRef(items));\n  const computedAriaInvalid = useAriaInvalid(() => resolvedItems.value.ariaInvalid, () => resolvedItems.value.state);\n  return computed(() => ({\n    \"aria-invalid\": computedAriaInvalid.value,\n    \"aria-required\": resolvedItems.value.required === true ? true : void 0\n  }));\n};\nconst getGroupClasses = items => computed(() => {\n  const resolvedItems = toValue(items);\n  return {\n    \"was-validated\": resolvedItems.validated === true,\n    \"btn-group\": resolvedItems.buttons === true && resolvedItems.stacked === false,\n    \"btn-group-vertical\": resolvedItems.stacked === true && resolvedItems.buttons === true,\n    [`btn-group-${resolvedItems.size}`]: resolvedItems.size !== void 0\n  };\n});\nexport { getInputClasses as a, getLabelClasses as b, getGroupAttr as c, getGroupClasses as d, getClasses as g };","map":{"version":3,"names":["getClasses","items","computed","resolvedItems","toValue","plain","button","hasDefaultSlot","reverse","inline","switch","size","getInputClasses","readonly","toRef","stateClass","useStateClass","value","state","getLabelClasses","buttonVariant","getGroupAttr","computedAriaInvalid","useAriaInvalid","ariaInvalid","required","getGroupClasses","validated","buttons","stacked"],"sources":["../src/composables/useFormCheck.ts"],"sourcesContent":["import type {AriaInvalid} from '../types/AriaInvalid'\nimport {computed, type MaybeRefOrGetter, readonly, toRef, toValue} from 'vue'\nimport {useAriaInvalid} from './useAriaInvalid'\nimport {useStateClass} from './useStateClass'\nimport type {Size} from '../types/Size'\nimport type {ButtonVariant} from '../types/ColorTypes'\nimport type {ValidationState} from '../types/CommonTypes'\n\ninterface ClassesItemsInput {\n  plain?: boolean\n  button?: boolean\n  inline?: boolean\n  reverse?: boolean\n  switch?: boolean\n  size?: Size\n  hasDefaultSlot?: boolean\n}\n\nconst getClasses = (items: MaybeRefOrGetter<ClassesItemsInput>) =>\n  computed(() => {\n    const resolvedItems = toValue(items)\n    return {\n      'form-check':\n        resolvedItems.plain === false &&\n        resolvedItems.button === false &&\n        resolvedItems.hasDefaultSlot,\n      'form-check-reverse': resolvedItems.reverse === true,\n      'form-check-inline': resolvedItems.inline === true,\n      'form-switch': resolvedItems.switch === true,\n      [`form-control-${resolvedItems.size}`]:\n        resolvedItems.size !== undefined &&\n        resolvedItems.size !== 'md' &&\n        resolvedItems.button === false,\n    }\n  })\n\ninterface InputClassesItemsInput {\n  plain?: boolean\n  button?: boolean\n  state?: ValidationState\n}\n\nconst getInputClasses = (items: MaybeRefOrGetter<InputClassesItemsInput>) => {\n  const resolvedItems = readonly(toRef(items))\n\n  const stateClass = useStateClass(() => resolvedItems.value.state ?? null)\n\n  return computed(() => [\n    stateClass.value,\n    {\n      'form-check-input':\n        resolvedItems.value.plain === false && resolvedItems.value.button === false,\n      'btn-check': resolvedItems.value.button === true,\n    },\n  ])\n}\n\ninterface LabelClasesItemsInput {\n  plain?: boolean\n  button?: boolean\n  buttonVariant?: ButtonVariant | null\n  size?: Size\n}\n\nconst getLabelClasses = (items: MaybeRefOrGetter<LabelClasesItemsInput>) =>\n  computed(() => {\n    const resolvedItems = toValue(items)\n    return {\n      'form-check-label': resolvedItems.plain === false && resolvedItems.button === false,\n      'btn': resolvedItems.button === true,\n      [`btn-${resolvedItems.buttonVariant}`]:\n        resolvedItems.button === true &&\n        resolvedItems.buttonVariant !== undefined &&\n        resolvedItems.buttonVariant !== null,\n      [`btn-${resolvedItems.size}`]:\n        resolvedItems.button && resolvedItems.size && resolvedItems.size !== 'md',\n    }\n  })\n\ninterface GroupAttrItemsInput {\n  required?: boolean\n  ariaInvalid?: AriaInvalid\n  state?: ValidationState\n}\n\nconst getGroupAttr = (items: MaybeRefOrGetter<GroupAttrItemsInput>) => {\n  const resolvedItems = readonly(toRef(items))\n  const computedAriaInvalid = useAriaInvalid(\n    () => resolvedItems.value.ariaInvalid,\n    () => resolvedItems.value.state\n  )\n  return computed(() => ({\n    'aria-invalid': computedAriaInvalid.value as Exclude<AriaInvalid, ''> | undefined,\n    'aria-required': resolvedItems.value.required === true ? true : undefined,\n  }))\n}\n\ninterface GroupClassesItemsInput {\n  validated?: boolean\n  buttons?: boolean\n  stacked?: boolean\n  size?: Size\n}\n\nconst getGroupClasses = (items: MaybeRefOrGetter<GroupClassesItemsInput>) =>\n  computed(() => {\n    const resolvedItems = toValue(items)\n    return {\n      'was-validated': resolvedItems.validated === true,\n      'btn-group': resolvedItems.buttons === true && resolvedItems.stacked === false,\n      'btn-group-vertical': resolvedItems.stacked === true && resolvedItems.buttons === true,\n      [`btn-group-${resolvedItems.size}`]: resolvedItems.size !== undefined,\n    }\n  })\n\nexport {getClasses, getInputClasses, getLabelClasses, getGroupAttr, getGroupClasses}\n"],"mappings":";;;AAkBA,MAAMA,UAAA,GAAcC,KAAA,IAClBC,QAAA,CAAS,MAAM;EACP,MAAAC,aAAA,GAAgBC,OAAA,CAAQH,KAAK;EAC5B;IACL,cACEE,aAAA,CAAcE,KAAA,KAAU,SACxBF,aAAA,CAAcG,MAAA,KAAW,SACzBH,aAAA,CAAcI,cAAA;IAChB,sBAAsBJ,aAAA,CAAcK,OAAA,KAAY;IAChD,qBAAqBL,aAAA,CAAcM,MAAA,KAAW;IAC9C,eAAeN,aAAA,CAAcO,MAAA,KAAW;IACxC,CAAC,gBAAgBP,aAAA,CAAcQ,IAAI,EAAE,GACnCR,aAAA,CAAcQ,IAAA,KAAS,UACvBR,aAAA,CAAcQ,IAAA,KAAS,QACvBR,aAAA,CAAcG,MAAA,KAAW;EAC7B;AACF,CAAC;AAQG,MAAAM,eAAA,GAAmBX,KAAA,IAAoD;EAC3E,MAAME,aAAA,GAAgBU,QAAA,CAASC,KAAA,CAAMb,KAAK,CAAC;EAE3C,MAAMc,UAAA,GAAaC,aAAA,CAAc,MAAMb,aAAA,CAAcc,KAAA,CAAMC,KAAA,IAAS,IAAI;EAExE,OAAOhB,QAAA,CAAS,MAAM,CACpBa,UAAA,CAAWE,KAAA,EACX;IACE,oBACEd,aAAA,CAAcc,KAAA,CAAMZ,KAAA,KAAU,SAASF,aAAA,CAAcc,KAAA,CAAMX,MAAA,KAAW;IACxE,aAAaH,aAAA,CAAcc,KAAA,CAAMX,MAAA,KAAW;EAAA,EAE/C;AACH;AASA,MAAMa,eAAA,GAAmBlB,KAAA,IACvBC,QAAA,CAAS,MAAM;EACP,MAAAC,aAAA,GAAgBC,OAAA,CAAQH,KAAK;EAC5B;IACL,oBAAoBE,aAAA,CAAcE,KAAA,KAAU,SAASF,aAAA,CAAcG,MAAA,KAAW;IAC9E,OAAOH,aAAA,CAAcG,MAAA,KAAW;IAChC,CAAC,OAAOH,aAAA,CAAciB,aAAa,EAAE,GACnCjB,aAAA,CAAcG,MAAA,KAAW,QACzBH,aAAA,CAAciB,aAAA,KAAkB,UAChCjB,aAAA,CAAciB,aAAA,KAAkB;IAClC,CAAC,OAAOjB,aAAA,CAAcQ,IAAI,EAAE,GAC1BR,aAAA,CAAcG,MAAA,IAAUH,aAAA,CAAcQ,IAAA,IAAQR,aAAA,CAAcQ,IAAA,KAAS;EACzE;AACF,CAAC;AAQG,MAAAU,YAAA,GAAgBpB,KAAA,IAAiD;EACrE,MAAME,aAAA,GAAgBU,QAAA,CAASC,KAAA,CAAMb,KAAK,CAAC;EAC3C,MAAMqB,mBAAA,GAAsBC,cAAA,CAC1B,MAAMpB,aAAA,CAAcc,KAAA,CAAMO,WAAA,EAC1B,MAAMrB,aAAA,CAAcc,KAAA,CAAMC,KAC5B;EACA,OAAOhB,QAAA,CAAS,OAAO;IACrB,gBAAgBoB,mBAAA,CAAoBL,KAAA;IACpC,iBAAiBd,aAAA,CAAcc,KAAA,CAAMQ,QAAA,KAAa,OAAO,OAAO;EAAA,EAChE;AACJ;AASA,MAAMC,eAAA,GAAmBzB,KAAA,IACvBC,QAAA,CAAS,MAAM;EACP,MAAAC,aAAA,GAAgBC,OAAA,CAAQH,KAAK;EAC5B;IACL,iBAAiBE,aAAA,CAAcwB,SAAA,KAAc;IAC7C,aAAaxB,aAAA,CAAcyB,OAAA,KAAY,QAAQzB,aAAA,CAAc0B,OAAA,KAAY;IACzE,sBAAsB1B,aAAA,CAAc0B,OAAA,KAAY,QAAQ1B,aAAA,CAAcyB,OAAA,KAAY;IAClF,CAAC,aAAazB,aAAA,CAAcQ,IAAI,EAAE,GAAGR,aAAA,CAAcQ,IAAA,KAAS;EAC9D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}