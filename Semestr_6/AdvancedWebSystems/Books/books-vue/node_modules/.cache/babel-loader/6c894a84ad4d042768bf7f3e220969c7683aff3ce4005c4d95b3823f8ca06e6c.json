{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport Api from '../Api.js';\nimport { BAlert, BButton, BForm, BFormGroup, BFormInput, BModal } from \"bootstrap-vue-next\";\nexport default {\n  name: 'BooksTable',\n  components: {\n    BModal,\n    BForm,\n    BFormInput,\n    BFormGroup,\n    BAlert,\n    BButton\n  },\n  data() {\n    return {\n      books: [],\n      authors: [],\n      notification: {\n        show: false,\n        message: '',\n        variant: null // success | danger | info | warning\n      },\n      validationMessage: {\n        show: false,\n        message: '',\n        variant: null\n      },\n      columns: [{\n        label: 'ID',\n        field: 'id',\n        type: 'number',\n        sortable: true\n      }, {\n        label: 'Title',\n        field: 'title',\n        sortable: true\n      }, {\n        label: 'Author',\n        field: 'authorFullName',\n        sortable: true\n      }, {\n        label: 'Pages',\n        field: 'pages',\n        type: 'number',\n        sortable: true\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      form: {\n        title: '',\n        authorId: null,\n        pages: ''\n      },\n      editMode: false,\n      totalBooks: 0,\n      currentPage: 1\n    };\n  },\n  computed: {\n    titleInvalid() {\n      return this.form.title === null || this.form.title.length <= 0;\n    },\n    authorInvalid() {\n      return this.form.authorId === null || this.form.authorId < 0;\n    },\n    pagesInvalid() {\n      return this.form.pages === null || this.form.pages <= 0;\n    },\n    formInvalid() {\n      return this.titleInvalid && this.authorInvalid && this.pagesInvalid;\n    }\n  },\n  mounted() {\n    this.fetchBooks();\n    this.fetchAuthors();\n  },\n  methods: {\n    fetchBooks() {\n      Api.getBooks().then(response => {\n        this.books = response.data.content.map(book => ({\n          ...book,\n          authorFullName: `${book.author.name} ${book.author.surname}`\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch books:', error);\n      });\n    },\n    handlePageChange(page) {\n      currentPage.value = newPage;\n      loadBooks();\n    },\n    fetchAuthors() {\n      Api.getAuthors().then(response => {\n        this.authors = response.data.data.map(author => ({\n          id: author.id,\n          fullname: `${author.name} ${author.surname}`\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch books:', error);\n      });\n    },\n    addBook() {\n      this.editMode = false;\n      this.$refs.bookModal.show();\n    },\n    editBook(book) {\n      this.editMode = true;\n      this.form.id = book.id;\n      this.form.title = book.title;\n      this.form.pages = book.pages;\n      this.form.authorId = book.author.id;\n      this.$refs.bookModal.show();\n    },\n    deleteBook(book) {\n      if (window.confirm(`Are you sure you want to delete the book: ${book.title}?`)) {\n        Api.deleteBook(book.id).then(() => {\n          this.fetchBooks();\n          this.showNotification('Book added successfully!', \"success\");\n        }).catch(error => {\n          console.error('Error deleting book:', error);\n          this.showNotification('Failed to delete the book.', \"danger\");\n        });\n      }\n    },\n    showNotification(message, variant) {\n      this.notification.message = message;\n      this.notification.variant = variant;\n      this.notification.show = true;\n      setTimeout(() => {\n        this.notification.show = false;\n      }, 2000);\n    },\n    handleSubmit(event) {\n      if (this.titleInvalid || this.authorInvalid || this.pagesInvalid) {\n        let message = \"Please enter valid values for: \";\n        if (this.titleInvalid) {\n          message += \"title, \";\n        }\n        if (this.authorInvalid) {\n          message += \"author, \";\n        }\n        if (this.pagesInvalid) {\n          message += \"pages\";\n        }\n        this.showValidationMessage(message, \"danger\");\n        event.preventDefault();\n      } else {\n        const newBook = {\n          ...this.form\n        };\n        console.log(newBook);\n        if (!this.editMode) {\n          Api.addBook(newBook).then(() => {\n            this.fetchBooks();\n            this.showNotification('Book added successfully!', \"success\");\n          }).catch(error => {\n            console.error('Error deleting book:', error);\n            this.showNotification('Failed to add the book.', \"danger\");\n          });\n        } else {\n          Api.updateBook(newBook.id, newBook).then(() => {\n            this.fetchBooks();\n            this.showNotification('Book updated successfully!', \"success\");\n          }).catch(error => {\n            console.error('Error deleting book:', error);\n            this.showNotification('Failed to update the book.', \"danger\");\n          });\n        }\n        this.clearForm();\n      }\n    },\n    showValidationMessage(message, variant) {\n      this.validationMessage.show = true;\n      this.validationMessage.message = message;\n      this.validationMessage.variant = variant;\n    },\n    handleModalClose() {\n      if (this.formInvalid) {\n        return false;\n      } else {\n        this.clearForm();\n        return true;\n      }\n    },\n    clearForm() {\n      this.form = {\n        id: '',\n        title: '',\n        authorId: '',\n        pages: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["Api","BAlert","BButton","BForm","BFormGroup","BFormInput","BModal","name","components","data","books","authors","notification","show","message","variant","validationMessage","columns","label","field","type","sortable","form","title","authorId","pages","editMode","totalBooks","currentPage","computed","titleInvalid","length","authorInvalid","pagesInvalid","formInvalid","mounted","fetchBooks","fetchAuthors","methods","getBooks","then","response","content","map","book","authorFullName","author","surname","catch","error","console","handlePageChange","page","value","newPage","loadBooks","getAuthors","id","fullname","addBook","$refs","bookModal","editBook","deleteBook","window","confirm","showNotification","setTimeout","handleSubmit","event","showValidationMessage","preventDefault","newBook","log","updateBook","clearForm","handleModalClose"],"sources":["/home/tymoteusz/Projects/StudiesProjects/Semestr_6/AdvancedWebSystems/Books/books-vue/src/components/BooksTable.vue"],"sourcesContent":["<template>\n  <div class=\"p-4 bg-white shadow-sm rounded vh-100\">\n    <b-modal ref=\"bookModal\" title=\"New Book\" @ok=\"handleSubmit\" @cancel=\"handleModalClose\">\n      <b-form @submit.prevent=\"handleSubmit\">\n        <b-form-group label=\"Title\" label-for=\"title\" :invalid=\"titleInvalid\">\n          <b-form-input\n              v-model=\"form.title\"\n              type=\"text\"\n              placeholder=\"Enter title\"\n              required />\n        </b-form-group>\n\n        <b-form-group label=\"Author\" label-for=\"author\" :invalid=\"authorInvalid\">\n          <b-form-select\n              id=\"author\"\n              v-model=\"form.authorId\"\n              :options=\"authors\"\n              required\n              text-field=\"fullname\"\n              value-field=\"id\"\n              placeholder=\"Select an author\"\n          />\n        </b-form-group>\n\n        <b-form-group label=\"Pages\" label-for=\"pages\" :invalid=\"pagesInvalid\">\n          <b-form-input\n              id=\"pages\"\n              v-model.number=\"form.pages\"\n              type=\"number\"\n              min=\"0\"\n              required\n              placeholder=\"Enter pages\"\n          ></b-form-input>\n        </b-form-group>\n        <b-alert\n            v-model=validationMessage.show\n            :variant=validationMessage.variant\n            class=\"mt-2\"\n        >\n          {{ validationMessage.message }}\n        </b-alert>\n      </b-form>\n    </b-modal>\n\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\n      <h2 class=\"h4\">Book List</h2>\n      <b-button variant=\"primary\" @click=\"addBook\">Add Book</b-button>\n    </div>\n\n    <vue-good-table\n        :columns=\"columns\"\n        :rows=\"books\"\n        :pagination-options=\"{ enabled: true, perPage: 5 }\"\n        :search-options=\"{ enabled: true, placeholder: 'Search books...' }\"\n        :sort-options=\"{ enabled: true }\"\n        :pagination=\"true\"\n        :totalRows=\"totalBooks\"\n        @on-page-change=\"handlePageChange\"\n    >\n      <template #table-row=\"props\">\n        <template v-if=\"props.column.field === 'actions'\">\n          <div class=\"d-flex gap-2\">\n            <b-button size=\"sm\" variant=\"warning\" @click=\"editBook(props.row)\">Edit</b-button>\n            <b-button size=\"sm\" variant=\"danger\" @click=\"deleteBook(props.row)\">Delete</b-button>\n          </div>\n        </template>\n        <template v-else>\n          {{ props.formattedRow[props.column.field] }}\n        </template>\n      </template>\n    </vue-good-table>\n\n    <b-alert\n        v-model=notification.show\n        :variant=notification.variant\n        class=\"mb-3 bottom-alert\"\n    >\n      {{ notification.message }}\n    </b-alert>\n  </div>\n</template>\n\n<script>\nimport Api from '../Api.js';\nimport {BAlert, BButton, BForm, BFormGroup, BFormInput, BModal} from \"bootstrap-vue-next\";\n\nexport default {\n  name: 'BooksTable',\n  components: {BModal, BForm, BFormInput, BFormGroup, BAlert, BButton},\n  data() {\n    return {\n      books: [],\n      authors: [],\n      notification: {\n        show: false,\n        message: '',\n        variant: null, // success | danger | info | warning\n      },\n      validationMessage: {\n        show: false,\n        message: '',\n        variant: null,\n      },\n      columns: [\n        { label: 'ID', field: 'id', type: 'number', sortable: true },\n        { label: 'Title', field: 'title', sortable: true },\n        { label: 'Author', field: 'authorFullName', sortable: true },\n        { label: 'Pages', field: 'pages', type: 'number', sortable: true },\n        { label: 'Actions', field: 'actions' },\n      ],\n      form: {\n        title: '',\n        authorId: null,\n        pages: '',\n      },\n      editMode: false,\n      totalBooks: 0,\n      currentPage: 1,\n    };\n  },\n  computed: {\n    titleInvalid() {\n      return this.form.title === null || this.form.title.length <= 0;\n    },\n    authorInvalid() {\n      return this.form.authorId === null || this.form.authorId < 0;\n    },\n    pagesInvalid() {\n      return this.form.pages === null || this.form.pages <= 0;\n    },\n    formInvalid() {\n      return this.titleInvalid && this.authorInvalid && this.pagesInvalid;\n    },\n  },\n  mounted() {\n    this.fetchBooks();\n    this.fetchAuthors();\n  },\n  methods: {\n    fetchBooks() {\n      Api.getBooks()\n          .then((response) => {\n            this.books = response.data.content.map((book) => ({\n              ...book,\n              authorFullName: `${book.author.name} ${book.author.surname}`,\n            }));\n          })\n          .catch((error) => {\n            console.error('Failed to fetch books:', error);\n          });\n    },\n    handlePageChange(page) {\n      currentPage.value = newPage;\n      loadBooks();\n    },\n    fetchAuthors() {\n      Api.getAuthors()\n          .then((response) => {\n            this.authors = response.data.data.map(author => ({\n              id: author.id,\n              fullname: `${author.name} ${author.surname}`\n            }));\n          })\n          .catch((error) => {\n            console.error('Failed to fetch books:', error);\n          });\n    },\n    addBook() {\n      this.editMode = false;\n      this.$refs.bookModal.show();\n    },\n    editBook(book) {\n      this.editMode = true;\n      this.form.id = book.id;\n      this.form.title = book.title;\n      this.form.pages = book.pages;\n      this.form.authorId = book.author.id;\n      this.$refs.bookModal.show();\n    },\n    deleteBook(book) {\n      if (window.confirm(`Are you sure you want to delete the book: ${book.title}?`)) {\n        Api.deleteBook(book.id)\n            .then(() => {\n              this.fetchBooks();\n              this.showNotification('Book added successfully!', \"success\");\n            })\n            .catch((error) => {\n              console.error('Error deleting book:', error);\n              this.showNotification('Failed to delete the book.', \"danger\");\n            });\n      }\n    },\n    showNotification(message, variant) {\n      this.notification.message = message;\n      this.notification.variant = variant;\n      this.notification.show = true;\n      setTimeout(() => {\n        this.notification.show = false;\n      }, 2000);\n    },\n    handleSubmit(event) {\n      if (this.titleInvalid || this.authorInvalid || this.pagesInvalid) {\n        let message = \"Please enter valid values for: \";\n        if (this.titleInvalid) {\n          message += \"title, \";\n        }\n        if (this.authorInvalid) {\n          message += \"author, \";\n        }\n        if (this.pagesInvalid) {\n          message += \"pages\";\n        }\n        this.showValidationMessage(message, \"danger\");\n        event.preventDefault();\n      } else {\n        const newBook = { ...this.form };\n        console.log(newBook);\n        if (!this.editMode) {\n          Api.addBook(newBook)\n              .then(() => {\n                this.fetchBooks();\n                this.showNotification('Book added successfully!', \"success\");\n              })\n              .catch((error) => {\n                console.error('Error deleting book:', error);\n                this.showNotification('Failed to add the book.', \"danger\");\n              });\n        } else {\n          Api.updateBook(newBook.id, newBook)\n              .then(() => {\n                this.fetchBooks();\n                this.showNotification('Book updated successfully!', \"success\");\n              })\n              .catch((error) => {\n                console.error('Error deleting book:', error);\n                this.showNotification('Failed to update the book.', \"danger\");\n              });\n        }\n\n        this.clearForm();\n      }\n    },\n    showValidationMessage(message, variant) {\n      this.validationMessage.show = true;\n      this.validationMessage.message = message;\n      this.validationMessage.variant = variant;\n    },\n    handleModalClose() {\n      if (this.formInvalid) {\n        return false;\n      } else {\n        this.clearForm();\n        return true;\n      }\n    },\n    clearForm() {\n      this.form = {\n        id: '',\n        title: '',\n        authorId: '',\n        pages: '',\n      };\n    },\n  },\n};\n</script>\n<style>\n.bottom-alert {\n  position: absolute !important;\n  bottom: 0;\n}\n</style>"],"mappings":";;AAmFA,OAAOA,GAAE,MAAO,WAAW;AAC3B,SAAQC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,QAAO,oBAAoB;AAEzF,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IAACF,MAAM;IAAEH,KAAK;IAAEE,UAAU;IAAED,UAAU;IAAEH,MAAM;IAAEC;EAAO,CAAC;EACpEO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;QACZC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,IAAI,CAAE;MACjB,CAAC;MACDC,iBAAiB,EAAE;QACjBH,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC;MACDE,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAK,CAAC,EAC5D;QAAEH,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEE,QAAQ,EAAE;MAAK,CAAC,EAClD;QAAEH,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE,gBAAgB;QAAEE,QAAQ,EAAE;MAAK,CAAC,EAC5D;QAAEH,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAK,CAAC,EAClE;QAAEH,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAU,CAAC,CACvC;MACDG,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;MACT,CAAC;MACDC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACR,IAAI,CAACC,KAAI,KAAM,IAAG,IAAK,IAAI,CAACD,IAAI,CAACC,KAAK,CAACQ,MAAK,IAAK,CAAC;IAChE,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACV,IAAI,CAACE,QAAO,KAAM,IAAG,IAAK,IAAI,CAACF,IAAI,CAACE,QAAO,GAAI,CAAC;IAC9D,CAAC;IACDS,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACX,IAAI,CAACG,KAAI,KAAM,IAAG,IAAK,IAAI,CAACH,IAAI,CAACG,KAAI,IAAK,CAAC;IACzD,CAAC;IACDS,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACJ,YAAW,IAAK,IAAI,CAACE,aAAY,IAAK,IAAI,CAACC,YAAY;IACrE;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACPF,UAAUA,CAAA,EAAG;MACXpC,GAAG,CAACuC,QAAQ,CAAC,EACRC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAAC/B,KAAI,GAAI+B,QAAQ,CAAChC,IAAI,CAACiC,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;UAChD,GAAGA,IAAI;UACPC,cAAc,EAAE,GAAGD,IAAI,CAACE,MAAM,CAACvC,IAAI,IAAIqC,IAAI,CAACE,MAAM,CAACC,OAAO;QAC5D,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACR,CAAC;IACDE,gBAAgBA,CAACC,IAAI,EAAE;MACrBxB,WAAW,CAACyB,KAAI,GAAIC,OAAO;MAC3BC,SAAS,CAAC,CAAC;IACb,CAAC;IACDlB,YAAYA,CAAA,EAAG;MACbrC,GAAG,CAACwD,UAAU,CAAC,EACVhB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAAC9B,OAAM,GAAI8B,QAAQ,CAAChC,IAAI,CAACA,IAAI,CAACkC,GAAG,CAACG,MAAK,KAAM;UAC/CW,EAAE,EAAEX,MAAM,CAACW,EAAE;UACbC,QAAQ,EAAE,GAAGZ,MAAM,CAACvC,IAAI,IAAIuC,MAAM,CAACC,OAAO;QAC5C,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACR,CAAC;IACDU,OAAOA,CAAA,EAAG;MACR,IAAI,CAACjC,QAAO,GAAI,KAAK;MACrB,IAAI,CAACkC,KAAK,CAACC,SAAS,CAAChD,IAAI,CAAC,CAAC;IAC7B,CAAC;IACDiD,QAAQA,CAAClB,IAAI,EAAE;MACb,IAAI,CAAClB,QAAO,GAAI,IAAI;MACpB,IAAI,CAACJ,IAAI,CAACmC,EAAC,GAAIb,IAAI,CAACa,EAAE;MACtB,IAAI,CAACnC,IAAI,CAACC,KAAI,GAAIqB,IAAI,CAACrB,KAAK;MAC5B,IAAI,CAACD,IAAI,CAACG,KAAI,GAAImB,IAAI,CAACnB,KAAK;MAC5B,IAAI,CAACH,IAAI,CAACE,QAAO,GAAIoB,IAAI,CAACE,MAAM,CAACW,EAAE;MACnC,IAAI,CAACG,KAAK,CAACC,SAAS,CAAChD,IAAI,CAAC,CAAC;IAC7B,CAAC;IACDkD,UAAUA,CAACnB,IAAI,EAAE;MACf,IAAIoB,MAAM,CAACC,OAAO,CAAC,6CAA6CrB,IAAI,CAACrB,KAAK,GAAG,CAAC,EAAE;QAC9EvB,GAAG,CAAC+D,UAAU,CAACnB,IAAI,CAACa,EAAE,EACjBjB,IAAI,CAAC,MAAM;UACV,IAAI,CAACJ,UAAU,CAAC,CAAC;UACjB,IAAI,CAAC8B,gBAAgB,CAAC,0BAA0B,EAAE,SAAS,CAAC;QAC9D,CAAC,EACAlB,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5C,IAAI,CAACiB,gBAAgB,CAAC,4BAA4B,EAAE,QAAQ,CAAC;QAC/D,CAAC,CAAC;MACR;IACF,CAAC;IACDA,gBAAgBA,CAACpD,OAAO,EAAEC,OAAO,EAAE;MACjC,IAAI,CAACH,YAAY,CAACE,OAAM,GAAIA,OAAO;MACnC,IAAI,CAACF,YAAY,CAACG,OAAM,GAAIA,OAAO;MACnC,IAAI,CAACH,YAAY,CAACC,IAAG,GAAI,IAAI;MAC7BsD,UAAU,CAAC,MAAM;QACf,IAAI,CAACvD,YAAY,CAACC,IAAG,GAAI,KAAK;MAChC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDuD,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,IAAI,CAACvC,YAAW,IAAK,IAAI,CAACE,aAAY,IAAK,IAAI,CAACC,YAAY,EAAE;QAChE,IAAInB,OAAM,GAAI,iCAAiC;QAC/C,IAAI,IAAI,CAACgB,YAAY,EAAE;UACrBhB,OAAM,IAAK,SAAS;QACtB;QACA,IAAI,IAAI,CAACkB,aAAa,EAAE;UACtBlB,OAAM,IAAK,UAAU;QACvB;QACA,IAAI,IAAI,CAACmB,YAAY,EAAE;UACrBnB,OAAM,IAAK,OAAO;QACpB;QACA,IAAI,CAACwD,qBAAqB,CAACxD,OAAO,EAAE,QAAQ,CAAC;QAC7CuD,KAAK,CAACE,cAAc,CAAC,CAAC;MACxB,OAAO;QACL,MAAMC,OAAM,GAAI;UAAE,GAAG,IAAI,CAAClD;QAAK,CAAC;QAChC4B,OAAO,CAACuB,GAAG,CAACD,OAAO,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC9C,QAAQ,EAAE;UAClB1B,GAAG,CAAC2D,OAAO,CAACa,OAAO,EACdhC,IAAI,CAAC,MAAM;YACV,IAAI,CAACJ,UAAU,CAAC,CAAC;YACjB,IAAI,CAAC8B,gBAAgB,CAAC,0BAA0B,EAAE,SAAS,CAAC;UAC9D,CAAC,EACAlB,KAAK,CAAEC,KAAK,IAAK;YAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;YAC5C,IAAI,CAACiB,gBAAgB,CAAC,yBAAyB,EAAE,QAAQ,CAAC;UAC5D,CAAC,CAAC;QACR,OAAO;UACLlE,GAAG,CAAC0E,UAAU,CAACF,OAAO,CAACf,EAAE,EAAEe,OAAO,EAC7BhC,IAAI,CAAC,MAAM;YACV,IAAI,CAACJ,UAAU,CAAC,CAAC;YACjB,IAAI,CAAC8B,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;UAChE,CAAC,EACAlB,KAAK,CAAEC,KAAK,IAAK;YAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;YAC5C,IAAI,CAACiB,gBAAgB,CAAC,4BAA4B,EAAE,QAAQ,CAAC;UAC/D,CAAC,CAAC;QACR;QAEA,IAAI,CAACS,SAAS,CAAC,CAAC;MAClB;IACF,CAAC;IACDL,qBAAqBA,CAACxD,OAAO,EAAEC,OAAO,EAAE;MACtC,IAAI,CAACC,iBAAiB,CAACH,IAAG,GAAI,IAAI;MAClC,IAAI,CAACG,iBAAiB,CAACF,OAAM,GAAIA,OAAO;MACxC,IAAI,CAACE,iBAAiB,CAACD,OAAM,GAAIA,OAAO;IAC1C,CAAC;IACD6D,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAAC1C,WAAW,EAAE;QACpB,OAAO,KAAK;MACd,OAAO;QACL,IAAI,CAACyC,SAAS,CAAC,CAAC;QAChB,OAAO,IAAI;MACb;IACF,CAAC;IACDA,SAASA,CAAA,EAAG;MACV,IAAI,CAACrD,IAAG,GAAI;QACVmC,EAAE,EAAE,EAAE;QACNlC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}