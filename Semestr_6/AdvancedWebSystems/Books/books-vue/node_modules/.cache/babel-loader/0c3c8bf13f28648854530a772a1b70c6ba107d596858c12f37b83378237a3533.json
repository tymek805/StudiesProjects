{"ast":null,"code":"const CODE_DOWN = \"ArrowDown\";\nconst CODE_END = \"End\";\nconst CODE_HOME = \"Home\";\nconst CODE_LEFT = \"ArrowLeft\";\nconst CODE_PAGEDOWN = \"PageDown\";\nconst CODE_PAGEUP = \"PageUp\";\nconst CODE_RIGHT = \"ArrowRight\";\nconst CODE_UP = \"ArrowUp\";\nconst RX_UNDERSCORE = /_/g;\nconst RX_LOWER_UPPER = /([a-z])([A-Z])/g;\nconst RX_NUMBER = /^[0-9]*\\.?[0-9]+$/;\nconst RX_START_SPACE_WORD = /(\\s|^)(\\w)/g;\nconst RX_FIRST_START_SPACE_WORD = /(\\s|^)(\\w)/;\nconst RX_SPACE_SPLIT = /\\s+/;\nconst RX_HASH = /^#/;\nconst RX_HASH_ID = /^#[A-Za-z]+[\\w\\-:.]*$/;\nconst RX_REGEXP_REPLACE = /[-/\\\\^$*+?.()|[\\]{}]/g;\nconst RX_SPACES = /[\\s\\uFEFF\\xA0]+/g;\nexport { CODE_LEFT as C, RX_NUMBER as R, CODE_UP as a, CODE_RIGHT as b, CODE_DOWN as c, RX_SPACES as d, RX_REGEXP_REPLACE as e, RX_UNDERSCORE as f, RX_LOWER_UPPER as g, RX_FIRST_START_SPACE_WORD as h, RX_START_SPACE_WORD as i, CODE_PAGEUP as j, CODE_PAGEDOWN as k, CODE_HOME as l, CODE_END as m, RX_SPACE_SPLIT as n, RX_HASH_ID as o, RX_HASH as p };","map":{"version":3,"names":["CODE_DOWN","CODE_END","CODE_HOME","CODE_LEFT","CODE_PAGEDOWN","CODE_PAGEUP","CODE_RIGHT","CODE_UP","RX_UNDERSCORE","RX_LOWER_UPPER","RX_NUMBER","RX_START_SPACE_WORD","RX_FIRST_START_SPACE_WORD","RX_SPACE_SPLIT","RX_HASH","RX_HASH_ID","RX_REGEXP_REPLACE","RX_SPACES"],"sources":["../src/utils/constants.ts"],"sourcesContent":["export const CODE_BACKSPACE = 'Backspace'\nexport const CODE_BREAK = 19\nexport const CODE_DELETE = 46\nexport const CODE_DOWN = 'ArrowDown'\nexport const CODE_END = 'End'\nexport const CODE_ENTER = 13\nexport const CODE_ESC = 27\nexport const CODE_HOME = 'Home'\nexport const CODE_LEFT = 'ArrowLeft'\nexport const CODE_PAGEDOWN = 'PageDown'\nexport const CODE_PAGEUP = 'PageUp'\nexport const CODE_RIGHT = 'ArrowRight'\nexport const CODE_SPACE = 32\nexport const CODE_UP = 'ArrowUp'\n\nexport const RX_UNDERSCORE = /_/g\nexport const RX_LOWER_UPPER = /([a-z])([A-Z])/g\nexport const RX_NUMBER = /^[0-9]*\\.?[0-9]+$/\nexport const RX_START_SPACE_WORD = /(\\s|^)(\\w)/g\nexport const RX_FIRST_START_SPACE_WORD = /(\\s|^)(\\w)/\nexport const RX_SPACE_SPLIT = /\\s+/\nexport const RX_HASH = /^#/\nexport const RX_HASH_ID = /^#[A-Za-z]+[\\w\\-:.]*$/\n\nexport const RX_STRIP_LOCALE_MODS = /-u-.+/\nexport const RX_REGEXP_REPLACE = /[-/\\\\^$*+?.()|[\\]{}]/g\nexport const RX_SPACES = /[\\s\\uFEFF\\xA0]+/g\n"],"mappings":"AAGO,MAAMA,SAAA,GAAY;AAClB,MAAMC,QAAA,GAAW;AAGjB,MAAMC,SAAA,GAAY;AAClB,MAAMC,SAAA,GAAY;AAClB,MAAMC,aAAA,GAAgB;AACtB,MAAMC,WAAA,GAAc;AACpB,MAAMC,UAAA,GAAa;AAEnB,MAAMC,OAAA,GAAU;AAEhB,MAAMC,aAAA,GAAgB;AACtB,MAAMC,cAAA,GAAiB;AACvB,MAAMC,SAAA,GAAY;AAClB,MAAMC,mBAAA,GAAsB;AAC5B,MAAMC,yBAAA,GAA4B;AAClC,MAAMC,cAAA,GAAiB;AACvB,MAAMC,OAAA,GAAU;AAChB,MAAMC,UAAA,GAAa;AAGnB,MAAMC,iBAAA,GAAoB;AAC1B,MAAMC,SAAA,GAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}