{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'BooksTable',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const books = ref([]);\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('192.168.192.41:8080/api/v1/books');\n        books.value = response.data;\n      } catch (error) {\n        console.error('Failed to fetch books:', error);\n      }\n    };\n    onMounted(fetchBooks);\n    const __returned__ = {\n      books,\n      fetchBooks,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","books","fetchBooks","response","get","value","data","error","console"],"sources":["/home/tymoteusz/Projects/StudiesProjects/Semestr_6/AdvancedWebSystems/Books/books-vue/src/components/BooksTable.vue"],"sourcesContent":["<template>\n  <div class=\"p-6\">\n    <h1 class=\"text-2xl font-bold mb-4\">Books List</h1>\n    <table class=\"min-w-full border border-gray-300\">\n      <thead>\n      <tr class=\"bg-gray-100\">\n        <th class=\"text-left p-2 border-b\">Title</th>\n        <th class=\"text-left p-2 border-b\">Author</th>\n        <th class=\"text-left p-2 border-b\">Pages</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"book in books\" :key=\"book.id\" class=\"hover:bg-gray-50\">\n        <td class=\"p-2 border-b\">{{ book.title }}</td>\n        <td class=\"p-2 border-b\">{{ book.author.name }} {{ book.author.surname }}</td>\n        <td class=\"p-2 border-b\">{{ book.pages }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport {ref, onMounted} from 'vue'\nimport axios from 'axios'\n\nconst books = ref([])\n\nconst fetchBooks = async () => {\n  try {\n    const response = await axios.get('192.168.192.41:8080/api/v1/books')\n    books.value = response.data\n  } catch (error) {\n    console.error('Failed to fetch books:', error)\n  }\n}\n\nonMounted(fetchBooks)\n</script>\n\n<style scoped>\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\nth, td {\n  text-align: left;\n}\n</style>\n"],"mappings":"AAuBA,SAAQA,GAAG,EAAEC,SAAS,QAAO,KAAI;AACjC,OAAOC,KAAK,MAAM,OAAM;;;;;;;IAExB,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE;IAEpB,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kCAAkC;QACnEH,KAAK,CAACI,KAAK,GAAGF,QAAQ,CAACG,IAAG;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK;MAC/C;IACF;IAEAR,SAAS,CAACG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}