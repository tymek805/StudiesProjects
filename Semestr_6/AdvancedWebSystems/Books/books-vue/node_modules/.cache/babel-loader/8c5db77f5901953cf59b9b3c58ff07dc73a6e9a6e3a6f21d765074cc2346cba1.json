{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, useSlots, toRef, ref, provide, computed, useTemplateRef, createBlock, openBlock, resolveDynamicComponent, normalizeClass, unref, withCtx, createVNode, createElementBlock, createCommentVNode, renderSlot, createTextVNode, toDisplayString, Fragment, normalizeProps, mergeProps } from \"vue\";\nimport { u as useAriaInvalid } from \"./useAriaInvalid-BTUbGj3Y.mjs\";\nimport { a as isVisible, b as attemptFocus } from \"./dom-BK2w00Ec.mjs\";\nimport { _ as _sfc_main$4 } from \"./BCol.vue_vue_type_script_setup_true_lang-D9P1sZki.mjs\";\nimport { _ as _sfc_main$1, c as _sfc_main$2, b as _sfc_main$3, a as _sfc_main$5 } from \"./BFormValidFeedback.vue_vue_type_script_setup_true_lang-D2f9fSp7.mjs\";\nimport { u as upperFirst } from \"./stringUtils-mwxHpj6j.mjs\";\nimport { u as useStateClass } from \"./useStateClass-BGbSLWFN.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { f as createReusableTemplate } from \"./index-cC189kCW.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { j as formGroupPluginKey } from \"./keys-D3gOZjD-.mjs\";\nconst suffixPropName = (suffix, value) => value + (suffix ? upperFirst(suffix) : \"\");\nconst _hoisted_1 = {\n  key: 0,\n  ref: \"_content\",\n  class: \"form-floating\"\n};\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BFormGroup\",\n  props: {\n    contentCols: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelCols: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelAlign: {\n      default: void 0\n    },\n    ariaInvalid: {\n      type: [Boolean, String],\n      default: void 0\n    },\n    description: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    feedbackAriaLive: {\n      default: \"assertive\"\n    },\n    floating: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    invalidFeedback: {\n      default: void 0\n    },\n    label: {\n      default: void 0\n    },\n    labelClass: {\n      default: void 0\n    },\n    labelFor: {\n      default: void 0\n    },\n    labelSize: {\n      default: void 0\n    },\n    labelVisuallyHidden: {\n      type: Boolean,\n      default: false\n    },\n    state: {\n      type: [Boolean, null],\n      default: null\n    },\n    tooltip: {\n      type: Boolean,\n      default: false\n    },\n    validFeedback: {\n      default: void 0\n    },\n    validated: {\n      type: Boolean,\n      default: false\n    },\n    contentColsSm: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    contentColsMd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    contentColsLg: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    contentColsXl: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelColsSm: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelColsMd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelColsLg: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelColsXl: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    labelAlignSm: {\n      default: void 0\n    },\n    labelAlignMd: {\n      default: void 0\n    },\n    labelAlignLg: {\n      default: void 0\n    },\n    labelAlignXl: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const INPUTS = [\"input\", \"select\", \"textarea\"];\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormGroup\");\n    const slots = useSlots();\n    const LabelContentTemplate = createReusableTemplate();\n    const ContentTemplate = createReusableTemplate();\n    const computedState = toRef(() => props.state);\n    const childId = ref([]);\n    provide(formGroupPluginKey, id => {\n      childId.value = [id];\n      return {\n        state: computedState\n      };\n    });\n    const computedLabelFor = computed(() => {\n      if (props.labelFor !== void 0) return props.labelFor;\n      if (childId.value[0] && childId.value[0].value) return childId.value[0].value;\n      return null;\n    });\n    const breakPoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\n    const getColProps = (props2, prefix) =>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    breakPoints.reduce((result, breakpoint) => {\n      const suffix = suffixPropName(breakpoint === \"xs\" ? \"\" : breakpoint, `${prefix}Cols`);\n      let propValue = props2[suffix];\n      propValue = propValue === \"\" ? true : propValue || false;\n      if (!(typeof propValue === \"boolean\") && propValue !== \"auto\") {\n        const val = Number.parseInt(propValue);\n        propValue = Number.isNaN(val) ? 0 : val;\n        propValue = propValue > 0 ? propValue : false;\n      }\n      if (propValue) {\n        if (breakpoint === \"xs\") {\n          result[typeof propValue === \"boolean\" ? \"col\" : \"cols\"] = propValue;\n        } else {\n          result[breakpoint || (typeof propValue === \"boolean\" ? \"col\" : \"cols\")] = propValue;\n        }\n      }\n      return result;\n    }, {});\n    const content = useTemplateRef(\"_content\");\n    const contentColProps = computed(() => getColProps(props, \"content\"));\n    const labelAlignClasses = computed(() => ((props2, prefix) => breakPoints.reduce((result, breakpoint) => {\n      const suffix = suffixPropName(breakpoint === \"xs\" ? \"\" : breakpoint, `${prefix}Align`);\n      const propValue = props2[suffix] || null;\n      if (propValue) {\n        if (breakpoint === \"xs\") {\n          result.push(`text-${propValue}`);\n        } else {\n          result.push(`text-${breakpoint}-${propValue}`);\n        }\n      }\n      return result;\n    }, []))(props, \"label\"));\n    const labelColProps = computed(() => getColProps(props, \"label\"));\n    const isHorizontal = computed(() => Object.keys(contentColProps.value).length > 0 || Object.keys(labelColProps.value).length > 0);\n    const stateClass = useStateClass(computedState);\n    const computedAriaInvalid = useAriaInvalid(() => props.ariaInvalid, computedState);\n    const onLegendClick = event => {\n      if (computedLabelFor.value || content.value === null) return;\n      const {\n        target\n      } = event;\n      const tagName = target ? target.tagName : \"\";\n      if ([...INPUTS, \"a\", \"button\", \"label\"].indexOf(tagName) !== -1) return;\n      const inputs = [...content.value.querySelectorAll(INPUTS.map(v => `${v}:not([disabled])`).join())].filter(isVisible);\n      const [inp] = inputs;\n      if (inputs.length === 1 && inp instanceof HTMLElement) {\n        attemptFocus(inp);\n      }\n    };\n    const computedId = useId(() => props.id);\n    const labelId = useId(void 0, \"_BV_label_\");\n    const labelTag = computed(() => !computedLabelFor.value ? \"legend\" : \"label\");\n    const labelClasses = computed(() => [isHorizontal.value ? \"col-form-label\" : \"form-label\", {\n      \"bv-no-focus-ring\": !computedLabelFor.value,\n      \"col-form-label\": isHorizontal.value || !computedLabelFor.value,\n      \"pt-0\": !isHorizontal.value && !computedLabelFor.value,\n      \"d-block\": !isHorizontal.value && computedLabelFor.value,\n      [`col-form-label-${props.labelSize}`]: !!props.labelSize,\n      \"visually-hidden\": props.labelVisuallyHidden\n    }, labelAlignClasses.value, props.labelClass]);\n    const invalidFeedbackId = useId(void 0, \"_BV_feedback_invalid_\");\n    const validFeedbackId = useId(void 0, \"_BV_feedback_valid_\");\n    const descriptionId = useId(void 0, \"_BV_description_\");\n    const isFieldset = computed(() => !computedLabelFor.value);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(isFieldset.value ? \"fieldset\" : \"div\"), {\n        id: unref(computedId),\n        disabled: isFieldset.value ? unref(props).disabled : null,\n        role: isFieldset.value ? null : \"group\",\n        \"aria-invalid\": unref(computedAriaInvalid),\n        \"aria-labelledby\": isFieldset.value && isHorizontal.value ? unref(labelId) : null,\n        class: normalizeClass([[unref(stateClass), {\n          \"was-validated\": unref(props).validated\n        }], \"b-form-group\"])\n      }, {\n        default: withCtx(() => [createVNode(unref(ContentTemplate).define, null, {\n          default: withCtx(() => [slots[\"invalid-feedback\"] || unref(props).invalidFeedback ? (openBlock(), createBlock(_sfc_main$1, {\n            key: 0,\n            id: unref(invalidFeedbackId),\n            \"aria-live\": unref(props).feedbackAriaLive,\n            state: computedState.value,\n            tooltip: unref(props).tooltip\n          }, {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"invalid-feedback\", {}, () => [createTextVNode(toDisplayString(unref(props).invalidFeedback), 1)])]),\n            _: 3\n          }, 8, [\"id\", \"aria-live\", \"state\", \"tooltip\"])) : createCommentVNode(\"\", true), slots[\"valid-feedback\"] || unref(props).validFeedback ? (openBlock(), createBlock(_sfc_main$2, {\n            key: 1,\n            id: unref(validFeedbackId),\n            \"aria-live\": unref(props).feedbackAriaLive,\n            state: computedState.value,\n            tooltip: unref(props).tooltip\n          }, {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"valid-feedback\", {}, () => [createTextVNode(toDisplayString(unref(props).validFeedback), 1)])]),\n            _: 3\n          }, 8, [\"id\", \"aria-live\", \"state\", \"tooltip\"])) : createCommentVNode(\"\", true), slots.description || unref(props).description ? (openBlock(), createBlock(_sfc_main$3, {\n            key: 2,\n            id: unref(descriptionId)\n          }, {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"description\", {}, () => [createTextVNode(toDisplayString(unref(props).description), 1)])]),\n            _: 3\n          }, 8, [\"id\"])) : createCommentVNode(\"\", true)]),\n          _: 3\n        }), createVNode(unref(LabelContentTemplate).define, null, {\n          default: withCtx(() => [slots.label || unref(props).label || isHorizontal.value ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [isHorizontal.value ? (openBlock(), createBlock(_sfc_main$4, normalizeProps(mergeProps({\n            key: 0\n          }, labelColProps.value)), {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(labelTag.value), {\n              id: unref(labelId),\n              for: computedLabelFor.value || null,\n              tabindex: isFieldset.value ? \"-1\" : null,\n              class: normalizeClass(labelClasses.value),\n              onClick: _cache[0] || (_cache[0] = $event => isFieldset.value ? onLegendClick : null)\n            }, {\n              default: withCtx(() => [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(unref(props).label), 1)])]),\n              _: 3\n            }, 8, [\"id\", \"for\", \"tabindex\", \"class\"]))]),\n            _: 3\n          }, 16)) : (openBlock(), createBlock(resolveDynamicComponent(labelTag.value), {\n            key: 1,\n            id: unref(labelId),\n            for: computedLabelFor.value || null,\n            tabindex: isFieldset.value ? \"-1\" : null,\n            class: normalizeClass(labelClasses.value),\n            onClick: _cache[1] || (_cache[1] = $event => isFieldset.value ? onLegendClick : null)\n          }, {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(unref(props).label), 1)])]),\n            _: 3\n          }, 8, [\"id\", \"for\", \"tabindex\", \"class\"]))], 64)) : createCommentVNode(\"\", true)]),\n          _: 3\n        }), isHorizontal.value ? (openBlock(), createBlock(_sfc_main$5, {\n          key: 0\n        }, {\n          default: withCtx(() => [createVNode(unref(LabelContentTemplate).reuse), createVNode(_sfc_main$4, mergeProps(contentColProps.value, {\n            ref: \"_content\"\n          }), {\n            default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n              id: unref(computedId),\n              ariaDescribedby: null,\n              descriptionId: unref(descriptionId),\n              labelId: unref(labelId)\n            }), createVNode(unref(ContentTemplate).reuse)]),\n            _: 3\n          }, 16)]),\n          _: 3\n        })) : (openBlock(), createElementBlock(Fragment, {\n          key: 1\n        }, [unref(props).floating && !isHorizontal.value ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\", {\n          id: unref(computedId),\n          ariaDescribedby: null,\n          descriptionId: unref(descriptionId),\n          labelId: unref(labelId)\n        }), createVNode(unref(LabelContentTemplate).reuse), createVNode(unref(ContentTemplate).reuse)], 512)) : (openBlock(), createElementBlock(Fragment, {\n          key: 1\n        }, [createVNode(unref(LabelContentTemplate).reuse), renderSlot(_ctx.$slots, \"default\", {\n          id: unref(computedId),\n          ariaDescribedby: null,\n          descriptionId: unref(descriptionId),\n          labelId: unref(labelId)\n        }), createVNode(unref(ContentTemplate).reuse)], 64))], 64))]),\n        _: 3\n      }, 8, [\"id\", \"disabled\", \"role\", \"aria-invalid\", \"aria-labelledby\", \"class\"]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["suffixPropName","suffix","value","upperFirst","INPUTS","_props","__props","props","useDefaults","slots","useSlots","LabelContentTemplate","createReusableTemplate","ContentTemplate","computedState","toRef","state","childId","ref","provide","formGroupPluginKey","id","computedLabelFor","computed","labelFor","breakPoints","getColProps","props2","prefix","reduce","result","breakpoint","propValue","val","Number","parseInt","isNaN","content","useTemplateRef","contentColProps","labelAlignClasses","push","labelColProps","isHorizontal","Object","keys","length","stateClass","useStateClass","computedAriaInvalid","useAriaInvalid","ariaInvalid","onLegendClick","event","target","tagName","indexOf","inputs","querySelectorAll","map","v","join","filter","isVisible","inp","HTMLElement","attemptFocus","computedId","useId","labelId","labelTag","labelClasses","labelSize","labelVisuallyHidden","labelClass","invalidFeedbackId","validFeedbackId","descriptionId","isFieldset"],"sources":["../src/utils/props.ts","../src/components/BFormGroup/BFormGroup.vue"],"sourcesContent":["// Suffix can be a falsey value so nothing is appended to string\n// (helps when looping over props & some shouldn't change)\n\nimport {upperFirst} from './stringUtils'\n\n/**\n * Use data last parameters to allow for currying\n *\n * @param suffix\n * @param value\n * @returns\n */\nexport const suffixPropName = (suffix: string, value: string): string =>\n  value + (suffix ? upperFirst(suffix) : '')\n","<template>\n  <component\n    :is=\"isFieldset ? 'fieldset' : 'div'\"\n    :id=\"computedId\"\n    :disabled=\"isFieldset ? props.disabled : null\"\n    :role=\"isFieldset ? null : 'group'\"\n    :aria-invalid=\"computedAriaInvalid\"\n    :aria-labelledby=\"isFieldset && isHorizontal ? labelId : null\"\n    :class=\"[stateClass, {'was-validated': props.validated}]\"\n    class=\"b-form-group\"\n  >\n    <ContentTemplate.define>\n      <BFormInvalidFeedback\n        v-if=\"slots['invalid-feedback'] || props.invalidFeedback\"\n        :id=\"invalidFeedbackId\"\n        :aria-live=\"props.feedbackAriaLive\"\n        :state=\"computedState\"\n        :tooltip=\"props.tooltip\"\n      >\n        <slot name=\"invalid-feedback\">{{ props.invalidFeedback }}</slot>\n      </BFormInvalidFeedback>\n      <BFormValidFeedback\n        v-if=\"slots['valid-feedback'] || props.validFeedback\"\n        :id=\"validFeedbackId\"\n        :aria-live=\"props.feedbackAriaLive\"\n        :state=\"computedState\"\n        :tooltip=\"props.tooltip\"\n      >\n        <slot name=\"valid-feedback\">{{ props.validFeedback }}</slot>\n      </BFormValidFeedback>\n      <BFormText v-if=\"slots.description || props.description\" :id=\"descriptionId\">\n        <slot name=\"description\">{{ props.description }}</slot>\n      </BFormText>\n    </ContentTemplate.define>\n    <LabelContentTemplate.define>\n      <template v-if=\"slots.label || props.label || isHorizontal\">\n        <BCol v-if=\"isHorizontal\" v-bind=\"labelColProps\">\n          <component\n            :is=\"labelTag\"\n            :id=\"labelId\"\n            :for=\"computedLabelFor || null\"\n            :tabindex=\"isFieldset ? '-1' : null\"\n            :class=\"labelClasses\"\n            @click=\"isFieldset ? onLegendClick : null\"\n          >\n            <slot name=\"label\">{{ props.label }}</slot>\n          </component>\n        </BCol>\n        <component\n          :is=\"labelTag\"\n          v-else\n          :id=\"labelId\"\n          :for=\"computedLabelFor || null\"\n          :tabindex=\"isFieldset ? '-1' : null\"\n          :class=\"labelClasses\"\n          @click=\"isFieldset ? onLegendClick : null\"\n        >\n          <slot name=\"label\">{{ props.label }}</slot>\n        </component>\n      </template>\n    </LabelContentTemplate.define>\n    <!-- End of definitions -->\n    <BFormRow v-if=\"isHorizontal\">\n      <LabelContentTemplate.reuse />\n      <BCol v-bind=\"contentColProps\" ref=\"_content\">\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <ContentTemplate.reuse />\n      </BCol>\n    </BFormRow>\n    <template v-else>\n      <div v-if=\"props.floating && !isHorizontal\" ref=\"_content\" class=\"form-floating\">\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <LabelContentTemplate.reuse />\n        <ContentTemplate.reuse />\n      </div>\n      <template v-else>\n        <LabelContentTemplate.reuse />\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <ContentTemplate.reuse />\n      </template>\n    </template>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, type Ref, ref, toRef, useTemplateRef} from 'vue'\nimport {useAriaInvalid} from '../../composables/useAriaInvalid'\nimport {attemptFocus, isVisible} from '../../utils/dom'\nimport BCol from '../BContainer/BCol.vue'\nimport BFormInvalidFeedback from '../BForm/BFormInvalidFeedback.vue'\nimport BFormRow from '../BForm/BFormRow.vue'\nimport BFormText from '../BForm/BFormText.vue'\nimport BFormValidFeedback from '../BForm/BFormValidFeedback.vue'\nimport {suffixPropName} from '../../utils/props'\nimport {useStateClass} from '../../composables/useStateClass'\nimport {useId} from '../../composables/useId'\nimport {createReusableTemplate} from '@vueuse/core'\nimport type {BFormGroupProps} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {formGroupPluginKey} from '../../utils/keys'\n\nconst INPUTS = ['input', 'select', 'textarea']\n\nconst _props = withDefaults(defineProps<BFormGroupProps>(), {\n  ariaInvalid: undefined,\n  contentCols: undefined,\n  contentColsLg: undefined,\n  contentColsMd: undefined,\n  contentColsSm: undefined,\n  contentColsXl: undefined,\n  description: undefined,\n  disabled: false,\n  feedbackAriaLive: 'assertive',\n  floating: false,\n  id: undefined,\n  invalidFeedback: undefined,\n  label: undefined,\n  labelAlign: undefined,\n  labelAlignLg: undefined,\n  labelAlignMd: undefined,\n  labelAlignSm: undefined,\n  labelAlignXl: undefined,\n  labelClass: undefined,\n  labelCols: undefined,\n  labelColsLg: undefined,\n  labelColsMd: undefined,\n  labelColsSm: undefined,\n  labelColsXl: undefined,\n  labelFor: undefined,\n  labelSize: undefined,\n  labelVisuallyHidden: false,\n  state: null,\n  tooltip: false,\n  validFeedback: undefined,\n  validated: false,\n})\nconst props = useDefaults(_props, 'BFormGroup')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'invalid-feedback'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'valid-feedback'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'description'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'label'?: (props: Record<string, never>) => any\n  'default'?: (props: {\n    id: string\n    ariaDescribedby: string | null\n    descriptionId: string | undefined\n    labelId: string | null\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }) => any\n}>()\n\nconst LabelContentTemplate = createReusableTemplate()\nconst ContentTemplate = createReusableTemplate()\n\nconst computedState = toRef(() => props.state)\nconst childId = ref<Ref<string>[]>([])\nprovide(formGroupPluginKey, (id) => {\n  childId.value = [id]\n\n  return {\n    state: computedState,\n  }\n})\nconst computedLabelFor = computed(() => {\n  if (props.labelFor !== undefined) return props.labelFor\n  if (childId.value[0] && childId.value[0].value) return childId.value[0].value\n  return null\n})\n\nconst breakPoints = ['xs', 'sm', 'md', 'lg', 'xl']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getColProps = (props: any, prefix: string) =>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  breakPoints.reduce((result: any, breakpoint: string) => {\n    const suffix = suffixPropName(breakpoint === 'xs' ? '' : breakpoint, `${prefix}Cols`)\n    let propValue = props[suffix]\n    propValue = propValue === '' ? true : propValue || false\n\n    if (!(typeof propValue === 'boolean') && propValue !== 'auto') {\n      const val = Number.parseInt(propValue)\n      propValue = Number.isNaN(val) ? 0 : val\n      propValue = propValue > 0 ? propValue : false\n    }\n\n    if (propValue) {\n      if (breakpoint === 'xs') {\n        result[typeof propValue === 'boolean' ? 'col' : 'cols'] = propValue\n      } else {\n        result[breakpoint || (typeof propValue === 'boolean' ? 'col' : 'cols')] = propValue\n      }\n    }\n    return result\n  }, {})\n\nconst content = useTemplateRef<HTMLElement>('_content')\n\nconst contentColProps = computed(() => getColProps(props, 'content'))\nconst labelAlignClasses = computed(() =>\n  ((props: BFormGroupProps, prefix: string) =>\n    breakPoints.reduce((result: string[], breakpoint) => {\n      const suffix = suffixPropName(\n        breakpoint === 'xs' ? '' : breakpoint,\n        `${prefix}Align`\n      ) as keyof BFormGroupProps\n      const propValue: string = props[suffix] || null\n      if (propValue) {\n        if (breakpoint === 'xs') {\n          result.push(`text-${propValue}`)\n        } else {\n          result.push(`text-${breakpoint}-${propValue}`)\n        }\n      }\n      return result\n    }, []))(props, 'label')\n)\nconst labelColProps = computed(() => getColProps(props, 'label'))\nconst isHorizontal = computed(\n  () => Object.keys(contentColProps.value).length > 0 || Object.keys(labelColProps.value).length > 0\n)\n\nconst stateClass = useStateClass(computedState)\nconst computedAriaInvalid = useAriaInvalid(() => props.ariaInvalid, computedState)\n\nconst onLegendClick = (event: Readonly<MouseEvent>) => {\n  if (computedLabelFor.value || content.value === null) return\n\n  const {target} = event\n  const tagName = target ? (target as HTMLElement).tagName : ''\n\n  if ([...INPUTS, 'a', 'button', 'label'].indexOf(tagName) !== -1) return\n\n  const inputs = [\n    ...content.value.querySelectorAll(INPUTS.map((v) => `${v}:not([disabled])`).join()),\n  ].filter(isVisible)\n  const [inp] = inputs\n  if (inputs.length === 1 && inp instanceof HTMLElement) {\n    attemptFocus(inp)\n  }\n}\n\nconst computedId = useId(() => props.id)\nconst labelId = useId(undefined, '_BV_label_')\nconst labelTag = computed(() => (!computedLabelFor.value ? 'legend' : 'label'))\nconst labelClasses = computed(() => [\n  isHorizontal.value ? 'col-form-label' : 'form-label',\n  {\n    'bv-no-focus-ring': !computedLabelFor.value,\n    'col-form-label': isHorizontal.value || !computedLabelFor.value,\n    'pt-0': !isHorizontal.value && !computedLabelFor.value,\n    'd-block': !isHorizontal.value && computedLabelFor.value,\n    [`col-form-label-${props.labelSize}`]: !!props.labelSize,\n    'visually-hidden': props.labelVisuallyHidden,\n  },\n  labelAlignClasses.value,\n  props.labelClass,\n])\n\nconst invalidFeedbackId = useId(undefined, '_BV_feedback_invalid_')\n\nconst validFeedbackId = useId(undefined, '_BV_feedback_valid_')\nconst descriptionId = useId(undefined, '_BV_description_')\n\nconst isFieldset = computed(() => !computedLabelFor.value)\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}