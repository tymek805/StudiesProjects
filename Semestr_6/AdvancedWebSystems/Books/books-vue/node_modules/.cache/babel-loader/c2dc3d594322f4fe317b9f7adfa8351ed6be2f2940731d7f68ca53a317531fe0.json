{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nconst getClasses = (props, els, propPrefix, classPrefix = propPrefix) => els.reduce((arr, prop) => {\n  if (!props[prop]) return arr;\n  arr.push([classPrefix, prop.replace(propPrefix, \"\"), props[prop]].filter(e => e && typeof e !== \"boolean\").join(\"-\").toLowerCase());\n  return arr;\n}, []);\nexport { getClasses as g };","map":{"version":3,"names":["getClasses","props","els","propPrefix","classPrefix","reduce","arr","prop","push","replace","filter","e","join","toLowerCase"],"sources":["../src/utils/getClasses.ts"],"sourcesContent":["export const getClasses = (\n  props: Readonly<Record<PropertyKey, unknown>>,\n  els: string[],\n  propPrefix: string,\n  classPrefix = propPrefix\n): string[] =>\n  els.reduce((arr: string[], prop) => {\n    if (!props[prop]) return arr\n\n    arr.push(\n      [classPrefix, prop.replace(propPrefix, ''), props[prop]]\n        .filter((e) => e && typeof e !== 'boolean')\n        .join('-')\n        .toLowerCase()\n    )\n\n    return arr\n  }, [] as string[])\n"],"mappings":";;;AAAa,MAAAA,UAAA,GAAaA,CACxBC,KAAA,EACAC,GAAA,EACAC,UAAA,EACAC,WAAA,GAAcD,UAAA,KAEdD,GAAA,CAAIG,MAAA,CAAO,CAACC,GAAA,EAAeC,IAAA,KAAS;EAClC,IAAI,CAACN,KAAA,CAAMM,IAAI,GAAU,OAAAD,GAAA;EAErBA,GAAA,CAAAE,IAAA,CACF,CAACJ,WAAA,EAAaG,IAAA,CAAKE,OAAA,CAAQN,UAAA,EAAY,EAAE,GAAGF,KAAA,CAAMM,IAAI,CAAC,EACpDG,MAAA,CAAQC,CAAA,IAAMA,CAAA,IAAK,OAAOA,CAAA,KAAM,SAAS,EACzCC,IAAA,CAAK,GAAG,EACRC,WAAA,CAAY,CACjB;EAEO,OAAAP,GAAA;AACT,GAAG,EAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}