{"ast":null,"code":"import { defineComponent, useSlots, computed, createBlock, openBlock, resolveDynamicComponent, unref, normalizeClass, withCtx, createElementBlock, createCommentVNode, renderSlot, createTextVNode, toDisplayString } from \"vue\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"visually-hidden\"\n};\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BSpinner\",\n  props: {\n    label: {\n      default: void 0\n    },\n    role: {\n      default: \"status\"\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"span\"\n    },\n    type: {\n      default: \"border\"\n    },\n    variant: {\n      default: null\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BSpinner\");\n    const slots = useSlots();\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.variant\n    })));\n    const computedClasses = computed(() => [`spinner-${props.type}`, colorClasses.value, {\n      [`spinner-${props.type}-sm`]: props.small\n    }]);\n    const hasLabelSlot = computed(() => !isEmptySlot(slots.label));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass(computedClasses.value),\n        role: unref(props).label || hasLabelSlot.value ? unref(props).role : null,\n        \"aria-hidden\": unref(props).label || hasLabelSlot.value ? null : true\n      }, {\n        default: withCtx(() => [unref(props).label || hasLabelSlot.value ? (openBlock(), createElementBlock(\"span\", _hoisted_1, [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(unref(props).label), 1)])])) : createCommentVNode(\"\", true)]),\n        _: 3\n      }, 8, [\"class\", \"role\", \"aria-hidden\"]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_props","__props","props","useDefaults","slots","useSlots","colorClasses","useColorVariantClasses","computed","textVariant","variant","computedClasses","type","value","small","hasLabelSlot","isEmptySlot","label"],"sources":["../src/components/BSpinner/BSpinner.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :class=\"computedClasses\"\n    :role=\"props.label || hasLabelSlot ? props.role : null\"\n    :aria-hidden=\"props.label || hasLabelSlot ? null : true\"\n  >\n    <span v-if=\"props.label || hasLabelSlot\" class=\"visually-hidden\">\n      <slot name=\"label\">{{ props.label }}</slot>\n    </span>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BSpinnerProps} from '../../types/ComponentProps'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BSpinnerProps>(), {\n  label: undefined,\n  role: 'status',\n  small: false,\n  tag: 'span',\n  type: 'border',\n  variant: null,\n})\n\nconst props = useDefaults(_props, 'BSpinner')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  label?: (props: Record<string, never>) => any\n}>()\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  `spinner-${props.type}`,\n  colorClasses.value,\n  {\n    [`spinner-${props.type}-sm`]: props.small,\n  },\n])\n\nconst hasLabelSlot = computed(() => !isEmptySlot(slots.label))\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBA,MAAMA,MAAA,GAASC,OAAA;IAST,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,UAAU;IAE5C,MAAMI,KAAA,GAAQC,QAAA;IAKd,MAAMC,YAAA,GAAeC,sBAAA,CACnBC,QAAA,CAAS,OAAO;MACdC,WAAA,EAAaP,KAAA,CAAMQ;IAAA,EACnB,CACJ;IACM,MAAAC,eAAA,GAAkBH,QAAA,CAAS,MAAM,CACrC,WAAWN,KAAA,CAAMU,IAAI,IACrBN,YAAA,CAAaO,KAAA,EACb;MACE,CAAC,WAAWX,KAAA,CAAMU,IAAI,KAAK,GAAGV,KAAA,CAAMY;IAAA,EAEvC;IAED,MAAMC,YAAA,GAAeP,QAAA,CAAS,MAAM,CAACQ,WAAA,CAAYZ,KAAA,CAAMa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}