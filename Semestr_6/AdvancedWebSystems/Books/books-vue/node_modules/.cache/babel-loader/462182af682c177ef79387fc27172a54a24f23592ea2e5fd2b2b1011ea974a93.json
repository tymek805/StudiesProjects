{"ast":null,"code":"import { defineComponent, mergeModels, useSlots, useModel, computed, useTemplateRef, createBlock, openBlock, mergeProps, createSlots, withCtx, renderSlot, normalizeProps, guardReactiveProps } from \"vue\";\nimport { B as BPopover } from \"./floatingUi-DvHiyg2I.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BTooltip\",\n  props: /* @__PURE__ */mergeModels({\n    interactive: {\n      type: Boolean,\n      default: void 0\n    },\n    boundary: {},\n    boundaryPadding: {},\n    click: {\n      type: Boolean,\n      default: void 0\n    },\n    closeOnHide: {\n      type: Boolean\n    },\n    content: {\n      default: void 0\n    },\n    customClass: {\n      default: void 0\n    },\n    delay: {\n      default: void 0\n    },\n    floatingMiddleware: {\n      default: void 0\n    },\n    hideMargin: {},\n    id: {\n      default: void 0\n    },\n    inline: {\n      type: Boolean,\n      default: void 0\n    },\n    manual: {\n      type: Boolean,\n      default: void 0\n    },\n    noAutoClose: {\n      type: Boolean,\n      default: void 0\n    },\n    noFlip: {\n      type: Boolean,\n      default: void 0\n    },\n    noHide: {\n      type: Boolean,\n      default: void 0\n    },\n    noShift: {\n      type: Boolean,\n      default: void 0\n    },\n    noSize: {\n      type: Boolean\n    },\n    noninteractive: {\n      type: Boolean,\n      default: void 0\n    },\n    offset: {\n      default: void 0\n    },\n    placement: {\n      default: void 0\n    },\n    realtime: {\n      type: Boolean,\n      default: void 0\n    },\n    reference: {\n      default: void 0\n    },\n    strategy: {\n      default: void 0\n    },\n    target: {\n      default: void 0\n    },\n    title: {\n      default: void 0\n    },\n    variant: {\n      default: void 0\n    },\n    teleportDisabled: {\n      type: Boolean,\n      default: void 0\n    },\n    teleportTo: {\n      default: void 0\n    },\n    initialAnimation: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      type: Boolean\n    },\n    noFade: {\n      type: Boolean,\n      default: void 0\n    },\n    lazy: {\n      type: Boolean,\n      default: void 0\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: void 0\n    },\n    show: {\n      type: Boolean,\n      default: void 0\n    },\n    transProps: {},\n    visible: {\n      type: Boolean,\n      default: void 0\n    }\n  }, {\n    \"modelValue\": {\n      type: Boolean,\n      ...{\n        default: void 0\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: [\"update:modelValue\"],\n  setup(__props, {\n    expose: __expose\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BTooltip\");\n    const slots = useSlots();\n    const modelValue = useModel(__props, \"modelValue\");\n    const computedProps = computed(() => {\n      const {\n        interactive,\n        noninteractive,\n        ...rest\n      } = props;\n      return {\n        noninteractive: noninteractive !== void 0 ? noninteractive : !interactive,\n        ...rest\n      };\n    });\n    const popover = useTemplateRef(\"_popover\");\n    __expose({\n      hide: () => {\n        var _a;\n        (_a = popover.value) == null ? void 0 : _a.hide();\n      },\n      show: () => {\n        var _a;\n        (_a = popover.value) == null ? void 0 : _a.show();\n      },\n      toggle: () => {\n        var _a;\n        (_a = popover.value) == null ? void 0 : _a.toggle();\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(BPopover, mergeProps({\n        ref: \"_popover\"\n      }, computedProps.value, {\n        modelValue: modelValue.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => modelValue.value = $event),\n        tooltip: \"\"\n      }), createSlots({\n        _: 2\n      }, [slots.default ? {\n        name: \"default\",\n        fn: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        key: \"0\"\n      } : void 0, slots.target ? {\n        name: \"target\",\n        fn: withCtx(scope => [renderSlot(_ctx.$slots, \"target\", normalizeProps(guardReactiveProps(scope)))]),\n        key: \"1\"\n      } : void 0, slots.title ? {\n        name: \"title\",\n        fn: withCtx(() => [renderSlot(_ctx.$slots, \"title\")]),\n        key: \"2\"\n      } : void 0]), 1040, [\"modelValue\"]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_props","__props","props","useDefaults","slots","useSlots","modelValue","useModel","computedProps","computed","interactive","noninteractive","rest","popover","useTemplateRef","__expose","hide","_a","value","show","toggle"],"sources":["../src/components/BTooltip/BTooltip.vue"],"sourcesContent":["<template>\n  <BPopover ref=\"_popover\" v-bind=\"computedProps\" v-model=\"modelValue\" tooltip>\n    <template v-if=\"slots.default\" #default>\n      <slot />\n    </template>\n    <template v-if=\"slots.target\" #target=\"scope\">\n      <slot name=\"target\" v-bind=\"scope\" />\n    </template>\n    <template v-if=\"slots.title\" #title>\n      <slot name=\"title\" />\n    </template>\n  </BPopover>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport BPopover from '../BPopover/BPopover.vue'\nimport type {BPopoverProps, BTooltipProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<Omit<BTooltipProps, 'modelValue'>>(), {\n  click: undefined,\n  teleportDisabled: undefined,\n  teleportTo: undefined,\n  content: undefined,\n  customClass: undefined,\n  delay: undefined,\n  floatingMiddleware: undefined,\n  hide: 0,\n  id: undefined,\n  initialAnimation: false,\n  inline: undefined,\n  interactive: undefined,\n  lazy: undefined,\n  manual: undefined,\n  noAutoClose: undefined,\n  noFade: undefined,\n  noFlip: undefined,\n  noHide: undefined,\n  noShift: undefined,\n  noninteractive: undefined,\n  offset: undefined,\n  placement: undefined,\n  realtime: undefined,\n  reference: undefined,\n  show: undefined,\n  strategy: undefined,\n  target: undefined,\n  unmountLazy: undefined,\n  title: undefined,\n  variant: undefined,\n  visible: undefined,\n})\n\nconst props = useDefaults(_props, 'BTooltip')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  target?: (props: {\n    show: () => void\n    hide: (trigger?: string) => void\n    toggle: () => void\n    visible: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  title?: (props: Record<string, never>) => any\n}>()\n\nconst modelValue = defineModel<BTooltipProps['modelValue']>({default: undefined})\n\nconst computedProps = computed<BPopoverProps>(() => {\n  const {interactive, noninteractive, ...rest} = props\n  return {noninteractive: noninteractive !== undefined ? noninteractive : !interactive, ...rest}\n})\n\nconst popover = useTemplateRef<InstanceType<typeof BPopover>>('_popover')\n\ndefineExpose({\n  hide: () => {\n    popover.value?.hide()\n  },\n  show: () => {\n    popover.value?.show()\n  },\n  toggle: () => {\n    popover.value?.toggle()\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBA,MAAMA,MAAA,GAASC,OAAA;IAkCT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,UAAU;IAE5C,MAAMI,KAAA,GAAQC,QAAA;IAcR,MAAAC,UAAA,GAAaC,QAAA,CAA6DN,OAAA;IAE1E,MAAAO,aAAA,GAAgBC,QAAA,CAAwB,MAAM;MAClD,MAAM;QAACC,WAAA;QAAaC,cAAA;QAAgB,GAAGC;MAAQ,IAAAV,KAAA;MACxC;QAACS,cAAA,EAAgBA,cAAA,KAAmB,SAAYA,cAAA,GAAiB,CAACD,WAAA;QAAa,GAAGE;MAAI;IAAA,CAC9F;IAEK,MAAAC,OAAA,GAAUC,cAAA,CAA8C,UAAU;IAE3DC,QAAA;MACXC,IAAA,EAAMA,CAAA,KAAM;;QACV,CAAAC,EAAA,GAAAJ,OAAA,CAAQK,KAAA,KAAR,gBAAAD,EAAA,CAAeD,IAAA;MACjB;MACAG,IAAA,EAAMA,CAAA,KAAM;;QACV,CAAAF,EAAA,GAAAJ,OAAA,CAAQK,KAAA,KAAR,gBAAAD,EAAA,CAAeE,IAAA;MACjB;MACAC,MAAA,EAAQA,CAAA,KAAM;;QACZ,CAAAH,EAAA,GAAAJ,OAAA,CAAQK,KAAA,KAAR,gBAAAD,EAAA,CAAeG,MAAA;MAAO;IACxB,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}