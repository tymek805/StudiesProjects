{"ast":null,"code":"import { defineComponent, computed, createBlock, openBlock, mergeProps, resolveDynamicComponent, normalizeClass, unref, withCtx, renderSlot, createTextVNode, toDisplayString, useSlots, createCommentVNode, createVNode, normalizeProps } from \"vue\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { _ as _sfc_main$8 } from \"./BImg.vue_vue_type_script_setup_true_lang-MMXD4NiQ.mjs\";\nimport { o as omit } from \"./object-BWoyyA2y.mjs\";\nimport { f as createReusableTemplate } from \"./index-cC189kCW.mjs\";\nconst _sfc_main$7 = /* @__PURE__ */defineComponent({\n  __name: \"BCardImg\",\n  props: {\n    placement: {\n      default: \"top\"\n    },\n    blank: {\n      type: Boolean,\n      default: void 0\n    },\n    blankColor: {\n      default: void 0\n    },\n    block: {\n      type: Boolean,\n      default: void 0\n    },\n    fluid: {\n      type: Boolean,\n      default: void 0\n    },\n    fluidGrow: {\n      type: Boolean,\n      default: void 0\n    },\n    height: {\n      default: void 0\n    },\n    tag: {},\n    lazy: {\n      type: Boolean,\n      default: void 0\n    },\n    sizes: {\n      default: void 0\n    },\n    src: {\n      default: void 0\n    },\n    srcset: {\n      default: void 0\n    },\n    thumbnail: {\n      type: Boolean,\n      default: void 0\n    },\n    width: {\n      default: void 0\n    },\n    rounded: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedTop: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedBottom: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedStart: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedEnd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardImg\");\n    const baseAlignmentClasses = computed(() => ({\n      \"card-img-top\": props.placement === \"top\",\n      // TODO implement this class\n      \"card-img-end\": props.placement === \"end\",\n      \"card-img-bottom\": props.placement === \"bottom\",\n      // TODO implement this class\n      \"card-img-start\": props.placement === \"start\",\n      \"card-img\": props.placement === \"overlay\"\n    }));\n    const computedImgProps = computed(() => omit(props, [\"placement\"]));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$8, mergeProps(computedImgProps.value, {\n        class: baseAlignmentClasses.value\n      }), null, 16, [\"class\"]);\n    };\n  }\n});\nconst _sfc_main$6 = /* @__PURE__ */defineComponent({\n  __name: \"BCardHeadFoot\",\n  props: {\n    borderVariant: {\n      default: null\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    variant: {\n      default: null\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const computedClasses = useColorVariantClasses(props);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n        class: normalizeClass(unref(computedClasses))\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.text), 1)])]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n});\nconst _sfc_main$5 = /* @__PURE__ */defineComponent({\n  __name: \"BCardHeader\",\n  props: {\n    borderVariant: {\n      default: void 0\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    variant: {\n      default: void 0\n    },\n    bgVariant: {\n      default: void 0\n    },\n    textVariant: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardHeader\");\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$6, mergeProps({\n        class: \"card-header\"\n      }, unref(props)), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16);\n    };\n  }\n});\nconst _sfc_main$4 = /* @__PURE__ */defineComponent({\n  __name: \"BCardTitle\",\n  props: {\n    tag: {\n      default: \"h4\"\n    },\n    text: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardTitle\");\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: \"card-title\"\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      });\n    };\n  }\n});\nconst _sfc_main$3 = /* @__PURE__ */defineComponent({\n  __name: \"BCardSubtitle\",\n  props: {\n    text: {\n      default: void 0\n    },\n    tag: {\n      default: \"h6\"\n    },\n    textVariant: {\n      default: \"body-secondary\"\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardSubtitle\");\n    const computedClasses = useColorVariantClasses(props);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass([\"card-subtitle mb-2\", unref(computedClasses)])\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n});\nconst _sfc_main$2 = /* @__PURE__ */defineComponent({\n  __name: \"BCardBody\",\n  props: {\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    subtitle: {\n      default: void 0\n    },\n    subtitleTag: {\n      default: \"h4\"\n    },\n    subtitleTextVariant: {\n      default: void 0\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    title: {\n      default: void 0\n    },\n    titleTag: {\n      default: \"h4\"\n    },\n    variant: {\n      default: null\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardBody\");\n    const slots = useSlots();\n    const hasTitleSlot = computed(() => !isEmptySlot(slots.title));\n    const hasSubtitleSlot = computed(() => !isEmptySlot(slots.subtitle));\n    const colorClasses = useColorVariantClasses(props);\n    const computedClasses = computed(() => [colorClasses.value, props.overlay ? \"card-img-overlay\" : \"card-body\"]);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass(computedClasses.value)\n      }, {\n        default: withCtx(() => [!!unref(props).title || hasTitleSlot.value ? (openBlock(), createBlock(_sfc_main$4, {\n          key: 0,\n          tag: unref(props).titleTag\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"title\", {}, () => [createTextVNode(toDisplayString(unref(props).title), 1)])]),\n          _: 3\n        }, 8, [\"tag\"])) : createCommentVNode(\"\", true), !!unref(props).subtitle || hasSubtitleSlot.value ? (openBlock(), createBlock(_sfc_main$3, {\n          key: 1,\n          tag: unref(props).subtitleTag,\n          \"text-variant\": unref(props).subtitleTextVariant\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"subtitle\", {}, () => [createTextVNode(toDisplayString(unref(props).subtitle), 1)])]),\n          _: 3\n        }, 8, [\"tag\", \"text-variant\"])) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n});\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BCardFooter\",\n  props: {\n    borderVariant: {\n      default: void 0\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    variant: {\n      default: void 0\n    },\n    bgVariant: {\n      default: void 0\n    },\n    textVariant: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCardFooter\");\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(_sfc_main$6, mergeProps({\n        class: \"card-footer\"\n      }, unref(props)), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 16);\n    };\n  }\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BCard\",\n  props: {\n    align: {\n      default: void 0\n    },\n    bodyBgVariant: {\n      default: void 0\n    },\n    bodyClass: {\n      default: void 0\n    },\n    bodyTag: {\n      default: \"div\"\n    },\n    bodyText: {\n      default: \"\"\n    },\n    bodyTextVariant: {\n      default: void 0\n    },\n    borderVariant: {\n      default: null\n    },\n    footer: {\n      default: void 0\n    },\n    footerBgVariant: {\n      default: void 0\n    },\n    footerBorderVariant: {\n      default: void 0\n    },\n    footerClass: {\n      default: void 0\n    },\n    footerTag: {\n      default: \"div\"\n    },\n    footerTextVariant: {\n      default: void 0\n    },\n    footerVariant: {\n      default: null\n    },\n    header: {\n      default: void 0\n    },\n    headerBgVariant: {\n      default: void 0\n    },\n    headerBorderVariant: {\n      default: void 0\n    },\n    headerClass: {\n      default: void 0\n    },\n    headerTag: {\n      default: \"div\"\n    },\n    headerTextVariant: {\n      default: void 0\n    },\n    headerVariant: {\n      default: null\n    },\n    imgAlt: {\n      default: void 0\n    },\n    imgPlacement: {\n      default: \"top\"\n    },\n    imgHeight: {\n      default: void 0\n    },\n    imgSrc: {\n      default: void 0\n    },\n    imgWidth: {\n      default: void 0\n    },\n    noBody: {\n      type: Boolean,\n      default: false\n    },\n    subtitle: {\n      default: void 0\n    },\n    subtitleTag: {\n      default: \"h6\"\n    },\n    subtitleTextVariant: {\n      default: \"body-secondary\"\n    },\n    tag: {\n      default: \"div\"\n    },\n    title: {\n      default: void 0\n    },\n    titleTag: {\n      default: \"h4\"\n    },\n    variant: {\n      default: null\n    },\n    bgVariant: {\n      default: null\n    },\n    textVariant: {\n      default: null\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BCard\");\n    const slots = useSlots();\n    const hasHeaderSlot = computed(() => !isEmptySlot(slots.header));\n    const hasFooterSlot = computed(() => !isEmptySlot(slots.footer));\n    const colorClasses = useColorVariantClasses(props);\n    const computedClasses = computed(() => [colorClasses.value, {\n      [`text-${props.align}`]: props.align !== void 0,\n      \"flex-row\": props.imgPlacement === \"start\",\n      \"flex-row-reverse\": props.imgPlacement === \"end\"\n    }]);\n    const imgAttr = computed(() => ({\n      src: props.imgSrc,\n      alt: props.imgAlt,\n      height: props.imgHeight,\n      width: props.imgWidth,\n      placement: props.imgPlacement\n    }));\n    const ReusableImg = createReusableTemplate();\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass([\"card\", computedClasses.value])\n      }, {\n        default: withCtx(() => [createVNode(unref(ReusableImg).define, null, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"img\", {}, () => [unref(props).imgSrc ? (openBlock(), createBlock(_sfc_main$7, normalizeProps(mergeProps({\n            key: 0\n          }, imgAttr.value)), null, 16)) : createCommentVNode(\"\", true)])]),\n          _: 3\n        }), unref(props).imgPlacement !== \"bottom\" ? (openBlock(), createBlock(unref(ReusableImg).reuse, {\n          key: 0\n        })) : createCommentVNode(\"\", true), unref(props).header || hasHeaderSlot.value ? (openBlock(), createBlock(_sfc_main$5, {\n          key: 1,\n          \"bg-variant\": unref(props).headerBgVariant,\n          variant: unref(props).headerVariant,\n          \"border-variant\": unref(props).headerBorderVariant,\n          tag: unref(props).headerTag,\n          \"text-variant\": unref(props).headerTextVariant,\n          class: normalizeClass(unref(props).headerClass)\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"header\", {}, () => [createTextVNode(toDisplayString(unref(props).header), 1)])]),\n          _: 3\n        }, 8, [\"bg-variant\", \"variant\", \"border-variant\", \"tag\", \"text-variant\", \"class\"])) : createCommentVNode(\"\", true), !unref(props).noBody ? (openBlock(), createBlock(_sfc_main$2, {\n          key: 2,\n          overlay: unref(props).imgPlacement === \"overlay\",\n          \"bg-variant\": unref(props).bodyBgVariant,\n          tag: unref(props).bodyTag,\n          \"text-variant\": unref(props).bodyTextVariant,\n          subtitle: unref(props).subtitle,\n          \"subtitle-tag\": unref(props).subtitleTag,\n          \"subtitle-text-variant\": unref(props).subtitleTextVariant,\n          title: unref(props).title,\n          \"title-tag\": unref(props).titleTag,\n          class: normalizeClass(unref(props).bodyClass)\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).bodyText), 1)])]),\n          _: 3\n        }, 8, [\"overlay\", \"bg-variant\", \"tag\", \"text-variant\", \"subtitle\", \"subtitle-tag\", \"subtitle-text-variant\", \"title\", \"title-tag\", \"class\"])) : renderSlot(_ctx.$slots, \"default\", {\n          key: 3\n        }, () => [createTextVNode(toDisplayString(unref(props).bodyText), 1)]), unref(props).footer || hasFooterSlot.value ? (openBlock(), createBlock(_sfc_main$1, {\n          key: 4,\n          \"bg-variant\": unref(props).footerBgVariant,\n          \"border-variant\": unref(props).footerBorderVariant,\n          variant: unref(props).footerVariant,\n          tag: unref(props).footerTag,\n          \"text-variant\": unref(props).footerTextVariant,\n          class: normalizeClass(unref(props).footerClass)\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"footer\", {}, () => [createTextVNode(toDisplayString(unref(props).footer), 1)])]),\n          _: 3\n        }, 8, [\"bg-variant\", \"border-variant\", \"variant\", \"tag\", \"text-variant\", \"class\"])) : createCommentVNode(\"\", true), unref(props).imgPlacement === \"bottom\" ? (openBlock(), createBlock(unref(ReusableImg).reuse, {\n          key: 5\n        })) : createCommentVNode(\"\", true)]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n});\nexport { _sfc_main as _, _sfc_main$2 as a, _sfc_main$1 as b, _sfc_main$5 as c, _sfc_main$7 as d, _sfc_main$3 as e, _sfc_main$4 as f };","map":{"version":3,"names":["_props","__props","props","useDefaults","baseAlignmentClasses","computed","placement","computedImgProps","omit","computedClasses","useColorVariantClasses","slots","useSlots","hasTitleSlot","isEmptySlot","title","hasSubtitleSlot","subtitle","colorClasses","value","overlay","hasHeaderSlot","header","hasFooterSlot","footer","align","imgPlacement","imgAttr","src","imgSrc","alt","imgAlt","height","imgHeight","width","imgWidth","ReusableImg","createReusableTemplate"],"sources":["../src/components/BCard/BCardImg.vue","../src/components/BCardHeadFoot.vue","../src/components/BCard/BCardHeader.vue","../src/components/BCard/BCardTitle.vue","../src/components/BCard/BCardSubtitle.vue","../src/components/BCard/BCardBody.vue","../src/components/BCard/BCardFooter.vue","../src/components/BCard/BCard.vue"],"sourcesContent":["<template>\n  <BImg v-bind=\"computedImgProps\" :class=\"baseAlignmentClasses\" />\n</template>\n\n<script setup lang=\"ts\">\nimport BImg from '../BImg/BImg.vue'\nimport type {BCardImgProps} from '../../types/ComponentProps'\nimport {omit} from '../../utils/object'\nimport {computed} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BCardImgProps>(), {\n  placement: 'top',\n  // BImg props\n  blank: undefined,\n  blankColor: undefined,\n  block: undefined,\n  fluid: undefined,\n  fluidGrow: undefined,\n  height: undefined,\n  lazy: undefined,\n  rounded: undefined,\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  sizes: undefined,\n  src: undefined,\n  srcset: undefined,\n  thumbnail: undefined,\n  width: undefined,\n  // End BImg props\n})\nconst props = useDefaults(_props, 'BCardImg')\n\nconst baseAlignmentClasses = computed(() => ({\n  'card-img-top': props.placement === 'top',\n  // TODO implement this class\n  'card-img-end': props.placement === 'end',\n  'card-img-bottom': props.placement === 'bottom',\n  // TODO implement this class\n  'card-img-start': props.placement === 'start',\n  'card-img': props.placement === 'overlay',\n}))\n\nconst computedImgProps = computed(() => omit(props, ['placement']))\n</script>\n","<template>\n  <component :is=\"tag\" :class=\"computedClasses\">\n    <slot>\n      {{ text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BCardHeadFootProps} from '../types/ComponentProps'\nimport {useColorVariantClasses} from '../composables/useColorVariantClasses'\n\nconst props = withDefaults(defineProps<BCardHeadFootProps>(), {\n  borderVariant: null,\n  tag: 'div',\n  text: undefined,\n  // ColorExtendables props\n  bgVariant: null,\n  textVariant: null,\n  variant: null,\n  // End ColorExtendables props\n})\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = useColorVariantClasses(props)\n</script>\n","<template>\n  <BCardHeadFoot class=\"card-header\" v-bind=\"props\">\n    <slot />\n  </BCardHeadFoot>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BCardHeadFootProps} from '../../types/ComponentProps'\nimport BCardHeadFoot from '../BCardHeadFoot.vue'\n\nconst _props = withDefaults(defineProps<BCardHeadFootProps>(), {\n  borderVariant: undefined,\n  tag: 'div',\n  text: undefined,\n  // ColorExtendables props\n  bgVariant: undefined,\n  textVariant: undefined,\n  variant: undefined,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BCardHeader')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"card-title\">\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BCardTitleProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BCardTitleProps>(), {\n  tag: 'h4',\n  text: undefined,\n})\nconst props = useDefaults(_props, 'BCardTitle')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"card-subtitle mb-2\" :class=\"computedClasses\">\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BCardSubtitleProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BCardSubtitleProps>(), {\n  tag: 'h6',\n  text: undefined,\n  textVariant: 'body-secondary',\n})\nconst props = useDefaults(_props, 'BCardSubtitle')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = useColorVariantClasses(props)\n</script>\n","<template>\n  <component :is=\"props.tag\" :class=\"computedClasses\">\n    <BCardTitle v-if=\"!!props.title || hasTitleSlot\" :tag=\"props.titleTag\">\n      <slot name=\"title\">\n        {{ props.title }}\n      </slot>\n    </BCardTitle>\n\n    <BCardSubtitle\n      v-if=\"!!props.subtitle || hasSubtitleSlot\"\n      :tag=\"props.subtitleTag\"\n      :text-variant=\"props.subtitleTextVariant\"\n    >\n      <slot name=\"subtitle\">\n        {{ props.subtitle }}\n      </slot>\n    </BCardSubtitle>\n\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport BCardTitle from './BCardTitle.vue'\nimport {isEmptySlot} from '../../utils/dom'\nimport BCardSubtitle from './BCardSubtitle.vue'\nimport type {BCardBodyProps} from '../../types/ComponentProps'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BCardBodyProps>(), {\n  overlay: false,\n  subtitle: undefined,\n  subtitleTag: 'h4',\n  subtitleTextVariant: undefined,\n  tag: 'div',\n  text: undefined,\n  title: undefined,\n  titleTag: 'h4',\n  // ColorExtendables props\n  bgVariant: null,\n  textVariant: null,\n  variant: null,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BCardBody')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  subtitle?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  title?: (props: Record<string, never>) => any\n}>()\n\nconst hasTitleSlot = computed(() => !isEmptySlot(slots.title))\nconst hasSubtitleSlot = computed(() => !isEmptySlot(slots.subtitle))\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  props.overlay ? 'card-img-overlay' : 'card-body',\n])\n</script>\n","<template>\n  <BCardHeadFoot class=\"card-footer\" v-bind=\"props\">\n    <slot>\n      {{ props.text }}\n    </slot>\n  </BCardHeadFoot>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BCardHeadFootProps} from '../../types/ComponentProps'\nimport BCardHeadFoot from '../BCardHeadFoot.vue'\n\nconst _props = withDefaults(defineProps<BCardHeadFootProps>(), {\n  borderVariant: undefined,\n  tag: 'div',\n  text: undefined,\n  // ColorExtendables props\n  bgVariant: undefined,\n  textVariant: undefined,\n  variant: undefined,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BCardFooter')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"card\" :class=\"computedClasses\">\n    <ReusableImg.define>\n      <slot name=\"img\">\n        <BCardImg v-if=\"props.imgSrc\" v-bind=\"imgAttr\" />\n      </slot>\n    </ReusableImg.define>\n\n    <ReusableImg.reuse v-if=\"props.imgPlacement !== 'bottom'\" />\n    <BCardHeader\n      v-if=\"props.header || hasHeaderSlot\"\n      :bg-variant=\"props.headerBgVariant\"\n      :variant=\"props.headerVariant\"\n      :border-variant=\"props.headerBorderVariant\"\n      :tag=\"props.headerTag\"\n      :text-variant=\"props.headerTextVariant\"\n      :class=\"props.headerClass\"\n    >\n      <slot name=\"header\">\n        {{ props.header }}\n      </slot>\n    </BCardHeader>\n    <BCardBody\n      v-if=\"!props.noBody\"\n      :overlay=\"props.imgPlacement === 'overlay'\"\n      :bg-variant=\"props.bodyBgVariant\"\n      :tag=\"props.bodyTag\"\n      :text-variant=\"props.bodyTextVariant\"\n      :subtitle=\"props.subtitle\"\n      :subtitle-tag=\"props.subtitleTag\"\n      :subtitle-text-variant=\"props.subtitleTextVariant\"\n      :title=\"props.title\"\n      :title-tag=\"props.titleTag\"\n      :class=\"props.bodyClass\"\n    >\n      <slot>\n        {{ props.bodyText }}\n      </slot>\n    </BCardBody>\n    <slot v-else>\n      {{ props.bodyText }}\n    </slot>\n    <BCardFooter\n      v-if=\"props.footer || hasFooterSlot\"\n      :bg-variant=\"props.footerBgVariant\"\n      :border-variant=\"props.footerBorderVariant\"\n      :variant=\"props.footerVariant\"\n      :tag=\"props.footerTag\"\n      :text-variant=\"props.footerTextVariant\"\n      :class=\"props.footerClass\"\n    >\n      <slot name=\"footer\">\n        {{ props.footer }}\n      </slot>\n    </BCardFooter>\n    <ReusableImg.reuse v-if=\"props.imgPlacement === 'bottom'\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BCardProps} from '../../types/ComponentProps'\nimport {isEmptySlot} from '../../utils/dom'\nimport {computed} from 'vue'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport BCardImg from './BCardImg.vue'\nimport BCardHeader from './BCardHeader.vue'\nimport BCardBody from './BCardBody.vue'\nimport BCardFooter from './BCardFooter.vue'\nimport {createReusableTemplate} from '@vueuse/core'\n\nconst _props = withDefaults(defineProps<BCardProps>(), {\n  align: undefined,\n  bodyBgVariant: undefined,\n  bodyClass: undefined,\n  bodyTag: 'div',\n  bodyText: '',\n  bodyTextVariant: undefined,\n  borderVariant: null,\n  footer: undefined,\n  footerBgVariant: undefined,\n  footerBorderVariant: undefined,\n  footerClass: undefined,\n  footerTag: 'div',\n  footerTextVariant: undefined,\n  footerVariant: null,\n  header: undefined,\n  headerBgVariant: undefined,\n  headerBorderVariant: undefined,\n  headerClass: undefined,\n  headerTag: 'div',\n  headerTextVariant: undefined,\n  headerVariant: null,\n  imgAlt: undefined,\n  imgPlacement: 'top',\n  imgHeight: undefined,\n  imgSrc: undefined,\n  imgWidth: undefined,\n  noBody: false,\n  subtitle: undefined,\n  subtitleTag: 'h6',\n  subtitleTextVariant: 'body-secondary',\n  tag: 'div',\n  title: undefined,\n  titleTag: 'h4',\n  // ColorExtendables props\n  bgVariant: null,\n  textVariant: null,\n  variant: null,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BCard')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  footer?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  header?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  img?: (props: Record<string, never>) => any\n}>()\n\nconst hasHeaderSlot = computed(() => !isEmptySlot(slots.header))\nconst hasFooterSlot = computed(() => !isEmptySlot(slots.footer))\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    [`text-${props.align}`]: props.align !== undefined,\n    'flex-row': props.imgPlacement === 'start',\n    'flex-row-reverse': props.imgPlacement === 'end',\n  },\n])\n\nconst imgAttr = computed(() => ({\n  src: props.imgSrc,\n  alt: props.imgAlt,\n  height: props.imgHeight,\n  width: props.imgWidth,\n  placement: props.imgPlacement,\n}))\n\nconst ReusableImg = createReusableTemplate()\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}