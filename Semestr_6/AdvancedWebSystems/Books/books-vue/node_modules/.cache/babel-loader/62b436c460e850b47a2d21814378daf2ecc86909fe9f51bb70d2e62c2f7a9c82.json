{"ast":null,"code":"import { defineComponent, mergeModels, useModel, computed, provide, toRef, readonly, createElementBlock, openBlock, normalizeClass, unref, renderSlot, useAttrs, inject, onMounted, nextTick, watch, mergeProps, createVNode, withCtx, createElementVNode, createBlock, resolveDynamicComponent, createTextVNode, toDisplayString } from \"vue\";\nimport { e as accordionInjectionKey } from \"./keys-D3gOZjD-.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { _ as _sfc_main$2 } from \"./BCollapse.vue_vue_type_script_setup_true_lang-GJS1dKK5.mjs\";\nconst _hoisted_1$1 = [\"id\"];\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BAccordion\",\n  props: /* @__PURE__ */mergeModels({\n    flush: {\n      type: Boolean,\n      default: false\n    },\n    free: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    initialAnimation: {\n      type: Boolean,\n      default: false\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: false\n    }\n  }, {\n    \"modelValue\": {\n      default: void 0\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: [\"update:modelValue\"],\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BAccordion\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const computedId = useId(() => props.id, \"accordion\");\n    const computedClasses = computed(() => ({\n      \"accordion-flush\": props.flush\n    }));\n    provide(accordionInjectionKey, {\n      openItem: readonly(modelValue),\n      free: toRef(() => props.free),\n      initialAnimation: toRef(() => props.initialAnimation),\n      lazy: toRef(() => props.lazy),\n      unmountLazy: toRef(() => props.unmountLazy),\n      setOpenItem: id => {\n        modelValue.value = id;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        id: unref(computedId),\n        class: normalizeClass([\"accordion\", computedClasses.value])\n      }, [renderSlot(_ctx.$slots, \"default\")], 10, _hoisted_1$1);\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-expanded\", \"aria-controls\", \"onClick\"];\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BAccordionItem\",\n  props: /* @__PURE__ */mergeModels({\n    bodyAttrs: {\n      default: void 0\n    },\n    bodyClass: {\n      default: void 0\n    },\n    buttonAttrs: {\n      default: void 0\n    },\n    buttonClass: {\n      default: void 0\n    },\n    collapseClass: {\n      default: void 0\n    },\n    headerAttrs: {\n      default: void 0\n    },\n    headerClass: {\n      default: void 0\n    },\n    headerTag: {\n      default: \"h2\"\n    },\n    horizontal: {\n      type: Boolean,\n      default: void 0\n    },\n    id: {\n      default: void 0\n    },\n    isNav: {\n      type: Boolean,\n      default: void 0\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: void 0\n    },\n    title: {\n      default: void 0\n    },\n    show: {\n      type: Boolean,\n      default: void 0\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    wrapperAttrs: {\n      default: void 0\n    }\n  }, {\n    \"modelValue\": {\n      type: Boolean,\n      ...{\n        default: false\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"hide\", \"hide-prevented\", \"hidden\", \"show\", \"show-prevented\", \"shown\", \"toggle\", \"toggle-prevented\"], [\"update:modelValue\"]),\n  setup(__props, {\n    emit: __emit\n  }) {\n    const attrs = useAttrs();\n    const processedAttrs = computed(() => {\n      const {\n        class: wrapperClass,\n        ...collapseAttrs\n      } = attrs;\n      return {\n        wrapperClass,\n        collapseAttrs\n      };\n    });\n    const _props = __props;\n    const props = useDefaults(_props, \"BAccordionItem\");\n    const emit = __emit;\n    const parentData = inject(accordionInjectionKey, null);\n    const computedId = useId(() => props.id, \"accordion_item\");\n    const modelValue = useModel(__props, \"modelValue\");\n    modelValue.value = (parentData == null ? void 0 : parentData.openItem.value) === computedId.value && !(parentData == null ? void 0 : parentData.initialAnimation.value);\n    if (modelValue.value && !(parentData == null ? void 0 : parentData.free.value)) {\n      parentData == null ? void 0 : parentData.setOpenItem(computedId.value);\n    }\n    onMounted(() => {\n      if (!modelValue.value && (parentData == null ? void 0 : parentData.openItem.value) === computedId.value) {\n        nextTick(() => {\n          modelValue.value = true;\n        });\n      }\n    });\n    watch(() => parentData == null ? void 0 : parentData.openItem.value, () => modelValue.value = (parentData == null ? void 0 : parentData.openItem.value) === computedId.value && !(parentData == null ? void 0 : parentData.free.value));\n    watch(modelValue, () => {\n      if (modelValue.value && !(parentData == null ? void 0 : parentData.free.value)) parentData == null ? void 0 : parentData.setOpenItem(computedId.value);\n    });\n    return (_ctx, _cache) => {\n      var _a, _b;\n      return openBlock(), createElementBlock(\"div\", mergeProps({\n        class: \"accordion-item\"\n      }, unref(props).wrapperAttrs, {\n        class: processedAttrs.value.wrapperClass\n      }), [createVNode(_sfc_main$2, mergeProps({\n        id: unref(computedId),\n        modelValue: modelValue.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => modelValue.value = $event),\n        class: [\"accordion-collapse\", unref(props).collapseClass],\n        \"aria-labelledby\": `${unref(computedId)}-heading`\n      }, processedAttrs.value.collapseAttrs, {\n        tag: unref(props).tag,\n        show: unref(props).show,\n        horizontal: unref(props).horizontal,\n        visible: unref(props).visible,\n        \"is-nav\": unref(props).isNav,\n        lazy: unref(props).lazy || ((_a = unref(parentData)) == null ? void 0 : _a.lazy.value),\n        \"unmount-lazy\": unref(props).unmountLazy || ((_b = unref(parentData)) == null ? void 0 : _b.unmountLazy.value),\n        onShow: _cache[1] || (_cache[1] = $event => emit(\"show\", $event)),\n        onShown: _cache[2] || (_cache[2] = $event => emit(\"shown\", $event)),\n        onHide: _cache[3] || (_cache[3] = $event => emit(\"hide\", $event)),\n        onHidden: _cache[4] || (_cache[4] = $event => emit(\"hidden\", $event)),\n        onHidePrevented: _cache[5] || (_cache[5] = $event => emit(\"hide-prevented\", $event)),\n        onShowPrevented: _cache[6] || (_cache[6] = $event => emit(\"show-prevented\", $event)),\n        onTogglePrevented: _cache[7] || (_cache[7] = $event => emit(\"toggle-prevented\", $event)),\n        onToggle: _cache[8] || (_cache[8] = $event => emit(\"toggle\", $event))\n      }), {\n        header: withCtx(({\n          visible: toggleVisible,\n          toggle: slotToggle\n        }) => [(openBlock(), createBlock(resolveDynamicComponent(unref(props).headerTag), mergeProps({\n          id: `${unref(computedId)}-heading`,\n          class: [\"accordion-header\", unref(props).headerClass]\n        }, unref(props).headerAttrs), {\n          default: withCtx(() => [createElementVNode(\"button\", mergeProps({\n            class: \"accordion-button\"\n          }, unref(props).buttonAttrs, {\n            class: [{\n              collapsed: !toggleVisible\n            }, unref(props).buttonClass],\n            type: \"button\",\n            \"aria-expanded\": toggleVisible ? \"true\" : \"false\",\n            \"aria-controls\": unref(computedId),\n            onClick: slotToggle\n          }), [renderSlot(_ctx.$slots, \"title\", {}, () => [createTextVNode(toDisplayString(unref(props).title), 1)])], 16, _hoisted_1)]),\n          _: 2\n        }, 1040, [\"id\", \"class\"]))]),\n        default: withCtx(() => [createElementVNode(\"div\", mergeProps({\n          class: \"accordion-body\"\n        }, unref(props).bodyAttrs, {\n          class: unref(props).bodyClass\n        }), [renderSlot(_ctx.$slots, \"default\")], 16)]),\n        _: 3\n      }, 16, [\"id\", \"modelValue\", \"class\", \"aria-labelledby\", \"tag\", \"show\", \"horizontal\", \"visible\", \"is-nav\", \"lazy\", \"unmount-lazy\"])], 16);\n    };\n  }\n});\nexport { _sfc_main$1 as _, _sfc_main as a };","map":{"version":3,"names":["_props","__props","props","useDefaults","modelValue","useModel","computedId","useId","id","computedClasses","computed","flush","provide","accordionInjectionKey","openItem","readonly","free","toRef","initialAnimation","lazy","unmountLazy","setOpenItem","value","attrs","useAttrs","processedAttrs","class","wrapperClass","collapseAttrs","emit","__emit","parentData","inject","onMounted","nextTick","watch"],"sources":["../src/components/BAccordion/BAccordion.vue","../src/components/BAccordion/BAccordionItem.vue"],"sourcesContent":["<template>\n  <div :id=\"computedId\" class=\"accordion\" :class=\"computedClasses\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, readonly, toRef} from 'vue'\nimport {accordionInjectionKey} from '../../utils/keys'\nimport {useId} from '../../composables/useId'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BAccordionProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<Omit<BAccordionProps, 'modelValue'>>(), {\n  flush: false,\n  free: false,\n  initialAnimation: false,\n  id: undefined,\n  lazy: false,\n  unmountLazy: false,\n})\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst props = useDefaults(_props, 'BAccordion')\n\nconst modelValue = defineModel<BAccordionProps['modelValue']>({\n  default: undefined,\n})\n\nconst computedId = useId(() => props.id, 'accordion')\n\nconst computedClasses = computed(() => ({\n  'accordion-flush': props.flush,\n}))\n\nprovide(accordionInjectionKey, {\n  openItem: readonly(modelValue),\n  free: toRef(() => props.free),\n  initialAnimation: toRef(() => props.initialAnimation),\n  lazy: toRef(() => props.lazy),\n  unmountLazy: toRef(() => props.unmountLazy),\n  setOpenItem: (id: string) => {\n    modelValue.value = id\n  },\n})\n</script>\n","<template>\n  <div class=\"accordion-item\" v-bind=\"props.wrapperAttrs\" :class=\"processedAttrs.wrapperClass\">\n    <BCollapse\n      :id=\"computedId\"\n      v-model=\"modelValue\"\n      class=\"accordion-collapse\"\n      :class=\"props.collapseClass\"\n      :aria-labelledby=\"`${computedId}-heading`\"\n      v-bind=\"processedAttrs.collapseAttrs\"\n      :tag=\"props.tag\"\n      :show=\"props.show\"\n      :horizontal=\"props.horizontal\"\n      :visible=\"props.visible\"\n      :is-nav=\"props.isNav\"\n      :lazy=\"props.lazy || parentData?.lazy.value\"\n      :unmount-lazy=\"props.unmountLazy || parentData?.unmountLazy.value\"\n      @show=\"emit('show', $event)\"\n      @shown=\"emit('shown', $event)\"\n      @hide=\"emit('hide', $event)\"\n      @hidden=\"emit('hidden', $event)\"\n      @hide-prevented=\"emit('hide-prevented', $event)\"\n      @show-prevented=\"emit('show-prevented', $event)\"\n      @toggle-prevented=\"emit('toggle-prevented', $event)\"\n      @toggle=\"emit('toggle', $event)\"\n    >\n      <template #header=\"{visible: toggleVisible, toggle: slotToggle}\">\n        <component\n          :is=\"props.headerTag\"\n          :id=\"`${computedId}-heading`\"\n          class=\"accordion-header\"\n          :class=\"props.headerClass\"\n          v-bind=\"props.headerAttrs\"\n        >\n          <button\n            class=\"accordion-button\"\n            v-bind=\"props.buttonAttrs\"\n            :class=\"[{collapsed: !toggleVisible}, props.buttonClass]\"\n            type=\"button\"\n            :aria-expanded=\"toggleVisible ? 'true' : 'false'\"\n            :aria-controls=\"computedId\"\n            @click=\"slotToggle\"\n          >\n            <slot name=\"title\"> {{ props.title }} </slot>\n          </button>\n        </component>\n      </template>\n      <div class=\"accordion-body\" v-bind=\"props.bodyAttrs\" :class=\"props.bodyClass\">\n        <slot />\n      </div>\n    </BCollapse>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, inject, nextTick, onMounted, useAttrs, watch} from 'vue'\nimport BCollapse from '../BCollapse/BCollapse.vue'\nimport {accordionInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BAccordionItemProps} from '../../types/ComponentProps'\nimport type {showHideEmits} from '../../composables/useShowHide'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst attrs = useAttrs()\nconst processedAttrs = computed(() => {\n  const {class: wrapperClass, ...collapseAttrs} = attrs\n  return {wrapperClass, collapseAttrs}\n})\n\nconst _props = withDefaults(defineProps<Omit<BAccordionItemProps, 'modelValue'>>(), {\n  bodyAttrs: undefined,\n  bodyClass: undefined,\n  buttonAttrs: undefined,\n  buttonClass: undefined,\n  collapseClass: undefined,\n  headerAttrs: undefined,\n  headerClass: undefined,\n  headerTag: 'h2',\n  horizontal: undefined,\n  id: undefined,\n  isNav: undefined,\n  lazy: false,\n  unmountLazy: false,\n  tag: undefined,\n  title: undefined,\n  show: undefined,\n  visible: false,\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BAccordionItem')\n\nconst emit = defineEmits<showHideEmits>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  title?: (props: Record<string, never>) => any\n}>()\n\nconst parentData = inject(accordionInjectionKey, null)\n\nconst computedId = useId(() => props.id, 'accordion_item')\n\nconst modelValue = defineModel<Exclude<BAccordionItemProps['modelValue'], undefined>>({\n  default: false,\n})\n\nmodelValue.value =\n  parentData?.openItem.value === computedId.value && !parentData?.initialAnimation.value\n\nif (modelValue.value && !parentData?.free.value) {\n  parentData?.setOpenItem(computedId.value)\n}\n\nonMounted(() => {\n  if (!modelValue.value && parentData?.openItem.value === computedId.value) {\n    nextTick(() => {\n      modelValue.value = true\n    })\n  }\n})\n\nwatch(\n  () => parentData?.openItem.value,\n  () =>\n    (modelValue.value = parentData?.openItem.value === computedId.value && !parentData?.free.value)\n)\nwatch(modelValue, () => {\n  if (modelValue.value && !parentData?.free.value) parentData?.setOpenItem(computedId.value)\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}