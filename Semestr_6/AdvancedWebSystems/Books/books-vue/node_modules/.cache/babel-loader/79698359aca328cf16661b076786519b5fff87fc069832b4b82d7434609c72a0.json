{"ast":null,"code":"import { defineComponent, mergeModels, useTemplateRef, useModel, computed, createBlock, openBlock, resolveDynamicComponent, mergeProps, unref, withCtx, renderSlot, createElementBlock, createCommentVNode, Fragment, createTextVNode, toDisplayString, createVNode } from \"vue\";\nimport { _ as _sfc_main$2 } from \"./BSpinner.vue_vue_type_script_setup_true_lang-CP3yvZKE.mjs\";\nimport { u as useBLinkHelper, a as useLinkClasses, _ as _sfc_main$1 } from \"./BLink.vue_vue_type_script_setup_true_lang-CinzoAgQ.mjs\";\nimport { o as onKeyStroke } from \"./index-cC189kCW.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BButton\",\n  props: /* @__PURE__ */mergeModels({\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    loadingFill: {\n      type: Boolean,\n      default: false\n    },\n    loadingText: {\n      default: \"Loading...\"\n    },\n    pill: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      default: \"md\"\n    },\n    squared: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"button\"\n    },\n    type: {\n      default: \"button\"\n    },\n    variant: {\n      default: \"secondary\"\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    activeClass: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: void 0\n    },\n    exactActiveClass: {\n      default: void 0\n    },\n    href: {\n      default: void 0\n    },\n    icon: {\n      type: Boolean,\n      default: false\n    },\n    noRel: {\n      type: Boolean\n    },\n    opacity: {\n      default: void 0\n    },\n    opacityHover: {\n      default: void 0\n    },\n    prefetch: {\n      type: Boolean\n    },\n    prefetchOn: {},\n    noPrefetch: {\n      type: Boolean\n    },\n    prefetchedClass: {},\n    rel: {\n      default: void 0\n    },\n    replace: {\n      type: Boolean,\n      default: void 0\n    },\n    routerComponentName: {\n      default: void 0\n    },\n    routerTag: {\n      default: void 0\n    },\n    stretched: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      default: void 0\n    },\n    to: {\n      default: void 0\n    },\n    underlineOffset: {\n      default: void 0\n    },\n    underlineOffsetHover: {\n      default: void 0\n    },\n    underlineOpacity: {\n      default: void 0\n    },\n    underlineOpacityHover: {\n      default: void 0\n    },\n    underlineVariant: {\n      default: null\n    }\n  }, {\n    \"pressed\": {\n      type: Boolean,\n      ...{\n        default: void 0\n      }\n    },\n    \"pressedModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"click\"], [\"update:pressed\"]),\n  setup(__props, {\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BButton\");\n    const emit = __emit;\n    const element = useTemplateRef(\"_element\");\n    const pressedValue = useModel(__props, \"pressed\");\n    const {\n      computedLink,\n      computedLinkProps\n    } = useBLinkHelper(props, [\"active-class\", \"exact-active-class\", \"replace\", \"routerComponentName\", \"routerTag\"]);\n    const isToggle = computed(() => typeof pressedValue.value === \"boolean\");\n    const isButton = computed(() => props.tag === \"button\" && props.href === void 0 && props.to === void 0);\n    const isBLink = computed(() => props.to !== void 0);\n    const nonStandardTag = computed(() => props.href !== void 0 ? false : !isButton.value);\n    const linkProps = computed(() => isBLink.value ? computedLinkProps.value : []);\n    const computedAriaDisabled = computed(() => {\n      if (props.href === \"#\" && props.disabled) return true;\n      return nonStandardTag.value ? props.disabled : null;\n    });\n    const variantIsLinkType = computed(() => {\n      var _a;\n      return ((_a = props.variant) == null ? void 0 : _a.startsWith(\"link\")) || false;\n    });\n    const variantIsLinkTypeSubset = computed(() => {\n      var _a;\n      return ((_a = props.variant) == null ? void 0 : _a.startsWith(\"link-\")) || false;\n    });\n    const linkValueClasses = useLinkClasses(computed(() => {\n      var _a;\n      return {\n        ...(variantIsLinkType.value ? {\n          icon: props.icon,\n          opacity: props.opacity,\n          opacityHover: props.opacityHover,\n          underlineOffset: props.underlineOffset,\n          underlineOffsetHover: props.underlineOffsetHover,\n          underlineOpacity: props.underlineOpacity,\n          underlineOpacityHover: props.underlineOpacityHover,\n          underlineVariant: props.underlineVariant,\n          variant: variantIsLinkTypeSubset.value === true ? (_a = props.variant) == null ? void 0 : _a.slice(5) : null\n        } : void 0)\n      };\n    }));\n    const computedClasses = computed(() => [variantIsLinkType.value === true && computedLink.value === false ? linkValueClasses.value : void 0, [`btn-${props.size}`], {\n      [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n      \"active\": props.active || pressedValue.value,\n      \"rounded-pill\": props.pill,\n      \"rounded-0\": props.squared,\n      \"disabled\": props.disabled\n    }]);\n    const computedTag = computed(() => isBLink.value ? _sfc_main$1 : props.href ? \"a\" : props.tag);\n    const clicked = e => {\n      if (props.disabled) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n      emit(\"click\", e);\n      if (isToggle.value) pressedValue.value = !pressedValue.value;\n    };\n    onKeyStroke([\" \", \"enter\"], e => {\n      var _a;\n      if (props.href === \"#\") {\n        e.preventDefault();\n        (_a = element.value) == null ? void 0 : _a.click();\n      }\n    }, {\n      target: element\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(computedTag.value), mergeProps({\n        ref: \"_element\",\n        class: \"btn\"\n      }, linkProps.value, {\n        class: computedClasses.value,\n        \"aria-disabled\": computedAriaDisabled.value,\n        \"aria-pressed\": isToggle.value ? pressedValue.value : null,\n        autocomplete: isToggle.value ? \"off\" : null,\n        disabled: isButton.value ? unref(props).disabled : null,\n        href: unref(props).href,\n        rel: unref(computedLink) ? unref(props).rel : null,\n        role: nonStandardTag.value || unref(computedLink) ? \"button\" : null,\n        target: unref(computedLink) ? unref(props).target : null,\n        type: isButton.value ? unref(props).type : null,\n        to: !isButton.value ? unref(props).to : null,\n        onClick: clicked\n      }), {\n        default: withCtx(() => [unref(props).loading ? renderSlot(_ctx.$slots, \"loading\", {\n          key: 0\n        }, () => [!unref(props).loadingFill ? (openBlock(), createElementBlock(Fragment, {\n          key: 0\n        }, [createTextVNode(toDisplayString(unref(props).loadingText), 1)], 64)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"loading-spinner\", {}, () => [createVNode(_sfc_main$2, {\n          small: unref(props).size !== \"lg\",\n          label: unref(props).loadingFill ? unref(props).loadingText : void 0\n        }, null, 8, [\"small\", \"label\"])])]) : renderSlot(_ctx.$slots, \"default\", {\n          key: 1\n        })]),\n        _: 3\n      }, 16, [\"class\", \"aria-disabled\", \"aria-pressed\", \"autocomplete\", \"disabled\", \"href\", \"rel\", \"role\", \"target\", \"type\", \"to\"]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_props","__props","props","useDefaults","emit","__emit","element","useTemplateRef","pressedValue","useModel","computedLink","computedLinkProps","useBLinkHelper","isToggle","computed","value","isButton","tag","href","to","isBLink","nonStandardTag","linkProps","computedAriaDisabled","disabled","variantIsLinkType","_a","variant","startsWith","variantIsLinkTypeSubset","linkValueClasses","useLinkClasses","icon","opacity","opacityHover","underlineOffset","underlineOffsetHover","underlineOpacity","underlineOpacityHover","underlineVariant","slice","computedClasses","size","active","pill","squared","computedTag","_sfc_main$1","clicked","e","preventDefault","stopPropagation","onKeyStroke","click","target"],"sources":["../src/components/BButton/BButton.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    ref=\"_element\"\n    class=\"btn\"\n    v-bind=\"linkProps\"\n    :class=\"computedClasses\"\n    :aria-disabled=\"computedAriaDisabled\"\n    :aria-pressed=\"isToggle ? pressedValue : null\"\n    :autocomplete=\"isToggle ? 'off' : null\"\n    :disabled=\"isButton ? props.disabled : null\"\n    :href=\"props.href\"\n    :rel=\"computedLink ? props.rel : null\"\n    :role=\"nonStandardTag || computedLink ? 'button' : null\"\n    :target=\"computedLink ? props.target : null\"\n    :type=\"isButton ? props.type : null\"\n    :to=\"!isButton ? props.to : null\"\n    @click=\"clicked\"\n  >\n    <slot v-if=\"props.loading\" name=\"loading\">\n      <template v-if=\"!props.loadingFill\">\n        {{ props.loadingText }}\n      </template>\n      <slot name=\"loading-spinner\">\n        <BSpinner\n          :small=\"props.size !== 'lg'\"\n          :label=\"props.loadingFill ? props.loadingText : undefined\"\n        />\n      </slot>\n    </slot>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport BLink from '../BLink/BLink.vue'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport {onKeyStroke} from '@vueuse/core'\nimport type {BButtonProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ColorVariant} from '../../types/ColorTypes'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading-spinner'?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<Omit<BButtonProps, 'pressed'>>(), {\n  loading: false,\n  loadingFill: false,\n  loadingText: 'Loading...',\n  pill: false,\n  size: 'md',\n  squared: false,\n  tag: 'button',\n  type: 'button',\n  // Link props\n  active: false, // Why is this active: false?\n  variant: 'secondary',\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  stretched: false,\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  routerTag: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  // End link props\n})\n\nconst props = useDefaults(_props, 'BButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst pressedValue = defineModel<BButtonProps['pressed']>('pressed', {default: undefined})\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active-class',\n  'exact-active-class',\n  'replace',\n  'routerComponentName',\n  'routerTag',\n])\n\nconst isToggle = computed(() => typeof pressedValue.value === 'boolean')\nconst isButton = computed(\n  () => props.tag === 'button' && props.href === undefined && props.to === undefined\n)\nconst isBLink = computed(() => props.to !== undefined)\nconst nonStandardTag = computed(() => (props.href !== undefined ? false : !isButton.value))\n\nconst linkProps = computed(() => (isBLink.value ? computedLinkProps.value : []))\nconst computedAriaDisabled = computed(() => {\n  if (props.href === '#' && props.disabled) return true\n\n  return nonStandardTag.value ? props.disabled : null\n})\n\nconst variantIsLinkType = computed(() => props.variant?.startsWith('link') || false)\nconst variantIsLinkTypeSubset = computed(() => props.variant?.startsWith('link-') || false)\nconst linkValueClasses = useLinkClasses(\n  computed(() => ({\n    ...(variantIsLinkType.value\n      ? {\n          icon: props.icon,\n          opacity: props.opacity,\n          opacityHover: props.opacityHover,\n          underlineOffset: props.underlineOffset,\n          underlineOffsetHover: props.underlineOffsetHover,\n          underlineOpacity: props.underlineOpacity,\n          underlineOpacityHover: props.underlineOpacityHover,\n          underlineVariant: props.underlineVariant,\n          variant:\n            variantIsLinkTypeSubset.value === true\n              ? (props.variant?.slice(5) as ColorVariant)\n              : null,\n        }\n      : undefined),\n  }))\n)\nconst computedClasses = computed(() => [\n  variantIsLinkType.value === true && computedLink.value === false\n    ? linkValueClasses.value\n    : undefined,\n  [`btn-${props.size}`],\n  {\n    [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n    'active': props.active || pressedValue.value,\n    'rounded-pill': props.pill,\n    'rounded-0': props.squared,\n    'disabled': props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (isBLink.value ? BLink : props.href ? 'a' : props.tag))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopPropagation()\n    return\n  }\n  emit('click', e)\n  if (isToggle.value) pressedValue.value = !pressedValue.value\n}\n\nonKeyStroke(\n  [' ', 'enter'],\n  (e) => {\n    if (props.href === '#') {\n      e.preventDefault()\n      element.value?.click()\n    }\n  },\n  {target: element}\n)\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}