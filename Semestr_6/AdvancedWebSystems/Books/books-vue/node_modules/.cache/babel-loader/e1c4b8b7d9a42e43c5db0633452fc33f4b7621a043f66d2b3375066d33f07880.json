{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { defineComponent, computed, createBlock, openBlock, resolveDynamicComponent, unref, normalizeClass } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useRadiusElementClasses } from \"./useRadiusElementClasses-DtKYQuWz.mjs\";\nimport { u as useToNumber } from \"./index-CLgoGrAV.mjs\";\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BImg\",\n  props: {\n    blank: {\n      type: Boolean,\n      default: false\n    },\n    blankColor: {\n      default: \"transparent\"\n    },\n    block: {\n      type: Boolean,\n      default: false\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    },\n    fluidGrow: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      default: void 0\n    },\n    tag: {\n      default: \"img\"\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    sizes: {\n      default: void 0\n    },\n    src: {\n      default: void 0\n    },\n    srcset: {\n      default: void 0\n    },\n    thumbnail: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      default: void 0\n    },\n    placement: {\n      default: void 0\n    },\n    rounded: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    roundedTop: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedBottom: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedStart: {\n      type: [Boolean, String, Number],\n      default: void 0\n    },\n    roundedEnd: {\n      type: [Boolean, String, Number],\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BImg\");\n    const heightNumber = useToNumber(() => props.height ?? NaN);\n    const widthNumber = useToNumber(() => props.width ?? NaN);\n    const radiusElementClasses = useRadiusElementClasses(() => ({\n      rounded: props.rounded,\n      roundedTop: props.roundedTop,\n      roundedBottom: props.roundedBottom,\n      roundedStart: props.roundedStart,\n      roundedEnd: props.roundedEnd\n    }));\n    const computedSrcset = computed(() => typeof props.srcset === \"string\" ? props.srcset.split(\",\").filter(x => x).join(\",\") : Array.isArray(props.srcset) ? props.srcset.filter(x => x).join(\",\") : void 0);\n    const computedSizes = computed(() => typeof props.sizes === \"string\" ? props.sizes.split(\",\").filter(x => x).join(\",\") : Array.isArray(props.sizes) ? props.sizes.filter(x => x).join(\",\") : void 0);\n    const computedDimentions = computed(() => {\n      const width = Number.isNaN(widthNumber.value) ? void 0 : widthNumber.value;\n      const height = Number.isNaN(heightNumber.value) ? void 0 : heightNumber.value;\n      if (props.blank) {\n        if (width !== void 0 && height === void 0) return {\n          height: width,\n          width\n        };\n        if (width === void 0 && height !== void 0) return {\n          height,\n          width: height\n        };\n        if (width === void 0 && height === void 0) return {\n          height: 1,\n          width: 1\n        };\n      }\n      return {\n        width,\n        height\n      };\n    });\n    const computedBlankImgSrc = computed(() => makeBlankImgSrc(computedDimentions.value.width, computedDimentions.value.height, props.blankColor));\n    const computedAlignment = computed(() => ({\n      \"float-start\": props.placement === \"start\",\n      \"float-end\": props.placement === \"end\",\n      \"mx-auto\": props.placement === \"center\"\n    }));\n    const computedClasses = computed(() => [radiusElementClasses.value, computedAlignment.value, {\n      \"img-thumbnail\": props.thumbnail,\n      \"img-fluid\": props.fluid || props.fluidGrow,\n      \"w-100\": props.fluidGrow,\n      \"d-block\": props.block || props.placement === \"center\"\n    }]);\n    const makeBlankImgSrc = (width, height, color) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\" preserveAspectRatio=\"none\">\n    <rect width=\"100%\" height=\"100%\" style=\"fill:${color};\"></rect>\n    </svg>`)}`;\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass([computedClasses.value, \"b-img\"]),\n        src: !unref(props).blank ? unref(props).src : computedBlankImgSrc.value,\n        width: computedDimentions.value.width || void 0,\n        height: computedDimentions.value.height || void 0,\n        srcset: !unref(props).blank ? computedSrcset.value : void 0,\n        sizes: !unref(props).blank ? computedSizes.value : void 0,\n        loading: unref(props).lazy ? \"lazy\" : \"eager\"\n      }, null, 8, [\"class\", \"src\", \"width\", \"height\", \"srcset\", \"sizes\", \"loading\"]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_props","__props","props","useDefaults","heightNumber","useToNumber","height","NaN","widthNumber","width","radiusElementClasses","useRadiusElementClasses","rounded","roundedTop","roundedBottom","roundedStart","roundedEnd","computedSrcset","computed","srcset","split","filter","x","join","Array","isArray","computedSizes","sizes","computedDimentions","Number","isNaN","value","blank","computedBlankImgSrc","makeBlankImgSrc","blankColor","computedAlignment","placement","computedClasses","thumbnail","fluid","fluidGrow","block","color","encodeURIComponent"],"sources":["../src/components/BImg/BImg.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :class=\"computedClasses\"\n    class=\"b-img\"\n    :src=\"!props.blank ? props.src : computedBlankImgSrc\"\n    :width=\"computedDimentions.width || undefined\"\n    :height=\"computedDimentions.height || undefined\"\n    :srcset=\"!props.blank ? computedSrcset : undefined\"\n    :sizes=\"!props.blank ? computedSizes : undefined\"\n    :loading=\"props.lazy ? 'lazy' : 'eager'\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type {BImgProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed} from 'vue'\nimport {useToNumber} from '@vueuse/core'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\n\nconst _props = withDefaults(defineProps<BImgProps>(), {\n  blank: false,\n  blankColor: 'transparent',\n  block: false,\n  fluid: false,\n  fluidGrow: false,\n  height: undefined,\n  lazy: false,\n  sizes: undefined,\n  tag: 'img',\n  src: undefined,\n  srcset: undefined,\n  placement: undefined,\n  thumbnail: false,\n  width: undefined,\n  // RadiusElementExtendables props\n  rounded: false,\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\nconst props = useDefaults(_props, 'BImg')\n\nconst heightNumber = useToNumber(() => props.height ?? NaN)\nconst widthNumber = useToNumber(() => props.width ?? NaN)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: props.rounded,\n  roundedTop: props.roundedTop,\n  roundedBottom: props.roundedBottom,\n  roundedStart: props.roundedStart,\n  roundedEnd: props.roundedEnd,\n}))\n\nconst computedSrcset = computed(() =>\n  typeof props.srcset === 'string'\n    ? props.srcset\n        .split(',')\n        .filter((x) => x)\n        .join(',')\n    : Array.isArray(props.srcset)\n      ? props.srcset.filter((x) => x).join(',')\n      : undefined\n)\n\nconst computedSizes = computed(() =>\n  typeof props.sizes === 'string'\n    ? props.sizes\n        .split(',')\n        .filter((x) => x)\n        .join(',')\n    : Array.isArray(props.sizes)\n      ? props.sizes.filter((x) => x).join(',')\n      : undefined\n)\n\nconst computedDimentions = computed<{height: number | undefined; width: number | undefined}>(() => {\n  const width = Number.isNaN(widthNumber.value) ? undefined : widthNumber.value\n  const height = Number.isNaN(heightNumber.value) ? undefined : heightNumber.value\n  if (props.blank) {\n    if (width !== undefined && height === undefined) return {height: width, width}\n    if (width === undefined && height !== undefined) return {height, width: height}\n    if (width === undefined && height === undefined) return {height: 1, width: 1}\n  }\n  return {\n    width,\n    height,\n  }\n})\n\nconst computedBlankImgSrc = computed(() =>\n  makeBlankImgSrc(computedDimentions.value.width, computedDimentions.value.height, props.blankColor)\n)\n\nconst computedAlignment = computed(() => ({\n  'float-start': props.placement === 'start',\n  'float-end': props.placement === 'end',\n  'mx-auto': props.placement === 'center',\n}))\n\nconst computedClasses = computed(() => [\n  radiusElementClasses.value,\n  computedAlignment.value,\n  {\n    'img-thumbnail': props.thumbnail,\n    'img-fluid': props.fluid || props.fluidGrow,\n    'w-100': props.fluidGrow,\n    'd-block': props.block || props.placement === 'center',\n  },\n])\n\nconst makeBlankImgSrc = (width: number | undefined, height: number | undefined, color: string) =>\n  `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\" preserveAspectRatio=\"none\">\n    <rect width=\"100%\" height=\"100%\" style=\"fill:${color};\"></rect>\n    </svg>`)}`\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}