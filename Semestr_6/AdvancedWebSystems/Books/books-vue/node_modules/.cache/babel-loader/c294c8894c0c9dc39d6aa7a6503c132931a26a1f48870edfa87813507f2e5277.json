{"ast":null,"code":"import { defineComponent, mergeModels, useSlots, useTemplateRef, useModel, computed, watchEffect, createBlock, openBlock, Transition, mergeProps, unref, withCtx, createElementBlock, createCommentVNode, normalizeClass, renderSlot, Fragment, createTextVNode, toDisplayString } from \"vue\";\nimport { _ as _sfc_main$2 } from \"./BCloseButton.vue_vue_type_script_setup_true_lang-Dh0Odbqa.mjs\";\nimport { _ as _sfc_main$1 } from \"./BButton.vue_vue_type_script_setup_true_lang-ByjfGDl1.mjs\";\nimport { u as useCountdown, a as useCountdownHover } from \"./useCountdownHover-BZ6NmVEL.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { i as isEmptySlot } from \"./dom-BK2w00Ec.mjs\";\nimport { u as useFadeTransition } from \"./useTransitions-BJccF5e-.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BAlert\",\n  props: /* @__PURE__ */mergeModels({\n    closeClass: {\n      default: void 0\n    },\n    closeContent: {\n      default: void 0\n    },\n    closeLabel: {\n      default: \"Close\"\n    },\n    closeVariant: {\n      default: \"secondary\"\n    },\n    dismissible: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    immediate: {\n      type: Boolean,\n      default: true\n    },\n    interval: {\n      default: \"requestAnimationFrame\"\n    },\n    noHoverPause: {\n      type: Boolean,\n      default: false\n    },\n    noResumeOnHoverLeave: {\n      type: Boolean,\n      default: false\n    },\n    showOnPause: {\n      type: Boolean,\n      default: true\n    },\n    variant: {\n      default: \"info\"\n    }\n  }, {\n    \"modelValue\": {\n      type: [Boolean, Number],\n      ...{\n        default: false\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"close\", \"close-countdown\", \"closed\"], [\"update:modelValue\"]),\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BAlert\");\n    const emit = __emit;\n    const slots = useSlots();\n    const fadeTransitions = useFadeTransition(() => props.fade);\n    const element = useTemplateRef(\"_element\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const hasCloseSlot = computed(() => !isEmptySlot(slots.close));\n    const countdownLength = computed(() => typeof modelValue.value === \"boolean\" ? 0 : modelValue.value);\n    const computedClasses = computed(() => ({\n      [`alert-${props.variant}`]: props.variant !== null,\n      \"alert-dismissible\": props.dismissible\n    }));\n    const closeClasses = computed(() => [props.closeClass, {\n      \"btn-close-custom\": hasCloseSlot.value\n    }]);\n    const {\n      isActive,\n      pause,\n      resume,\n      stop,\n      isPaused,\n      restart,\n      value: remainingMs\n    } = useCountdown(countdownLength, props.interval, {\n      immediate: typeof modelValue.value === \"number\" && props.immediate\n    });\n    useCountdownHover(element, computed(() => ({\n      noHoverPause: props.noHoverPause,\n      noResumeOnHoverLeave: props.noResumeOnHoverLeave,\n      modelValueIgnoresHover: typeof modelValue.value === \"boolean\"\n    })), {\n      pause,\n      resume\n    });\n    const isAlertVisible = computed(() => typeof modelValue.value === \"boolean\" ? modelValue.value : isActive.value || props.showOnPause && isPaused.value);\n    const closeAttrs = computed(() => ({\n      variant: hasCloseSlot.value ? props.closeVariant : void 0,\n      class: closeClasses.value\n    }));\n    watchEffect(() => {\n      emit(\"close-countdown\", remainingMs.value);\n    });\n    const hide = () => {\n      emit(\"close\");\n      if (typeof modelValue.value === \"boolean\") {\n        modelValue.value = false;\n      } else {\n        modelValue.value = 0;\n        stop();\n      }\n      emit(\"closed\");\n    };\n    __expose({\n      pause,\n      resume,\n      stop,\n      restart\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, mergeProps(unref(fadeTransitions), {\n        \"enter-to-class\": \"show\"\n      }), {\n        default: withCtx(() => [isAlertVisible.value ? (openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          ref: \"_element\",\n          class: normalizeClass([\"alert\", computedClasses.value]),\n          role: \"alert\",\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\"\n        }, [renderSlot(_ctx.$slots, \"default\", {}, void 0, true), unref(props).dismissible ? (openBlock(), createElementBlock(Fragment, {\n          key: 0\n        }, [hasCloseSlot.value || unref(props).closeContent ? (openBlock(), createBlock(_sfc_main$1, mergeProps({\n          key: 0\n        }, closeAttrs.value, {\n          onClick: hide\n        }), {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"close\", {}, () => [createTextVNode(toDisplayString(unref(props).closeContent), 1)], true)]),\n          _: 3\n        }, 16)) : (openBlock(), createBlock(_sfc_main$2, mergeProps({\n          key: 1,\n          \"aria-label\": unref(props).closeLabel\n        }, closeAttrs.value, {\n          onClick: hide\n        }), null, 16, [\"aria-label\"]))], 64)) : createCommentVNode(\"\", true)], 2)) : createCommentVNode(\"\", true)]),\n        _: 3\n      }, 16);\n    };\n  }\n});\nconst BAlert = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-141c4f93\"]]);\nexport { BAlert as B };","map":{"version":3,"names":["_props","__props","props","useDefaults","emit","__emit","slots","useSlots","fadeTransitions","useFadeTransition","fade","element","useTemplateRef","modelValue","useModel","hasCloseSlot","computed","isEmptySlot","close","countdownLength","value","computedClasses","variant","dismissible","closeClasses","closeClass","isActive","pause","resume","stop","isPaused","restart","remainingMs","useCountdown","interval","immediate","useCountdownHover","noHoverPause","noResumeOnHoverLeave","modelValueIgnoresHover","isAlertVisible","showOnPause","closeAttrs","closeVariant","class","watchEffect","hide","__expose"],"sources":["../src/components/BAlert/BAlert.vue"],"sourcesContent":["<template>\n  <Transition v-bind=\"fadeTransitions\" enter-to-class=\"show\">\n    <div\n      v-if=\"isAlertVisible\"\n      ref=\"_element\"\n      class=\"alert\"\n      role=\"alert\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      :class=\"computedClasses\"\n    >\n      <slot />\n      <template v-if=\"props.dismissible\">\n        <BButton v-if=\"hasCloseSlot || props.closeContent\" v-bind=\"closeAttrs\" @click=\"hide\">\n          <slot name=\"close\">\n            {{ props.closeContent }}\n          </slot>\n        </BButton>\n        <BCloseButton v-else :aria-label=\"props.closeLabel\" v-bind=\"closeAttrs\" @click=\"hide\" />\n      </template>\n    </div>\n  </Transition>\n</template>\n\n<script setup lang=\"ts\">\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport BButton from '../BButton/BButton.vue'\nimport type {BAlertProps} from '../../types/ComponentProps'\nimport {computed, useTemplateRef, watchEffect} from 'vue'\nimport {useCountdown} from '../../composables/useCountdown'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useCountdownHover} from '../../composables/useCountdownHover'\nimport {useFadeTransition} from '../../composables/useTransitions'\n\nconst _props = withDefaults(defineProps<Omit<BAlertProps, 'modelValue'>>(), {\n  closeClass: undefined,\n  closeContent: undefined,\n  closeLabel: 'Close',\n  closeVariant: 'secondary',\n  dismissible: false,\n  fade: false,\n  immediate: true,\n  interval: 'requestAnimationFrame',\n  noHoverPause: false,\n  noResumeOnHoverLeave: false,\n  showOnPause: true,\n  variant: 'info',\n})\n\nconst props = useDefaults(_props, 'BAlert')\n\nconst emit = defineEmits<{\n  'close': []\n  'close-countdown': [value: number]\n  'closed': []\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  close?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst fadeTransitions = useFadeTransition(() => props.fade)\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst modelValue = defineModel<Exclude<BAlertProps['modelValue'], undefined>>({default: false})\n\nconst hasCloseSlot = computed(() => !isEmptySlot(slots.close))\nconst countdownLength = computed(() =>\n  typeof modelValue.value === 'boolean' ? 0 : modelValue.value\n)\n\nconst computedClasses = computed(() => ({\n  [`alert-${props.variant}`]: props.variant !== null,\n  'alert-dismissible': props.dismissible,\n}))\n\nconst closeClasses = computed(() => [props.closeClass, {'btn-close-custom': hasCloseSlot.value}])\n\nconst {\n  isActive,\n  pause,\n  resume,\n  stop,\n  isPaused,\n  restart,\n  value: remainingMs,\n} = useCountdown(countdownLength, props.interval, {\n  immediate: typeof modelValue.value === 'number' && props.immediate,\n})\nuseCountdownHover(\n  element,\n  computed(() => ({\n    noHoverPause: props.noHoverPause,\n    noResumeOnHoverLeave: props.noResumeOnHoverLeave,\n    modelValueIgnoresHover: typeof modelValue.value === 'boolean',\n  })),\n  {pause, resume}\n)\n\nconst isAlertVisible = computed(() =>\n  typeof modelValue.value === 'boolean'\n    ? modelValue.value\n    : isActive.value || (props.showOnPause && isPaused.value)\n)\n\nconst closeAttrs = computed(() => ({\n  variant: hasCloseSlot.value ? props.closeVariant : undefined,\n  class: closeClasses.value,\n}))\n\nwatchEffect(() => {\n  emit('close-countdown', remainingMs.value)\n})\n\nconst hide = () => {\n  emit('close')\n\n  if (typeof modelValue.value === 'boolean') {\n    modelValue.value = false\n  } else {\n    modelValue.value = 0\n    stop()\n  }\n\n  emit('closed')\n}\n\ndefineExpose({\n  pause,\n  resume,\n  stop,\n  restart,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.btn-close-custom {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  margin: var(--bs-alert-padding-y) var(--bs-alert-padding-x);\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCA,MAAMA,MAAA,GAASC,OAAA;IAeT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,QAAQ;IAE1C,MAAMI,IAAA,GAAOC,MAAA;IAMb,MAAMC,KAAA,GAAQC,QAAA;IAOd,MAAMC,eAAA,GAAkBC,iBAAA,CAAkB,MAAMP,KAAA,CAAMQ,IAAI;IAEpD,MAAAC,OAAA,GAAUC,cAAA,CAA4B,UAAU;IAEhD,MAAAC,UAAA,GAAaC,QAAA,CAA2Eb,OAAA;IAE9F,MAAMc,YAAA,GAAeC,QAAA,CAAS,MAAM,CAACC,WAAA,CAAYX,KAAA,CAAMY,KAAK,CAAC;IAC7D,MAAMC,eAAA,GAAkBH,QAAA,CAAS,MAC/B,OAAOH,UAAA,CAAWO,KAAA,KAAU,YAAY,IAAIP,UAAA,CAAWO,KACzD;IAEM,MAAAC,eAAA,GAAkBL,QAAA,CAAS,OAAO;MACtC,CAAC,SAASd,KAAA,CAAMoB,OAAO,EAAE,GAAGpB,KAAA,CAAMoB,OAAA,KAAY;MAC9C,qBAAqBpB,KAAA,CAAMqB;IAAA,EAC3B;IAEI,MAAAC,YAAA,GAAeR,QAAA,CAAS,MAAM,CAACd,KAAA,CAAMuB,UAAA,EAAY;MAAC,oBAAoBV,YAAA,CAAaK;IAAK,CAAC,CAAC;IAE1F;MACJM,QAAA;MACAC,KAAA;MACAC,MAAA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAX,KAAA,EAAOY;IACL,IAAAC,YAAA,CAAad,eAAA,EAAiBjB,KAAA,CAAMgC,QAAA,EAAU;MAChDC,SAAA,EAAW,OAAOtB,UAAA,CAAWO,KAAA,KAAU,YAAYlB,KAAA,CAAMiC;IAAA,CAC1D;IACDC,iBAAA,CACEzB,OAAA,EACAK,QAAA,CAAS,OAAO;MACdqB,YAAA,EAAcnC,KAAA,CAAMmC,YAAA;MACpBC,oBAAA,EAAsBpC,KAAA,CAAMoC,oBAAA;MAC5BC,sBAAA,EAAwB,OAAO1B,UAAA,CAAWO,KAAA,KAAU;IAAA,EACpD,GACF;MAACO,KAAA;MAAOC;IAAM,CAChB;IAEA,MAAMY,cAAA,GAAiBxB,QAAA,CAAS,MAC9B,OAAOH,UAAA,CAAWO,KAAA,KAAU,YACxBP,UAAA,CAAWO,KAAA,GACXM,QAAA,CAASN,KAAA,IAAUlB,KAAA,CAAMuC,WAAA,IAAeX,QAAA,CAASV,KACvD;IAEM,MAAAsB,UAAA,GAAa1B,QAAA,CAAS,OAAO;MACjCM,OAAA,EAASP,YAAA,CAAaK,KAAA,GAAQlB,KAAA,CAAMyC,YAAA,GAAe;MACnDC,KAAA,EAAOpB,YAAA,CAAaJ;IAAA,EACpB;IAEFyB,WAAA,CAAY,MAAM;MACXzC,IAAA,oBAAmB4B,WAAA,CAAYZ,KAAK;IAAA,CAC1C;IAED,MAAM0B,IAAA,GAAOA,CAAA,KAAM;MACjB1C,IAAA,CAAK,OAAO;MAER,WAAOS,UAAA,CAAWO,KAAA,KAAU,WAAW;QACzCP,UAAA,CAAWO,KAAA,GAAQ;MAAA,OACd;QACLP,UAAA,CAAWO,KAAA,GAAQ;QACdS,IAAA;MAAA;MAGPzB,IAAA,CAAK,QAAQ;IACf;IAEa2C,QAAA;MACXpB,KAAA;MACAC,MAAA;MACAC,IAAA;MACAE;IAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}