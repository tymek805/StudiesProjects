{"ast":null,"code":"import { inject, onMounted, watch, defineComponent, mergeModels, useModel, useTemplateRef, computed, createElementBlock, openBlock, unref, normalizeClass, renderSlot, createCommentVNode, createElementVNode, mergeProps, normalizeProps, guardReactiveProps, toDisplayString } from \"vue\";\nimport { s as stopEvent, e as eventOnOff } from \"./event-a_bi5ysw.mjs\";\nimport { a as CODE_UP, c as CODE_DOWN, j as CODE_PAGEUP, k as CODE_PAGEDOWN, l as CODE_HOME, m as CODE_END } from \"./constants-COk0ugyL.mjs\";\nimport { u as useFocus, o as onKeyStroke } from \"./index-cC189kCW.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nimport { r as rtlPluginKey } from \"./keys-D3gOZjD-.mjs\";\nimport { u as useToNumber } from \"./index-CLgoGrAV.mjs\";\nconst useRtl = () => {\n  const rtlPlugin = inject(rtlPluginKey);\n  onMounted(() => {\n    watch(() => rtlPlugin == null ? void 0 : rtlPlugin.locale.value, newValue => {\n      const html = document.documentElement;\n      html.setAttribute(\"lang\", newValue ?? \"\");\n    }, {\n      immediate: true\n    });\n    watch(() => rtlPlugin == null ? void 0 : rtlPlugin.isRtl.value, newValue => {\n      const html = document.documentElement;\n      html.setAttribute(\"dir\", newValue ?? false ? \"rtl\" : \"ltr\");\n    }, {\n      immediate: true\n    });\n  });\n  return {\n    ...rtlPlugin\n  };\n};\nconst _hoisted_1 = [\"lang\", \"tabindex\", \"title\"];\nconst _hoisted_2 = [\"name\", \"form\", \"value\"];\nconst _hoisted_3 = [\"id\", \"dir\", \"tabindex\", \"aria-label\", \"aria-invalid\", \"aria-required\", \"aria-valuemin\", \"aria-valuemax\", \"aria-valuenow\", \"aria-valuetext\"];\nconst defaultValues = {\n  min: 1,\n  max: 100,\n  step: 1,\n  repeatDelay: 500,\n  repeatInterval: 100,\n  repeatThreshold: 10,\n  repeatMultiplier: 4\n};\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BFormSpinbutton\",\n  props: /* @__PURE__ */mergeModels({\n    ariaControls: {\n      default: void 0\n    },\n    ariaLabel: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    form: {\n      default: void 0\n    },\n    formatterFn: {\n      type: Function,\n      default: void 0\n    },\n    id: {\n      default: void 0\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    labelDecrement: {\n      default: \"Decrement\"\n    },\n    labelIncrement: {\n      default: \"Increment\"\n    },\n    locale: {\n      default: void 0\n    },\n    max: {\n      default: defaultValues.max\n    },\n    min: {\n      default: defaultValues.min\n    },\n    name: {\n      default: void 0\n    },\n    placeholder: {\n      default: void 0\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    repeatDelay: {\n      default: defaultValues.repeatDelay\n    },\n    repeatInterval: {\n      default: defaultValues.repeatInterval\n    },\n    repeatStepMultiplier: {\n      default: defaultValues.repeatMultiplier\n    },\n    repeatThreshold: {\n      default: defaultValues.repeatThreshold\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      default: void 0\n    },\n    state: {\n      type: [Boolean, null],\n      default: null\n    },\n    step: {\n      default: defaultValues.step\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    wrap: {\n      type: Boolean,\n      default: false\n    }\n  }, {\n    \"modelValue\": {\n      default: null\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"change\"], [\"update:modelValue\"]),\n  setup(__props, {\n    emit: __emit\n  }) {\n    const KEY_CODES = [CODE_UP, CODE_DOWN, CODE_HOME, CODE_END, CODE_PAGEUP, CODE_PAGEDOWN];\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormSpinbutton\");\n    const emit = __emit;\n    const modelValue = useModel(__props, \"modelValue\");\n    const element = useTemplateRef(\"_element\");\n    const {\n      focused\n    } = useFocus(element);\n    const computedId = useId(() => props.id, \"spinbutton\");\n    const computedClasses = computed(() => ({\n      \"disabled\": props.disabled,\n      \"readonly\": props.readonly,\n      \"focus\": focused.value,\n      \"d-inline-flex\": props.inline || props.vertical,\n      \"d-flex\": !props.inline && !props.vertical,\n      \"align-items-stretch\": !props.vertical,\n      \"flex-column\": props.vertical,\n      [`form-control-${props.size}`]: props.size !== void 0\n    }));\n    const computedSpinClasses = computed(() => ({\n      \"d-flex\": props.vertical,\n      \"align-self-center\": !props.vertical,\n      \"align-items-center\": props.vertical,\n      \"border-top\": props.vertical,\n      \"border-bottom\": props.vertical,\n      \"border-start\": !props.vertical,\n      \"border-end\": !props.vertical\n    }));\n    let $_autoDelayTimer;\n    let $_autoRepeatTimer;\n    let $_keyIsDown = false;\n    const stepNumber = useToNumber(() => props.step);\n    const computedStep = computed(() => Number.isNaN(stepNumber.value) ? defaultValues.step : stepNumber.value);\n    const minNumber = useToNumber(() => props.min);\n    const computedMin = computed(() => Number.isNaN(minNumber.value) ? defaultValues.min : minNumber.value);\n    const maxNumber = useToNumber(() => props.max);\n    const computedMax = computed(() => {\n      const step = computedStep.value;\n      const min = computedMin.value;\n      return Math.floor((maxNumber.value - min) / step) * step + min;\n    });\n    const repeatDelayNumber = useToNumber(() => props.repeatDelay, {\n      nanToZero: true,\n      method: \"parseInt\"\n    });\n    const computedDelay = computed(() => repeatDelayNumber.value > 0 ? repeatDelayNumber.value : defaultValues.repeatDelay);\n    const repeatIntervalNumber = useToNumber(() => props.repeatInterval, {\n      nanToZero: true,\n      method: \"parseInt\"\n    });\n    const computedInterval = computed(() => repeatIntervalNumber.value > 0 ? repeatIntervalNumber.value : defaultValues.repeatInterval);\n    const repeatThresholdNumber = useToNumber(() => props.repeatThreshold, {\n      nanToZero: true,\n      method: \"parseInt\"\n    });\n    const computedThreshold = computed(() => Math.max(Number.isNaN(repeatThresholdNumber.value) ? defaultValues.repeatThreshold : repeatThresholdNumber.value, 1));\n    const repeatStepMultiplierNumber = useToNumber(() => props.repeatStepMultiplier, {\n      nanToZero: true,\n      method: \"parseInt\"\n    });\n    const computedStepMultiplier = computed(() => Math.max(Number.isNaN(repeatStepMultiplierNumber.value) ? defaultValues.repeatMultiplier : repeatStepMultiplierNumber.value, 1));\n    const computedPrecision = computed(() => {\n      const step = computedStep.value;\n      return Math.floor(step) === step ? 0 : (step.toString().split(\".\")[1] || \"\").length;\n    });\n    const computedMultiplier = computed(() => Math.pow(10, computedPrecision.value || 0));\n    const valueAsFixed = computed(() => modelValue.value === null ? \"\" : modelValue.value.toFixed(computedPrecision.value));\n    const {\n      isRtl,\n      locale: globalLocale\n    } = useRtl();\n    const computedLocale = computed(() => {\n      const loc = (props.locale ?? (globalLocale == null ? void 0 : globalLocale.value)) || \"locale\";\n      const locales = [loc];\n      const nf = new Intl.NumberFormat(locales);\n      return nf.resolvedOptions().locale;\n    });\n    const defaultFormatter = () => new Intl.NumberFormat(computedLocale.value, {\n      style: \"decimal\",\n      useGrouping: false,\n      minimumIntegerDigits: 1,\n      minimumFractionDigits: computedPrecision.value,\n      maximumFractionDigits: computedPrecision.value,\n      notation: \"standard\"\n    }).format;\n    const computedFormatter = computed(() => props.formatterFn ?? defaultFormatter());\n    const stepValue = direction => {\n      let {\n        value\n      } = modelValue;\n      if (!props.disabled && value !== null) {\n        const step = computedStep.value * direction;\n        const min = computedMin.value;\n        const max = computedMax.value;\n        const multiplier = computedMultiplier.value;\n        const {\n          wrap\n        } = props;\n        value = Math.round((value - min) / step) * step + min + step;\n        value = Math.round(value * multiplier) / multiplier;\n        modelValue.value = value > max ? wrap ? min : max : value < min ? wrap ? max : min : value;\n      }\n    };\n    const stepUp = (multiplier = 1) => {\n      if (modelValue.value === null) {\n        modelValue.value = computedMin.value;\n        return;\n      }\n      stepValue(1 * multiplier);\n    };\n    const stepDown = (multiplier = 1) => {\n      if (modelValue.value === null) {\n        modelValue.value = props.wrap ? computedMax.value : computedMin.value;\n        return;\n      }\n      stepValue(-1 * multiplier);\n    };\n    onKeyStroke(KEY_CODES, event => {\n      const {\n        code,\n        altKey,\n        ctrlKey,\n        metaKey\n      } = event;\n      if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return;\n      stopEvent(event, {\n        immediatePropagation: true\n      });\n      if ($_keyIsDown) {\n        return;\n      }\n      resetTimers();\n      if ([CODE_UP, CODE_DOWN].includes(code)) {\n        $_keyIsDown = true;\n        if (code === CODE_UP) {\n          handleStepRepeat(event, stepUp);\n          return;\n        }\n        if (code === CODE_DOWN) {\n          handleStepRepeat(event, stepDown);\n        }\n        return;\n      }\n      if (code === CODE_PAGEUP) {\n        stepUp(computedStepMultiplier.value);\n        return;\n      }\n      if (code === CODE_PAGEDOWN) {\n        stepDown(computedStepMultiplier.value);\n        return;\n      }\n      if (code === CODE_HOME) {\n        modelValue.value = computedMin.value;\n        return;\n      }\n      if (code === CODE_END) {\n        modelValue.value = computedMax.value;\n      }\n    }, {\n      target: element,\n      eventName: \"keydown\"\n    });\n    onKeyStroke(KEY_CODES, event => {\n      const {\n        altKey,\n        ctrlKey,\n        metaKey\n      } = event;\n      if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return;\n      stopEvent(event, {\n        immediatePropagation: true\n      });\n      resetTimers();\n      $_keyIsDown = false;\n      emit(\"change\", modelValue.value);\n    }, {\n      target: element,\n      eventName: \"keyup\"\n    });\n    const handleStepRepeat = (event, stepper) => {\n      const {\n        type\n      } = event || {};\n      if (!props.disabled && !props.readonly) {\n        if (isMouseEvent(event)) {\n          if (type === \"mousedown\" && event.button) return;\n        }\n        resetTimers();\n        stepper(1);\n        const threshold = computedThreshold.value;\n        const multiplier = computedStepMultiplier.value;\n        const delay = computedDelay.value;\n        const interval = computedInterval.value;\n        $_autoDelayTimer = setTimeout(() => {\n          let count = 0;\n          $_autoRepeatTimer = setInterval(() => {\n            stepper(count < threshold ? 1 : multiplier);\n            count++;\n          }, interval);\n        }, delay);\n      }\n    };\n    const isMouseEvent = evt => evt.type === \"mouseup\" || evt.type === \"mousedown\";\n    const onMouseup = event => {\n      if (isMouseEvent(event)) {\n        if (event.type === \"mouseup\" && event.button) {\n          return;\n        }\n      }\n      stopEvent(event, {\n        immediatePropagation: true\n      });\n      resetTimers();\n      setMouseup(false);\n      emit(\"change\", modelValue.value);\n    };\n    const setMouseup = on => {\n      try {\n        eventOnOff(on, [document.body, \"mouseup\", onMouseup, false]);\n        eventOnOff(on, [document.body, \"touchend\", onMouseup, false]);\n      } catch {}\n    };\n    const resetTimers = () => {\n      clearTimeout($_autoDelayTimer);\n      clearInterval($_autoRepeatTimer);\n      $_autoDelayTimer = void 0;\n      $_autoRepeatTimer = void 0;\n    };\n    const buttons = computed(() => {\n      const incrementSvgAttrs = {\n        svg: {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          class: \"bi bi-plus\",\n          viewBox: \"0 0 16 16\"\n        },\n        path: {\n          d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n        }\n      };\n      const decrementSvgAttrs = {\n        svg: {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          class: \"bi bi-dash\",\n          viewBox: \"0 0 16 16\"\n        },\n        path: {\n          d: \"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"\n        }\n      };\n      const sharedButtonAttrs = {\n        \"class\": [{\n          \"py-0\": !props.vertical\n        }, \"btn\", \"btn-sm\", \"border-0\", \"rounded-0\"],\n        \"tabindex\": \"-1\",\n        \"type\": \"button\",\n        \"disabled\": props.disabled || props.readonly,\n        \"aria-disabled\": props.disabled || props.readonly ? true : void 0,\n        \"aria-controls\": computedId.value\n      };\n      const sharedSvgAttrs = {\n        \"aria-hidden\": true,\n        \"scale\": focused.value ? 1.5 : 1.25\n      };\n      const handler = (event, stepper) => {\n        if (!props.disabled && !props.readonly) {\n          stopEvent(event, {\n            immediatePropagation: true\n          });\n          setMouseup(true);\n          focused.value = true;\n          handleStepRepeat(event, stepper);\n        }\n      };\n      const incrementAttrs = {\n        button: {\n          ...sharedButtonAttrs,\n          \"aria-label\": props.labelIncrement || void 0,\n          \"aria-keyshortcuts\": \"ArrowUp\"\n        },\n        svg: {\n          ...sharedSvgAttrs,\n          ...incrementSvgAttrs.svg\n        },\n        path: {\n          ...incrementSvgAttrs.path\n        },\n        slot: {\n          name: \"increment\"\n        },\n        handler: e => handler(e, stepUp)\n      };\n      const decrementAttrs = {\n        button: {\n          ...sharedButtonAttrs,\n          \"aria-label\": props.labelDecrement || void 0,\n          \"aria-keyshortcuts\": \"ArrowDown\"\n        },\n        svg: {\n          ...sharedSvgAttrs,\n          ...decrementSvgAttrs.svg\n        },\n        path: {\n          ...decrementSvgAttrs.path\n        },\n        slot: {\n          name: \"decrement\"\n        },\n        handler: e => handler(e, stepDown)\n      };\n      return {\n        top: {\n          ...(props.vertical ? incrementAttrs : decrementAttrs)\n        },\n        bottom: {\n          ...(!props.vertical ? incrementAttrs : decrementAttrs)\n        }\n      };\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref: \"_element\",\n        class: normalizeClass([\"b-form-spinbutton form-control\", computedClasses.value]),\n        role: \"group\",\n        lang: computedLocale.value,\n        tabindex: unref(props).disabled ? void 0 : \"-1\",\n        title: unref(props).ariaLabel,\n        onClick: _cache[4] || (_cache[4] = $event => focused.value = true)\n      }, [renderSlot(_ctx.$slots, buttons.value.top.slot.name, {\n        hasFocus: unref(focused)\n      }, () => [createElementVNode(\"button\", mergeProps(buttons.value.top.button, {\n        onMousedown: _cache[0] || (_cache[0] =\n        //@ts-ignore\n        (...args) => buttons.value.top.handler && buttons.value.top.handler(...args)),\n        onTouchstart: _cache[1] || (_cache[1] =\n        //@ts-ignore\n        (...args) => buttons.value.top.handler && buttons.value.top.handler(...args))\n      }), [(openBlock(), createElementBlock(\"svg\", normalizeProps(guardReactiveProps(buttons.value.top.svg)), [createElementVNode(\"path\", normalizeProps(guardReactiveProps(buttons.value.top.path)), null, 16)], 16))], 16)]), unref(props).name && !unref(props).disabled ? (openBlock(), createElementBlock(\"input\", {\n        key: \"hidden\",\n        type: \"hidden\",\n        name: unref(props).name,\n        form: unref(props).form,\n        value: valueAsFixed.value\n      }, null, 8, _hoisted_2)) : createCommentVNode(\"\", true), createElementVNode(\"output\", {\n        id: unref(computedId),\n        key: \"output\",\n        class: normalizeClass([\"flex-grow-1\", computedSpinClasses.value]),\n        dir: unref(isRtl) ?? false ? \"rtl\" : \"ltr\",\n        tabindex: unref(props).disabled ? void 0 : \"0\",\n        role: \"spinbutton\",\n        \"aria-live\": \"off\",\n        \"aria-label\": unref(props).ariaLabel || void 0,\n        \"aria-invalid\": unref(props).state === false || !modelValue.value !== null && unref(props).required ? true : void 0,\n        \"aria-required\": unref(props).required ? true : void 0,\n        \"aria-valuemin\": computedMin.value,\n        \"aria-valuemax\": computedMax.value,\n        \"aria-valuenow\": modelValue.value !== null ? modelValue.value : void 0,\n        \"aria-valuetext\": modelValue.value !== null ? computedFormatter.value(modelValue.value) : void 0\n      }, [createElementVNode(\"bdi\", null, toDisplayString((modelValue.value !== null ? computedFormatter.value(modelValue.value) : unref(props).placeholder) || \"\"), 1)], 10, _hoisted_3), renderSlot(_ctx.$slots, buttons.value.bottom.slot.name, {\n        hasFocus: unref(focused)\n      }, () => [createElementVNode(\"button\", mergeProps(buttons.value.bottom.button, {\n        onMousedown: _cache[2] || (_cache[2] =\n        //@ts-ignore\n        (...args) => buttons.value.bottom.handler && buttons.value.bottom.handler(...args)),\n        onTouchstart: _cache[3] || (_cache[3] =\n        //@ts-ignore\n        (...args) => buttons.value.bottom.handler && buttons.value.bottom.handler(...args))\n      }), [(openBlock(), createElementBlock(\"svg\", normalizeProps(guardReactiveProps(buttons.value.bottom.svg)), [createElementVNode(\"path\", normalizeProps(guardReactiveProps(buttons.value.bottom.path)), null, 16)], 16))], 16)])], 10, _hoisted_1);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["useRtl","rtlPlugin","inject","rtlPluginKey","onMounted","watch","locale","value","newValue","html","document","documentElement","setAttribute","immediate","isRtl","defaultValues","min","max","step","repeatDelay","repeatInterval","repeatThreshold","repeatMultiplier","KEY_CODES","CODE_UP","CODE_DOWN","CODE_HOME","CODE_END","CODE_PAGEUP","CODE_PAGEDOWN","_props","__props","props","useDefaults","emit","__emit","modelValue","useModel","element","useTemplateRef","focused","useFocus","computedId","useId","id","computedClasses","computed","disabled","readonly","inline","vertical","size","computedSpinClasses","$_autoDelayTimer","$_autoRepeatTimer","$_keyIsDown","stepNumber","useToNumber","computedStep","Number","isNaN","minNumber","computedMin","maxNumber","computedMax","Math","floor","repeatDelayNumber","nanToZero","method","computedDelay","repeatIntervalNumber","computedInterval","repeatThresholdNumber","computedThreshold","repeatStepMultiplierNumber","repeatStepMultiplier","computedStepMultiplier","computedPrecision","toString","split","length","computedMultiplier","pow","valueAsFixed","toFixed","globalLocale","computedLocale","loc","locales","nf","Intl","NumberFormat","resolvedOptions","defaultFormatter","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","notation","format","computedFormatter","formatterFn","stepValue","direction","multiplier","wrap","round","stepUp","stepDown","onKeyStroke","event","code","altKey","ctrlKey","metaKey","stopEvent","immediatePropagation","resetTimers","includes","handleStepRepeat","target","eventName","stepper","type","isMouseEvent","button","threshold","delay","interval","setTimeout","count","setInterval","evt","onMouseup","setMouseup","on","eventOnOff","body","clearTimeout","clearInterval","buttons","incrementSvgAttrs","svg","xmlns","width","height","fill","class","viewBox","path","d","decrementSvgAttrs","sharedButtonAttrs","sharedSvgAttrs","handler","incrementAttrs","labelIncrement","slot","name","e","decrementAttrs","labelDecrement","top","bottom"],"sources":["../src/composables/useRtl.ts","../src/components/BFormSpinbutton/BFormSpinbutton.vue"],"sourcesContent":["import {inject, onMounted, watch} from 'vue'\nimport {rtlPluginKey} from '../utils/keys'\n\nexport const useRtl = () => {\n  const rtlPlugin = inject(rtlPluginKey)\n\n  onMounted(() => {\n    // I can't think of a reason why one might want to destroy these if unmounted...\n    watch(\n      () => rtlPlugin?.locale.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('lang', newValue ?? '')\n      },\n      {immediate: true}\n    )\n\n    watch(\n      () => rtlPlugin?.isRtl.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('dir', (newValue ?? false) ? 'rtl' : 'ltr')\n      },\n      {immediate: true}\n    )\n  })\n\n  return {...rtlPlugin}\n}\n","<template>\n  <div\n    ref=\"_element\"\n    class=\"b-form-spinbutton form-control\"\n    :class=\"computedClasses\"\n    role=\"group\"\n    :lang=\"computedLocale\"\n    :tabindex=\"props.disabled ? undefined : '-1'\"\n    :title=\"props.ariaLabel\"\n    @click=\"focused = true\"\n  >\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.top.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.top.button\"\n        @mousedown=\"buttons.top.handler\"\n        @touchstart=\"buttons.top.handler\"\n      >\n        <svg v-bind=\"buttons.top.svg\">\n          <path v-bind=\"buttons.top.path\" />\n        </svg>\n      </button>\n    </slot>\n    <input\n      v-if=\"props.name && !props.disabled\"\n      key=\"hidden\"\n      type=\"hidden\"\n      :name=\"props.name\"\n      :form=\"props.form\"\n      :value=\"valueAsFixed\"\n    />\n    <output\n      :id=\"computedId\"\n      key=\"output\"\n      class=\"flex-grow-1\"\n      :class=\"computedSpinClasses\"\n      :dir=\"(isRtl ?? false) ? 'rtl' : 'ltr'\"\n      :tabindex=\"props.disabled ? undefined : '0'\"\n      role=\"spinbutton\"\n      aria-live=\"off\"\n      :aria-label=\"props.ariaLabel || undefined\"\n      :aria-invalid=\"\n        props.state === false || (!modelValue !== null && props.required) ? true : undefined\n      \"\n      :aria-required=\"props.required ? true : undefined\"\n      :aria-valuemin=\"computedMin\"\n      :aria-valuemax=\"computedMax\"\n      :aria-valuenow=\"modelValue !== null ? modelValue : undefined\"\n      :aria-valuetext=\"modelValue !== null ? computedFormatter(modelValue) : undefined\"\n    >\n      <bdi>\n        {{ (modelValue !== null ? computedFormatter(modelValue) : props.placeholder) || '' }}\n      </bdi>\n    </output>\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.bottom.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.bottom.button\"\n        @mousedown=\"buttons.bottom.handler\"\n        @touchstart=\"buttons.bottom.handler\"\n      >\n        <svg v-bind=\"buttons.bottom.svg\">\n          <path v-bind=\"buttons.bottom.path\" />\n        </svg>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport type {BFormSpinbuttonProps} from '../../types/ComponentProps'\nimport {eventOnOff, stopEvent} from '../../utils/event'\nimport {\n  CODE_DOWN,\n  CODE_END,\n  CODE_HOME,\n  CODE_PAGEDOWN,\n  CODE_PAGEUP,\n  CODE_UP,\n} from '../../utils/constants'\nimport {onKeyStroke, useFocus, useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useRtl} from '../../composables/useRtl'\nimport type {ButtonType} from '../../types/ButtonType'\n\nconst KEY_CODES = [CODE_UP, CODE_DOWN, CODE_HOME, CODE_END, CODE_PAGEUP, CODE_PAGEDOWN]\n\nconst _props = withDefaults(defineProps<Omit<BFormSpinbuttonProps, 'modelValue'>>(), {\n  ariaControls: undefined,\n  ariaLabel: undefined,\n  disabled: false,\n  form: undefined,\n  formatterFn: undefined,\n  id: undefined,\n  inline: false,\n  labelDecrement: 'Decrement',\n  labelIncrement: 'Increment',\n  locale: undefined,\n  max: defaultValues.max,\n  min: defaultValues.min,\n  name: undefined,\n  placeholder: undefined,\n  readonly: false,\n  repeatDelay: defaultValues.repeatDelay,\n  repeatInterval: defaultValues.repeatInterval,\n  repeatStepMultiplier: defaultValues.repeatMultiplier,\n  repeatThreshold: defaultValues.repeatThreshold,\n  required: false,\n  size: undefined,\n  state: null,\n  step: defaultValues.step,\n  vertical: false,\n  wrap: false,\n})\nconst props = useDefaults(_props, 'BFormSpinbutton')\n\nconst emit = defineEmits<{\n  change: [value: number | null]\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  decrement?: (props: {hasFocus: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  increment?: (props: {hasFocus: boolean}) => any\n}>()\n\nconst modelValue = defineModel<Exclude<BFormSpinbuttonProps['modelValue'], undefined>>({\n  default: null,\n})\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst {focused} = useFocus(element)\n\nconst computedId = useId(() => props.id, 'spinbutton')\n\nconst computedClasses = computed(() => ({\n  'disabled': props.disabled,\n  'readonly': props.readonly,\n  'focus': focused.value,\n  'd-inline-flex': props.inline || props.vertical,\n  'd-flex': !props.inline && !props.vertical,\n  'align-items-stretch': !props.vertical,\n  'flex-column': props.vertical,\n  [`form-control-${props.size}`]: props.size !== undefined,\n}))\n\nconst computedSpinClasses = computed(() => ({\n  'd-flex': props.vertical,\n  'align-self-center': !props.vertical,\n  'align-items-center': props.vertical,\n  'border-top': props.vertical,\n  'border-bottom': props.vertical,\n  'border-start': !props.vertical,\n  'border-end': !props.vertical,\n}))\n\n//non reactive properties\nlet $_autoDelayTimer: ReturnType<typeof setTimeout> | undefined\nlet $_autoRepeatTimer: ReturnType<typeof setTimeout> | undefined\nlet $_keyIsDown = false\n\n// const computedInline = computed(() => props.inline && !props.vertical)\n\n// const computedReadonly = computed(() => props.readonly && !props.disabled)\n\nconst stepNumber = useToNumber(() => props.step)\nconst computedStep = computed(() =>\n  Number.isNaN(stepNumber.value) ? defaultValues.step : stepNumber.value\n)\n\nconst minNumber = useToNumber(() => props.min)\nconst computedMin = computed(() =>\n  Number.isNaN(minNumber.value) ? defaultValues.min : minNumber.value\n)\n\nconst maxNumber = useToNumber(() => props.max)\nconst computedMax = computed(() => {\n  const step = computedStep.value\n  const min = computedMin.value\n  return Math.floor((maxNumber.value - min) / step) * step + min\n})\n\nconst repeatDelayNumber = useToNumber(() => props.repeatDelay, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedDelay = computed(() =>\n  repeatDelayNumber.value > 0 ? repeatDelayNumber.value : defaultValues.repeatDelay\n)\n\nconst repeatIntervalNumber = useToNumber(() => props.repeatInterval, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedInterval = computed(() =>\n  repeatIntervalNumber.value > 0 ? repeatIntervalNumber.value : defaultValues.repeatInterval\n)\n\nconst repeatThresholdNumber = useToNumber(() => props.repeatThreshold, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedThreshold = computed(() =>\n  Math.max(\n    Number.isNaN(repeatThresholdNumber.value)\n      ? defaultValues.repeatThreshold\n      : repeatThresholdNumber.value,\n    1\n  )\n)\n\nconst repeatStepMultiplierNumber = useToNumber(() => props.repeatStepMultiplier, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedStepMultiplier = computed(() =>\n  Math.max(\n    Number.isNaN(repeatStepMultiplierNumber.value)\n      ? defaultValues.repeatMultiplier\n      : repeatStepMultiplierNumber.value,\n    1\n  )\n)\n\nconst computedPrecision = computed(() => {\n  const step = computedStep.value\n  return Math.floor(step) === step ? 0 : (step.toString().split('.')[1] || '').length\n})\n\nconst computedMultiplier = computed(() => Math.pow(10, computedPrecision.value || 0))\n\nconst valueAsFixed = computed(() =>\n  modelValue.value === null ? '' : modelValue.value.toFixed(computedPrecision.value)\n)\n\nconst {isRtl, locale: globalLocale} = useRtl()\n\nconst computedLocale = computed(() => {\n  const loc = (props.locale ?? globalLocale?.value) || 'locale'\n  const locales = [loc]\n  const nf = new Intl.NumberFormat(locales)\n  return nf.resolvedOptions().locale\n})\n\nconst defaultFormatter = () =>\n  new Intl.NumberFormat(computedLocale.value, {\n    style: 'decimal',\n    useGrouping: false,\n    minimumIntegerDigits: 1,\n    minimumFractionDigits: computedPrecision.value,\n    maximumFractionDigits: computedPrecision.value,\n    notation: 'standard',\n  }).format\n\nconst computedFormatter = computed(() => props.formatterFn ?? defaultFormatter())\n\nconst stepValue = (direction: number) => {\n  // Sets a new incremented or decremented value, supporting optional wrapping\n  // Direction is either +1 or -1 (or a multiple thereof)\n  let {value} = modelValue\n  if (!props.disabled && value !== null) {\n    const step = computedStep.value * direction\n    const min = computedMin.value\n    const max = computedMax.value\n    const multiplier = computedMultiplier.value\n    const {wrap} = props\n    // We ensure that the value steps like a native input\n    value = Math.round((value - min) / step) * step + min + step\n    // We ensure that precision is maintained (decimals)\n    value = Math.round(value * multiplier) / multiplier\n    // Handle if wrapping is enabled\n    modelValue.value = value > max ? (wrap ? min : max) : value < min ? (wrap ? max : min) : value\n  }\n}\n\nconst stepUp = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = computedMin.value\n    return\n  }\n  stepValue(+1 * multiplier)\n}\n\nconst stepDown = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = props.wrap ? computedMax.value : computedMin.value\n    return\n  }\n  stepValue(-1 * multiplier)\n}\n\nonKeyStroke(\n  KEY_CODES,\n  (event) => {\n    const {code, altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    // https://w3c.github.io/aria-practices/#spinbutton\n    stopEvent(event, {immediatePropagation: true})\n    if ($_keyIsDown) {\n      // Keypress is already in progress\n      return\n    }\n\n    resetTimers()\n    if ([CODE_UP, CODE_DOWN].includes(code)) {\n      // The following use the custom auto-repeat handling\n\n      $_keyIsDown = true\n      if (code === CODE_UP) {\n        handleStepRepeat(event, stepUp)\n        return\n      }\n      if (code === CODE_DOWN) {\n        handleStepRepeat(event, stepDown)\n      }\n      return\n    }\n    // These use native OS key repeating\n    if (code === CODE_PAGEUP) {\n      stepUp(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_PAGEDOWN) {\n      stepDown(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_HOME) {\n      modelValue.value = computedMin.value\n      return\n    }\n    if (code === CODE_END) {\n      modelValue.value = computedMax.value\n    }\n  },\n  {target: element, eventName: 'keydown'}\n)\n\nonKeyStroke(\n  KEY_CODES,\n  (event: Readonly<KeyboardEvent>) => {\n    // Emit a change event when the keyup happens\n\n    const {altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    stopEvent(event, {immediatePropagation: true})\n    resetTimers()\n    $_keyIsDown = false\n    emit('change', modelValue.value)\n  },\n  {target: element, eventName: 'keyup'}\n)\n\n// takes in a mount or Keyboard Event\nconst handleStepRepeat = (event: Readonly<Event>, stepper: (step: number) => void) => {\n  const {type} = event || {}\n\n  if (!props.disabled && !props.readonly) {\n    if (isMouseEvent(event)) {\n      // We only respond to left (main === 0) button clicks\n      if (type === 'mousedown' && event.button) return\n    }\n    resetTimers()\n    // Step the counter initially\n    stepper(1)\n    const threshold = computedThreshold.value\n    const multiplier = computedStepMultiplier.value\n    const delay = computedDelay.value\n    const interval = computedInterval.value\n\n    // Initiate the delay/repeat interval\n    $_autoDelayTimer = setTimeout(() => {\n      let count = 0\n      $_autoRepeatTimer = setInterval(() => {\n        // After N initial repeats, we increase the incrementing step amount\n        // We do this to minimize screen reader announcements of the value\n        // (values are announced every change, which can be chatty for SR users)\n        // And to make it easer to select a value when the range is large\n        stepper(count < threshold ? 1 : multiplier)\n        count++\n      }, interval)\n    }, delay)\n  }\n}\n\nconst isMouseEvent = (evt: Readonly<Event>): evt is MouseEvent =>\n  evt.type === 'mouseup' || evt.type === 'mousedown'\n\nconst onMouseup: EventListener = (event: Readonly<Event>) => {\n  // `<body>` listener, only enabled when mousedown starts\n\n  if (isMouseEvent(event)) {\n    if (event.type === 'mouseup' && event.button) {\n      // Ignore non left button (main === 0) mouse button click\n      return\n    }\n  }\n\n  stopEvent(event, {immediatePropagation: true})\n  resetTimers()\n  setMouseup(false)\n  // Trigger the change event\n  emit('change', modelValue.value)\n}\n\nconst setMouseup = (on: boolean) => {\n  // Enable or disabled the body mouseup/touchend handlers\n  // Use try/catch to handle case when called server side\n  try {\n    eventOnOff(on, [document.body, 'mouseup', onMouseup, false])\n    eventOnOff(on, [document.body, 'touchend', onMouseup, false])\n  } catch {\n    /* empty */\n  }\n}\nconst resetTimers = () => {\n  clearTimeout($_autoDelayTimer)\n  clearInterval($_autoRepeatTimer)\n  $_autoDelayTimer = undefined\n  $_autoRepeatTimer = undefined\n}\n\nconst buttons = computed(() => {\n  const incrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-plus',\n      viewBox: '0 0 16 16',\n    },\n    path: {\n      d: 'M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z',\n    },\n  } as const\n\n  const decrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-dash',\n      viewBox: '0 0 16 16',\n    },\n    path: {d: 'M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z'},\n  } as const\n\n  const sharedButtonAttrs = {\n    'class': [{'py-0': !props.vertical}, 'btn', 'btn-sm', 'border-0', 'rounded-0'],\n    'tabindex': '-1',\n    'type': 'button' as ButtonType,\n    'disabled': props.disabled || props.readonly,\n    'aria-disabled': props.disabled || props.readonly ? true : undefined,\n    'aria-controls': computedId.value,\n  }\n\n  const sharedSvgAttrs = {\n    'aria-hidden': true,\n    'scale': focused.value ? 1.5 : 1.25,\n  }\n\n  const handler = (event: Readonly<Event>, stepper: (multiplier?: number) => void) => {\n    if (!props.disabled && !props.readonly) {\n      stopEvent(event, {immediatePropagation: true})\n      setMouseup(true)\n      // Since we `preventDefault()`, we must manually focus the button\n      // Though it's likely captured from the element click focus\n      focused.value = true\n      handleStepRepeat(event, stepper)\n    }\n  }\n\n  const incrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelIncrement || undefined,\n      'aria-keyshortcuts': 'ArrowUp',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...incrementSvgAttrs.svg,\n    },\n    path: {\n      ...incrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'increment',\n    },\n    handler: (e: Event) => handler(e, stepUp),\n  }\n\n  const decrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelDecrement || undefined,\n      'aria-keyshortcuts': 'ArrowDown',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...decrementSvgAttrs.svg,\n    },\n    path: {\n      ...decrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'decrement',\n    },\n    handler: (e: Readonly<Event>) => handler(e, stepDown),\n  }\n\n  return {\n    top: {\n      ...(props.vertical ? incrementAttrs : decrementAttrs),\n    },\n    bottom: {\n      ...(!props.vertical ? incrementAttrs : decrementAttrs),\n    },\n  }\n})\n</script>\n\n<script lang=\"ts\">\nconst defaultValues = {\n  min: 1,\n  max: 100,\n  step: 1,\n  repeatDelay: 500,\n  repeatInterval: 100,\n  repeatThreshold: 10,\n  repeatMultiplier: 4,\n} as const\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}