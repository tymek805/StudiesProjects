{"ast":null,"code":"import { defineComponent, provide, computed, createBlock, openBlock, resolveDynamicComponent, unref, normalizeClass, withCtx, renderSlot, createElementBlock } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { h as buttonGroupKey } from \"./keys-D3gOZjD-.mjs\";\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BButtonGroup\",\n  props: {\n    ariaLabel: {\n      default: \"Group\"\n    },\n    size: {\n      default: \"md\"\n    },\n    tag: {\n      default: \"div\"\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props) {\n    provide(buttonGroupKey, true);\n    const _props = __props;\n    const props = useDefaults(_props, \"BButtonGroup\");\n    const computedClasses = computed(() => ({\n      \"btn-group\": !props.vertical,\n      [`btn-group-${props.size}`]: props.size !== \"md\",\n      \"btn-group-vertical\": props.vertical\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: normalizeClass(computedClasses.value),\n        role: \"group\",\n        \"aria-label\": unref(props).ariaLabel\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\", \"aria-label\"]);\n    };\n  }\n});\nconst _hoisted_1 = [\"role\", \"aria-label\"];\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BButtonToolbar\",\n  props: {\n    ariaLabel: {\n      default: \"Group\"\n    },\n    justify: {\n      type: Boolean,\n      default: false\n    },\n    role: {\n      default: \"toolbar\"\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BButtonToolbar\");\n    const computedClasses = computed(() => ({\n      \"justify-content-between\": props.justify\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([computedClasses.value, \"btn-toolbar\"]),\n        role: unref(props).role,\n        \"aria-label\": unref(props).ariaLabel\n      }, [renderSlot(_ctx.$slots, \"default\")], 10, _hoisted_1);\n    };\n  }\n});\nexport { _sfc_main$1 as _, _sfc_main as a };","map":{"version":3,"names":["provide","buttonGroupKey","_props","__props","props","useDefaults","computedClasses","computed","vertical","size","justify"],"sources":["../src/components/BButton/BButtonGroup.vue","../src/components/BButton/BButtonToolbar.vue"],"sourcesContent":["<template>\n  <component :is=\"props.tag\" :class=\"computedClasses\" role=\"group\" :aria-label=\"props.ariaLabel\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonGroupProps} from '../../types/ComponentProps'\nimport {computed, provide} from 'vue'\nimport {buttonGroupKey} from '../../utils/keys'\n\nprovide(buttonGroupKey, true)\n\nconst _props = withDefaults(defineProps<BButtonGroupProps>(), {\n  ariaLabel: 'Group',\n  size: 'md',\n  tag: 'div',\n  vertical: false,\n})\nconst props = useDefaults(_props, 'BButtonGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  'btn-group': !props.vertical,\n  [`btn-group-${props.size}`]: props.size !== 'md',\n  'btn-group-vertical': props.vertical,\n}))\n</script>\n","<template>\n  <div\n    :class=\"computedClasses\"\n    class=\"btn-toolbar\"\n    :role=\"props.role\"\n    :aria-label=\"props.ariaLabel\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonToolbarProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BButtonToolbarProps>(), {\n  ariaLabel: 'Group',\n  justify: false,\n  role: 'toolbar',\n})\nconst props = useDefaults(_props, 'BButtonToolbar')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  'justify-content-between': props.justify,\n}))\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAYAA,OAAA,CAAQC,cAAA,EAAgB,IAAI;IAE5B,MAAMC,MAAA,GAASC,OAAA;IAMT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,cAAc;IAO1C,MAAAI,eAAA,GAAkBC,QAAA,CAAS,OAAO;MACtC,aAAa,CAACH,KAAA,CAAMI,QAAA;MACpB,CAAC,aAAaJ,KAAA,CAAMK,IAAI,EAAE,GAAGL,KAAA,CAAMK,IAAA,KAAS;MAC5C,sBAAsBL,KAAA,CAAMI;IAAA,EAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICfF,MAAMN,MAAA,GAASC,OAAA;IAKT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,gBAAgB;IAO5C,MAAAI,eAAA,GAAkBC,QAAA,CAAS,OAAO;MACtC,2BAA2BH,KAAA,CAAMM;IAAA,EACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}