{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { inject, ref, computed, shallowRef, watchEffect, getCurrentInstance as getCurrentInstance$1, provide } from \"vue\";\nimport { d as defaultsKey } from \"./keys-D3gOZjD-.mjs\";\nfunction injectSelf(key, vm = getCurrentInstance(\"injectSelf\")) {\n  const {\n    provides\n  } = vm;\n  if (provides && key in provides) {\n    return provides[key];\n  }\n  return void 0;\n}\nfunction getCurrentInstance(name, message) {\n  const vm = getCurrentInstance$1();\n  if (!vm) {\n    throw new Error(`[Bvn] ${name} ${\"must be called from inside a setup function\"}`);\n  }\n  return vm;\n}\nconst toKebabCase = (str = \"\") => str.replace(/[^a-z]/gi, \"-\").replace(/\\B([A-Z])/g, \"-$1\").toLowerCase();\nconst isObject = obj => obj !== null && typeof obj === \"object\" && !Array.isArray(obj);\nfunction mergeDeep(source = {}, target = {}, arrayFn) {\n  const out = {};\n  for (const key in source) {\n    out[key] = source[key];\n  }\n  for (const key in target) {\n    const sourceProperty = source[key];\n    const targetProperty = target[key];\n    if (isObject(sourceProperty) && isObject(targetProperty)) {\n      out[key] = mergeDeep(sourceProperty, targetProperty);\n      continue;\n    }\n    out[key] = targetProperty;\n  }\n  return out;\n}\nconst propIsDefined = (vnode, prop) => {\n  var _a, _b;\n  return typeof ((_a = vnode.props) == null ? void 0 : _a[prop]) !== \"undefined\" || typeof ((_b = vnode.props) == null ? void 0 : _b[toKebabCase(prop)]) !== \"undefined\";\n};\nfunction internalUseDefaults(props = {}, name) {\n  const defaults = inject(defaultsKey, ref({}));\n  const vm = getCurrentInstance(\"useDefaults\");\n  name = name ?? vm.type.name ?? vm.type.__name;\n  if (!name) {\n    throw new Error(\"[Bvn] Could not determine component name\");\n  }\n  const componentDefaults = computed(() => {\n    var _a;\n    return (_a = defaults.value) == null ? void 0 : _a[props._as ?? name];\n  });\n  const _props = new Proxy(props, {\n    get(target, prop) {\n      var _a, _b, _c, _d;\n      const propValue = Reflect.get(target, prop);\n      if (prop === \"class\" || prop === \"style\") {\n        return [(_a = componentDefaults.value) == null ? void 0 : _a[prop], propValue].filter(v => v != null);\n      } else if (typeof prop === \"string\" && !propIsDefined(vm.vnode, prop)) {\n        return ((_b = componentDefaults.value) == null ? void 0 : _b[prop]) ?? ((_d = (_c = defaults.value) == null ? void 0 : _c.global) == null ? void 0 : _d[prop]) ?? propValue;\n      }\n      return propValue;\n    }\n  });\n  const _subcomponentDefaults = shallowRef();\n  watchEffect(() => {\n    if (componentDefaults.value) {\n      const subComponents = Object.entries(componentDefaults.value).filter(([key]) => key.startsWith(key[0].toUpperCase()));\n      _subcomponentDefaults.value = subComponents.length ? Object.fromEntries(subComponents) : void 0;\n    } else {\n      _subcomponentDefaults.value = void 0;\n    }\n  });\n  function provideSubDefaults() {\n    const injected = injectSelf(defaultsKey, vm);\n    provide(defaultsKey, computed(() => _subcomponentDefaults.value ? mergeDeep((injected == null ? void 0 : injected.value) ?? {}, _subcomponentDefaults.value) : injected == null ? void 0 : injected.value));\n  }\n  return {\n    props: _props,\n    provideSubDefaults\n  };\n}\nfunction useDefaults(props, name) {\n  const {\n    props: _props,\n    provideSubDefaults\n  } = internalUseDefaults(props, name);\n  provideSubDefaults();\n  return _props;\n}\nexport { useDefaults as u };","map":{"version":3,"names":["injectSelf","key","vm","getCurrentInstance","provides","name","message","getCurrentInstance$1","Error","toKebabCase","str","replace","toLowerCase","isObject","obj","Array","isArray","mergeDeep","source","target","arrayFn","out","sourceProperty","targetProperty","propIsDefined","vnode","prop","_a","props","_b","internalUseDefaults","defaults","inject","defaultsKey","ref","type","__name","componentDefaults","computed","value","_as","_props","Proxy","get","propValue","Reflect","filter","v","_d","_c","global","_subcomponentDefaults","shallowRef","watchEffect","subComponents","Object","entries","startsWith","toUpperCase","length","fromEntries","provideSubDefaults","injected","provide","useDefaults"],"sources":["../src/composables/useDefaults.ts"],"sourcesContent":["/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// Utilities\nimport {\n  getCurrentInstance as _getCurrentInstance,\n  type ComponentInternalInstance,\n  computed,\n  inject,\n  type InjectionKey,\n  provide,\n  ref,\n  shallowRef,\n  type VNode,\n  watchEffect,\n} from 'vue'\nimport {defaultsKey} from '../utils/keys'\nimport type {BvnComponentProps} from '../types/BootstrapVueOptions'\n\n// Code here was taken from\n// https://github.com/vuetifyjs/vuetify/blob/8ed87310890e2b6c8ad2a626a02c17f9467cbb60/packages/vuetify/src/composables/defaults.ts#L138\n// Thanks to the Vuetify team. Vue does not make this easy\n\nfunction injectSelf<T>(key: InjectionKey<T> | string, vm?: ComponentInternalInstance): T | undefined\nfunction injectSelf(key: InjectionKey<any> | string, vm = getCurrentInstance('injectSelf')) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const {provides} = vm\n\n  if (provides && (key as string | symbol) in provides) {\n    // TS doesn't allow symbol as index type\n    return provides[key as string]\n  }\n  return undefined\n}\n\nfunction getCurrentInstance(name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Bvn] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nconst toKebabCase = (str = '') =>\n  str\n    .replace(/[^a-z]/gi, '-')\n    .replace(/\\B([A-Z])/g, '-$1')\n    .toLowerCase()\nconst isObject = (obj: any): obj is Record<string, any> =>\n  obj !== null && typeof obj === 'object' && !Array.isArray(obj)\n\nfunction mergeDeep(\n  source: Record<string, any> = {},\n  target: Record<string, any> = {},\n  arrayFn?: (a: unknown[], b: unknown[]) => unknown[]\n) {\n  const out: Record<string, any> = {}\n\n  for (const key in source) {\n    out[key] = source[key]\n  }\n\n  for (const key in target) {\n    const sourceProperty = source[key]\n    const targetProperty = target[key]\n\n    // Only continue deep merging if\n    // both properties are objects\n    if (isObject(sourceProperty) && isObject(targetProperty)) {\n      out[key] = mergeDeep(sourceProperty, targetProperty, arrayFn)\n\n      continue\n    }\n\n    if (Array.isArray(sourceProperty) && Array.isArray(targetProperty) && arrayFn) {\n      out[key] = arrayFn(sourceProperty, targetProperty)\n\n      continue\n    }\n\n    out[key] = targetProperty\n  }\n\n  return out\n}\n\nconst propIsDefined = (vnode: VNode, prop: string) =>\n  typeof vnode.props?.[prop] !== 'undefined' ||\n  typeof vnode.props?.[toKebabCase(prop)] !== 'undefined'\n\nfunction internalUseDefaults(props: Record<string, any> = {}, name?: string) {\n  const defaults = inject(defaultsKey, ref({}))\n  const vm = getCurrentInstance('useDefaults')\n\n  name = name ?? vm.type.name ?? vm.type.__name\n  if (!name) {\n    // Should never happen\n    throw new Error('[Bvn] Could not determine component name')\n  }\n\n  const componentDefaults = computed(() => (defaults.value as any)?.[props._as ?? name])\n  const _props = new Proxy(props, {\n    get(target, prop) {\n      const propValue = Reflect.get(target, prop)\n      if (prop === 'class' || prop === 'style') {\n        return [componentDefaults.value?.[prop], propValue].filter((v) => v != null)\n      } else if (typeof prop === 'string' && !propIsDefined(vm.vnode, prop)) {\n        return (\n          componentDefaults.value?.[prop] ?? (defaults.value as any)?.global?.[prop] ?? propValue\n        )\n      }\n      return propValue\n    },\n  })\n\n  const _subcomponentDefaults = shallowRef()\n  watchEffect(() => {\n    if (componentDefaults.value) {\n      const subComponents = Object.entries(componentDefaults.value).filter(([key]) =>\n        key.startsWith(key[0].toUpperCase())\n      )\n      _subcomponentDefaults.value = subComponents.length\n        ? Object.fromEntries(subComponents)\n        : undefined\n    } else {\n      _subcomponentDefaults.value = undefined\n    }\n  })\n\n  function provideSubDefaults() {\n    const injected = injectSelf(defaultsKey, vm)\n    provide(\n      defaultsKey,\n      computed(() =>\n        _subcomponentDefaults.value\n          ? mergeDeep(injected?.value ?? {}, _subcomponentDefaults.value)\n          : injected?.value\n      ) as any\n    )\n  }\n\n  return {props: _props, provideSubDefaults}\n}\n\nexport function useDefaults<T extends Record<string, any>>(\n  props: T,\n  name: keyof BvnComponentProps\n): T {\n  const {props: _props, provideSubDefaults} = internalUseDefaults(props, name)\n  provideSubDefaults()\n  return _props as T\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}