{"ast":null,"code":"import { defineComponent, computed, createElementBlock, openBlock, normalizeStyle, normalizeClass, createElementVNode, normalizeProps, guardReactiveProps, renderSlot, mergeProps } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useNumberishToStyle } from \"./useNumberishToStyle-yYj2DkI2.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { u as useId } from \"./useId-BzCLXIGF.mjs\";\nconst defaultStickyHeaderHeight = \"300px\";\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BTableSimple\",\n  props: {\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    borderless: {\n      type: Boolean,\n      default: false\n    },\n    borderVariant: {\n      default: null\n    },\n    captionTop: {\n      type: Boolean,\n      default: false\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    noBorderCollapse: {\n      type: Boolean,\n      default: false\n    },\n    outlined: {\n      type: Boolean,\n      default: false\n    },\n    responsive: {\n      type: [Boolean, String],\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    stacked: {\n      type: [Boolean, String],\n      default: false\n    },\n    stickyHeader: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    stripedColumns: {\n      type: Boolean,\n      default: false\n    },\n    variant: {\n      default: null\n    },\n    tableAttrs: {\n      default: void 0\n    },\n    tableClass: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BTableSimple\");\n    const computedId = useId(() => props.id);\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      borderVariant: props.borderVariant\n    })));\n    const computedClasses = computed(() => [props.tableClass, \"table\", \"b-table\", colorClasses.value, {\n      \"border\": props.outlined,\n      \"table-bordered\": props.bordered,\n      \"table-borderless\": props.borderless,\n      \"caption-top\": props.captionTop,\n      \"table-dark\": props.dark,\n      \"table-hover\": props.hover,\n      \"b-table-stacked\": props.stacked === true,\n      [`b-table-stacked-${props.stacked}`]: typeof props.stacked === \"string\",\n      \"table-striped\": props.striped,\n      \"table-sm\": props.small,\n      [`table-${props.variant}`]: props.variant !== null,\n      \"table-striped-columns\": props.stripedColumns\n    }]);\n    const computedTableAttrs = computed(() => ({\n      id: computedId.value,\n      class: computedClasses.value,\n      ...props.tableAttrs\n    }));\n    const computedSticky = useNumberishToStyle(computed(() => (props.stickyHeader === true ? defaultStickyHeaderHeight : props.stickyHeader) || NaN));\n    const stickyIsValid = computed(() => props.stickyHeader !== false);\n    const isResponsive = computed(() => props.responsive !== false || stickyIsValid.value);\n    const responsiveStyles = computed(() => stickyIsValid.value ? {\n      maxHeight: computedSticky.value\n    } : void 0);\n    const responsiveClasses = computed(() => ({\n      \"table-responsive\": props.responsive === true,\n      [`table-responsive-${props.responsive}`]: typeof props.responsive === \"string\",\n      \"b-table-sticky-header\": stickyIsValid.value\n    }));\n    return (_ctx, _cache) => {\n      return isResponsive.value ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(responsiveClasses.value),\n        style: normalizeStyle(responsiveStyles.value)\n      }, [createElementVNode(\"table\", normalizeProps(guardReactiveProps(computedTableAttrs.value)), [renderSlot(_ctx.$slots, \"default\")], 16)], 6)) : (openBlock(), createElementBlock(\"table\", normalizeProps(mergeProps({\n        key: 1\n      }, computedTableAttrs.value)), [renderSlot(_ctx.$slots, \"default\")], 16));\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["defaultStickyHeaderHeight","_props","__props","props","useDefaults","computedId","useId","id","colorClasses","useColorVariantClasses","computed","borderVariant","computedClasses","tableClass","value","outlined","bordered","borderless","captionTop","dark","hover","stacked","striped","small","variant","stripedColumns","computedTableAttrs","class","tableAttrs","computedSticky","useNumberishToStyle","stickyHeader","NaN","stickyIsValid","isResponsive","responsive","responsiveStyles","maxHeight","responsiveClasses"],"sources":["../src/components/BTable/BTableSimple.vue"],"sourcesContent":["<template>\n  <!-- tables definitions are shared. Can't use createReusableTemplate cause it becomes a non-root node -->\n  <div v-if=\"isResponsive\" :class=\"responsiveClasses\" :style=\"responsiveStyles\">\n    <table v-bind=\"computedTableAttrs\">\n      <slot />\n    </table>\n  </div>\n  <table v-else v-bind=\"computedTableAttrs\">\n    <slot />\n  </table>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type StyleValue} from 'vue'\nimport type {BTableSimpleProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useNumberishToStyle} from '../../composables/useNumberishToStyle'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useId} from '../../composables/useId'\n\nconst defaultStickyHeaderHeight = '300px'\n\nconst _props = withDefaults(defineProps<BTableSimpleProps>(), {\n  borderVariant: null,\n  tableClass: undefined,\n  variant: null,\n  bordered: false,\n  borderless: false,\n  captionTop: false,\n  dark: false,\n  hover: false,\n  id: undefined,\n  noBorderCollapse: false,\n  outlined: false,\n  fixed: false,\n  responsive: false,\n  stacked: false,\n  striped: false,\n  stripedColumns: false,\n  small: false,\n  stickyHeader: false,\n  tableAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BTableSimple')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id)\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    borderVariant: props.borderVariant,\n  }))\n)\nconst computedClasses = computed(() => [\n  props.tableClass,\n  'table',\n  'b-table',\n  colorClasses.value,\n  {\n    'border': props.outlined,\n    'table-bordered': props.bordered,\n    'table-borderless': props.borderless,\n    'caption-top': props.captionTop,\n    'table-dark': props.dark,\n    'table-hover': props.hover,\n    'b-table-stacked': props.stacked === true,\n    [`b-table-stacked-${props.stacked}`]: typeof props.stacked === 'string',\n    'table-striped': props.striped,\n    'table-sm': props.small,\n    [`table-${props.variant}`]: props.variant !== null,\n    'table-striped-columns': props.stripedColumns,\n  },\n])\nconst computedTableAttrs = computed(() => ({\n  id: computedId.value,\n  class: computedClasses.value,\n  ...props.tableAttrs,\n}))\n\nconst computedSticky = useNumberishToStyle(\n  computed(\n    () => (props.stickyHeader === true ? defaultStickyHeaderHeight : props.stickyHeader) || NaN\n  )\n)\nconst stickyIsValid = computed(() => props.stickyHeader !== false)\n\nconst isResponsive = computed(() => props.responsive !== false || stickyIsValid.value)\nconst responsiveStyles = computed<StyleValue | undefined>(() =>\n  stickyIsValid.value ? {maxHeight: computedSticky.value} : undefined\n)\nconst responsiveClasses = computed(() => ({\n  'table-responsive': props.responsive === true,\n  [`table-responsive-${props.responsive}`]: typeof props.responsive === 'string',\n  'b-table-sticky-header': stickyIsValid.value,\n}))\n</script>\n"],"mappings":";;;;;AAoBA,MAAMA,yBAAA,GAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAElC,MAAMC,MAAA,GAASC,OAAA;IAqBT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,cAAc;IAOhD,MAAMI,UAAA,GAAaC,KAAA,CAAM,MAAMH,KAAA,CAAMI,EAAE;IAEvC,MAAMC,YAAA,GAAeC,sBAAA,CACnBC,QAAA,CAAS,OAAO;MACdC,aAAA,EAAeR,KAAA,CAAMQ;IAAA,EACrB,CACJ;IACM,MAAAC,eAAA,GAAkBF,QAAA,CAAS,MAAM,CACrCP,KAAA,CAAMU,UAAA,EACN,SACA,WACAL,YAAA,CAAaM,KAAA,EACb;MACE,UAAUX,KAAA,CAAMY,QAAA;MAChB,kBAAkBZ,KAAA,CAAMa,QAAA;MACxB,oBAAoBb,KAAA,CAAMc,UAAA;MAC1B,eAAed,KAAA,CAAMe,UAAA;MACrB,cAAcf,KAAA,CAAMgB,IAAA;MACpB,eAAehB,KAAA,CAAMiB,KAAA;MACrB,mBAAmBjB,KAAA,CAAMkB,OAAA,KAAY;MACrC,CAAC,mBAAmBlB,KAAA,CAAMkB,OAAO,EAAE,GAAG,OAAOlB,KAAA,CAAMkB,OAAA,KAAY;MAC/D,iBAAiBlB,KAAA,CAAMmB,OAAA;MACvB,YAAYnB,KAAA,CAAMoB,KAAA;MAClB,CAAC,SAASpB,KAAA,CAAMqB,OAAO,EAAE,GAAGrB,KAAA,CAAMqB,OAAA,KAAY;MAC9C,yBAAyBrB,KAAA,CAAMsB;IAAA,EAElC;IACK,MAAAC,kBAAA,GAAqBhB,QAAA,CAAS,OAAO;MACzCH,EAAA,EAAIF,UAAA,CAAWS,KAAA;MACfa,KAAA,EAAOf,eAAA,CAAgBE,KAAA;MACvB,GAAGX,KAAA,CAAMyB;IAAA,EACT;IAEF,MAAMC,cAAA,GAAiBC,mBAAA,CACrBpB,QAAA,CACE,OAAOP,KAAA,CAAM4B,YAAA,KAAiB,OAAO/B,yBAAA,GAA4BG,KAAA,CAAM4B,YAAA,KAAiBC,GAAA,CAE5F;IACA,MAAMC,aAAA,GAAgBvB,QAAA,CAAS,MAAMP,KAAA,CAAM4B,YAAA,KAAiB,KAAK;IAEjE,MAAMG,YAAA,GAAexB,QAAA,CAAS,MAAMP,KAAA,CAAMgC,UAAA,KAAe,SAASF,aAAA,CAAcnB,KAAK;IACrF,MAAMsB,gBAAA,GAAmB1B,QAAA,CAAiC,MACxDuB,aAAA,CAAcnB,KAAA,GAAQ;MAACuB,SAAA,EAAWR,cAAA,CAAef;IAAA,IAAS,MAC5D;IACM,MAAAwB,iBAAA,GAAoB5B,QAAA,CAAS,OAAO;MACxC,oBAAoBP,KAAA,CAAMgC,UAAA,KAAe;MACzC,CAAC,oBAAoBhC,KAAA,CAAMgC,UAAU,EAAE,GAAG,OAAOhC,KAAA,CAAMgC,UAAA,KAAe;MACtE,yBAAyBF,aAAA,CAAcnB;IAAA,EACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}