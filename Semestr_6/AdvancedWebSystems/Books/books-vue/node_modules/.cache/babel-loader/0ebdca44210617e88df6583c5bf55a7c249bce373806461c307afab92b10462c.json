{"ast":null,"code":"import { defineComponent, computed, provide, toRef, createBlock, openBlock, resolveDynamicComponent, normalizeClass, withCtx, renderSlot, useAttrs, inject, mergeProps, unref } from \"vue\";\nimport { n as listGroupInjectionKey } from \"./keys-D3gOZjD-.mjs\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useBLinkHelper, _ as _sfc_main$2 } from \"./BLink.vue_vue_type_script_setup_true_lang-CinzoAgQ.mjs\";\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BListGroup\",\n  props: {\n    flush: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      type: [Boolean, String],\n      default: false\n    },\n    numbered: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"div\"\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BListGroup\");\n    const computedClasses = computed(() => {\n      const horizontal = props.flush ? false : props.horizontal;\n      return {\n        \"list-group-flush\": props.flush,\n        \"list-group-horizontal\": horizontal === true,\n        [`list-group-horizontal-${horizontal}`]: typeof horizontal === \"string\",\n        \"list-group-numbered\": props.numbered\n      };\n    });\n    const computedTag = computed(() => props.numbered === true ? \"ol\" : props.tag);\n    provide(listGroupInjectionKey, {\n      numbered: toRef(() => props.numbered)\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(computedTag.value), {\n        class: normalizeClass([\"list-group\", computedClasses.value])\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\"]);\n    };\n  }\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BListGroupItem\",\n  props: {\n    action: {\n      type: Boolean,\n      default: false\n    },\n    button: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"div\"\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    activeClass: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: void 0\n    },\n    exactActiveClass: {\n      default: void 0\n    },\n    href: {\n      default: void 0\n    },\n    icon: {\n      type: Boolean,\n      default: void 0\n    },\n    noRel: {\n      type: Boolean\n    },\n    opacity: {\n      default: void 0\n    },\n    opacityHover: {\n      default: void 0\n    },\n    prefetch: {\n      type: Boolean\n    },\n    prefetchOn: {},\n    noPrefetch: {\n      type: Boolean\n    },\n    prefetchedClass: {},\n    rel: {\n      default: void 0\n    },\n    replace: {\n      type: Boolean,\n      default: void 0\n    },\n    routerComponentName: {\n      default: void 0\n    },\n    stretched: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      default: void 0\n    },\n    to: {\n      default: void 0\n    },\n    underlineOffset: {\n      default: void 0\n    },\n    underlineOffsetHover: {\n      default: void 0\n    },\n    underlineOpacity: {\n      default: void 0\n    },\n    underlineOpacityHover: {\n      default: void 0\n    },\n    underlineVariant: {\n      default: void 0\n    },\n    variant: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BListGroupItem\");\n    const attrs = useAttrs();\n    const parentData = inject(listGroupInjectionKey, null);\n    const {\n      computedLink\n    } = useBLinkHelper(props);\n    const isLink = computed(() => !props.button && computedLink.value);\n    const tagComputed = computed(() => (parentData == null ? void 0 : parentData.numbered.value) ? \"li\" : props.button ? \"button\" : !isLink.value ? props.tag : _sfc_main$2);\n    const isAction = computed(() => props.action || isLink.value || props.button || [\"a\", \"router-link\", \"button\", \"b-link\"].includes(props.tag));\n    const computedClasses = computed(() => ({\n      [`list-group-item-${props.variant}`]: props.variant !== null && props.variant !== void 0,\n      \"list-group-item-action\": isAction.value,\n      \"active\": props.active,\n      \"disabled\": props.disabled\n    }));\n    const computedAttrs = computed(() => {\n      const localAttrs = {};\n      if (props.button) {\n        if (!attrs || !attrs.type) {\n          localAttrs.type = \"button\";\n        }\n        if (props.disabled) {\n          localAttrs.disabled = true;\n        }\n      }\n      return localAttrs;\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(tagComputed.value), mergeProps({\n        class: [\"list-group-item\", computedClasses.value],\n        \"aria-current\": unref(props).active ? true : void 0,\n        \"aria-disabled\": unref(props).disabled ? true : void 0,\n        target: isLink.value ? unref(props).target : void 0,\n        href: !unref(props).button ? unref(props).href : void 0,\n        to: !unref(props).button ? unref(props).to : void 0\n      }, computedAttrs.value), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"class\", \"aria-current\", \"aria-disabled\", \"target\", \"href\", \"to\"]);\n    };\n  }\n});\nexport { _sfc_main$1 as _, _sfc_main as a };","map":{"version":3,"names":["_props","__props","props","useDefaults","computedClasses","computed","horizontal","flush","numbered","computedTag","tag","provide","listGroupInjectionKey","toRef","attrs","useAttrs","parentData","inject","computedLink","useBLinkHelper","isLink","button","value","tagComputed","_sfc_main$2","isAction","action","includes","variant","active","disabled","computedAttrs","localAttrs","type"],"sources":["../src/components/BListGroup/BListGroup.vue","../src/components/BListGroup/BListGroupItem.vue"],"sourcesContent":["<template>\n  <component :is=\"computedTag\" class=\"list-group\" :class=\"computedClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, toRef} from 'vue'\nimport {listGroupInjectionKey} from '../../utils/keys'\nimport type {BListGroupProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BListGroupProps>(), {\n  flush: false,\n  horizontal: false,\n  numbered: false,\n  tag: 'div',\n})\nconst props = useDefaults(_props, 'BListGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => {\n  const horizontal = props.flush ? false : props.horizontal\n  return {\n    'list-group-flush': props.flush,\n    'list-group-horizontal': horizontal === true,\n    [`list-group-horizontal-${horizontal}`]: typeof horizontal === 'string',\n    'list-group-numbered': props.numbered,\n  }\n})\nconst computedTag = computed(() => (props.numbered === true ? 'ol' : props.tag))\n\nprovide(listGroupInjectionKey, {\n  numbered: toRef(() => props.numbered),\n})\n</script>\n","<template>\n  <component\n    :is=\"tagComputed\"\n    class=\"list-group-item\"\n    :class=\"computedClasses\"\n    :aria-current=\"props.active ? true : undefined\"\n    :aria-disabled=\"props.disabled ? true : undefined\"\n    :target=\"isLink ? props.target : undefined\"\n    :href=\"!props.button ? props.href : undefined\"\n    :to=\"!props.button ? props.to : undefined\"\n    v-bind=\"computedAttrs\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, inject, useAttrs} from 'vue'\nimport type {BListGroupItemProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport BLink from '../BLink/BLink.vue'\nimport {listGroupInjectionKey} from '../../utils/keys'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\n\nconst _props = withDefaults(defineProps<BListGroupItemProps>(), {\n  action: false,\n  button: false,\n  tag: 'div',\n  // Link props\n  active: false, // Why is this active: false?\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  icon: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  stretched: false,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  variant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BListGroupItem')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst attrs = useAttrs()\n\nconst parentData = inject(listGroupInjectionKey, null)\n\nconst {computedLink} = useBLinkHelper(props)\n\nconst isLink = computed(() => !props.button && computedLink.value)\nconst tagComputed = computed(() =>\n  parentData?.numbered.value ? 'li' : props.button ? 'button' : !isLink.value ? props.tag : BLink\n)\n\nconst isAction = computed(\n  () =>\n    props.action ||\n    isLink.value ||\n    props.button ||\n    ['a', 'router-link', 'button', 'b-link'].includes(props.tag)\n)\n\nconst computedClasses = computed(() => ({\n  [`list-group-item-${props.variant}`]: props.variant !== null && props.variant !== undefined,\n  'list-group-item-action': isAction.value,\n  'active': props.active,\n  'disabled': props.disabled,\n}))\n\nconst computedAttrs = computed(() => {\n  const localAttrs = {} as {type?: string; disabled?: boolean}\n  if (props.button) {\n    if (!attrs || !attrs.type) {\n      // Add a type for button is one not provided in passed attributes\n      localAttrs.type = 'button'\n    }\n    if (props.disabled) {\n      // Set disabled attribute if button and disabled\n      localAttrs.disabled = true\n    }\n  }\n  return localAttrs\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAYA,MAAMA,MAAA,GAASC,OAAA;IAMT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,YAAY;IAOxC,MAAAI,eAAA,GAAkBC,QAAA,CAAS,MAAM;MACrC,MAAMC,UAAA,GAAaJ,KAAA,CAAMK,KAAA,GAAQ,QAAQL,KAAA,CAAMI,UAAA;MACxC;QACL,oBAAoBJ,KAAA,CAAMK,KAAA;QAC1B,yBAAyBD,UAAA,KAAe;QACxC,CAAC,yBAAyBA,UAAU,EAAE,GAAG,OAAOA,UAAA,KAAe;QAC/D,uBAAuBJ,KAAA,CAAMM;MAC/B;IAAA,CACD;IACK,MAAAC,WAAA,GAAcJ,QAAA,CAAS,MAAOH,KAAA,CAAMM,QAAA,KAAa,OAAO,OAAON,KAAA,CAAMQ,GAAI;IAE/EC,OAAA,CAAQC,qBAAA,EAAuB;MAC7BJ,QAAA,EAAUK,KAAA,CAAM,MAAMX,KAAA,CAAMM,QAAQ;IAAA,CACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICdD,MAAMR,MAAA,GAASC,OAAA;IA4BT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,gBAAgB;IAOlD,MAAMc,KAAA,GAAQC,QAAA,CAAS;IAEjB,MAAAC,UAAA,GAAaC,MAAA,CAAOL,qBAAA,EAAuB,IAAI;IAErD,MAAM;MAACM;IAAA,IAAgBC,cAAA,CAAejB,KAAK;IAE3C,MAAMkB,MAAA,GAASf,QAAA,CAAS,MAAM,CAACH,KAAA,CAAMmB,MAAA,IAAUH,YAAA,CAAaI,KAAK;IACjE,MAAMC,WAAA,GAAclB,QAAA,CAAS,OAC3BW,UAAA,oBAAAA,UAAA,CAAYR,QAAA,CAASc,KAAA,IAAQ,OAAOpB,KAAA,CAAMmB,MAAA,GAAS,WAAW,CAACD,MAAA,CAAOE,KAAA,GAAQpB,KAAA,CAAMQ,GAAA,GAAMc,WAC5F;IAEA,MAAMC,QAAA,GAAWpB,QAAA,CACf,MACEH,KAAA,CAAMwB,MAAA,IACNN,MAAA,CAAOE,KAAA,IACPpB,KAAA,CAAMmB,MAAA,IACN,CAAC,KAAK,eAAe,UAAU,QAAQ,EAAEM,QAAA,CAASzB,KAAA,CAAMQ,GAAG,CAC/D;IAEM,MAAAN,eAAA,GAAkBC,QAAA,CAAS,OAAO;MACtC,CAAC,mBAAmBH,KAAA,CAAM0B,OAAO,EAAE,GAAG1B,KAAA,CAAM0B,OAAA,KAAY,QAAQ1B,KAAA,CAAM0B,OAAA,KAAY;MAClF,0BAA0BH,QAAA,CAASH,KAAA;MACnC,UAAUpB,KAAA,CAAM2B,MAAA;MAChB,YAAY3B,KAAA,CAAM4B;IAAA,EAClB;IAEI,MAAAC,aAAA,GAAgB1B,QAAA,CAAS,MAAM;MACnC,MAAM2B,UAAA,GAAa,CAAC;MACpB,IAAI9B,KAAA,CAAMmB,MAAA,EAAQ;QAChB,IAAI,CAACP,KAAA,IAAS,CAACA,KAAA,CAAMmB,IAAA,EAAM;UAEzBD,UAAA,CAAWC,IAAA,GAAO;QAAA;QAEpB,IAAI/B,KAAA,CAAM4B,QAAA,EAAU;UAElBE,UAAA,CAAWF,QAAA,GAAW;QAAA;MACxB;MAEK,OAAAE,UAAA;IAAA,CACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}