{"ast":null,"code":"import { defineComponent, computed, createBlock, openBlock, resolveDynamicComponent, unref, normalizeClass, withCtx, renderSlot, createTextVNode, toDisplayString } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-DANje4tM.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nconst _sfc_main$3 = /* @__PURE__ */defineComponent({\n  __name: \"BFormInvalidFeedback\",\n  props: {\n    ariaLive: {\n      default: void 0\n    },\n    forceShow: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    role: {\n      default: void 0\n    },\n    state: {\n      type: [Boolean, null],\n      default: null\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    tooltip: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormInvalidFeedback\");\n    const computedShow = computed(() => props.forceShow === true || props.state === false);\n    const computedClasses = computed(() => ({\n      \"d-block\": computedShow.value,\n      \"invalid-feedback\": !props.tooltip,\n      \"invalid-tooltip\": props.tooltip\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        id: unref(props).id,\n        role: unref(props).role,\n        \"aria-live\": unref(props).ariaLive,\n        \"aria-atomic\": unref(props).ariaLive ? true : void 0,\n        class: normalizeClass(computedClasses.value)\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 8, [\"id\", \"role\", \"aria-live\", \"aria-atomic\", \"class\"]);\n    };\n  }\n});\nconst _sfc_main$2 = /* @__PURE__ */defineComponent({\n  __name: \"BFormRow\",\n  props: {\n    tag: {\n      default: \"div\"\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormRow\");\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        class: \"row d-flex flex-wrap\"\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      });\n    };\n  }\n});\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  __name: \"BFormText\",\n  props: {\n    id: {\n      default: void 0\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      default: \"small\"\n    },\n    text: {\n      default: void 0\n    },\n    textVariant: {\n      default: \"body-secondary\"\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormText\");\n    const colorClasses = useColorVariantClasses(props);\n    const computedClasses = computed(() => [colorClasses.value, {\n      \"form-text\": !props.inline\n    }]);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        id: unref(props).id,\n        class: normalizeClass(computedClasses.value)\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 8, [\"id\", \"class\"]);\n    };\n  }\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BFormValidFeedback\",\n  props: {\n    ariaLive: {\n      default: void 0\n    },\n    forceShow: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      default: void 0\n    },\n    role: {\n      default: void 0\n    },\n    state: {\n      type: [Boolean, null],\n      default: null\n    },\n    tag: {\n      default: \"div\"\n    },\n    text: {\n      default: void 0\n    },\n    tooltip: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BFormInvalidFeedback\");\n    const computedShow = computed(() => props.forceShow === true || props.state === true);\n    const computedClasses = computed(() => ({\n      \"d-block\": computedShow.value,\n      \"valid-feedback\": !props.tooltip,\n      \"valid-tooltip\": props.tooltip\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        id: unref(props).id,\n        role: unref(props).role,\n        \"aria-live\": unref(props).ariaLive,\n        \"aria-atomic\": unref(props).ariaLive ? true : void 0,\n        class: normalizeClass(computedClasses.value)\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 8, [\"id\", \"role\", \"aria-live\", \"aria-atomic\", \"class\"]);\n    };\n  }\n});\nexport { _sfc_main$3 as _, _sfc_main$2 as a, _sfc_main$1 as b, _sfc_main as c };","map":{"version":3,"names":["_props","__props","props","useDefaults","computedShow","computed","forceShow","state","computedClasses","value","tooltip","colorClasses","useColorVariantClasses","inline"],"sources":["../src/components/BForm/BFormInvalidFeedback.vue","../src/components/BForm/BFormRow.vue","../src/components/BForm/BFormText.vue","../src/components/BForm/BFormValidFeedback.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :id=\"props.id\"\n    :role=\"props.role\"\n    :aria-live=\"props.ariaLive\"\n    :aria-atomic=\"props.ariaLive ? true : undefined\"\n    :class=\"computedClasses\"\n  >\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BFormFeedbackSharedProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BFormFeedbackSharedProps>(), {\n  ariaLive: undefined,\n  forceShow: false,\n  id: undefined,\n  role: undefined,\n  state: null,\n  tag: 'div',\n  text: undefined,\n  tooltip: false,\n})\nconst props = useDefaults(_props, 'BFormInvalidFeedback')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedShow = computed(() => props.forceShow === true || props.state === false)\n\nconst computedClasses = computed(() => ({\n  'd-block': computedShow.value,\n  'invalid-feedback': !props.tooltip,\n  'invalid-tooltip': props.tooltip,\n}))\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"row d-flex flex-wrap\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormRowProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BFormRowProps>(), {\n  tag: 'div',\n})\nconst props = useDefaults(_props, 'BFormRow')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default: (props: Record<string, never>) => any\n}>()\n</script>\n","<template>\n  <component :is=\"props.tag\" :id=\"props.id\" :class=\"computedClasses\">\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BFormTextProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BFormTextProps>(), {\n  id: undefined,\n  inline: false,\n  tag: 'small',\n  text: undefined,\n  textVariant: 'body-secondary',\n})\nconst props = useDefaults(_props, 'BFormText')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'form-text': !props.inline,\n  },\n])\n</script>\n","<template>\n  <component\n    :is=\"props.tag\"\n    :id=\"props.id\"\n    :role=\"props.role\"\n    :aria-live=\"props.ariaLive\"\n    :aria-atomic=\"props.ariaLive ? true : undefined\"\n    :class=\"computedClasses\"\n  >\n    <slot>\n      {{ props.text }}\n    </slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BFormFeedbackSharedProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BFormFeedbackSharedProps>(), {\n  ariaLive: undefined,\n  forceShow: false,\n  id: undefined,\n  role: undefined,\n  state: null,\n  tag: 'div',\n  text: undefined,\n  tooltip: false,\n})\nconst props = useDefaults(_props, 'BFormInvalidFeedback')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedShow = computed(() => props.forceShow === true || props.state === true)\n\nconst computedClasses = computed(() => ({\n  'd-block': computedShow.value,\n  'valid-feedback': !props.tooltip,\n  'valid-tooltip': props.tooltip,\n}))\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBA,MAAMA,MAAA,GAASC,OAAA;IAUT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,sBAAsB;IAOlD,MAAAI,YAAA,GAAeC,QAAA,CAAS,MAAMH,KAAA,CAAMI,SAAA,KAAc,QAAQJ,KAAA,CAAMK,KAAA,KAAU,KAAK;IAE/E,MAAAC,eAAA,GAAkBH,QAAA,CAAS,OAAO;MACtC,WAAWD,YAAA,CAAaK,KAAA;MACxB,oBAAoB,CAACP,KAAA,CAAMQ,OAAA;MAC3B,mBAAmBR,KAAA,CAAMQ;IAAA,EACzB;;;;;;;;;;;;;;;;;;;;;;;ICjCF,MAAMV,MAAA,GAASC,OAAA;IAGT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICC5C,MAAMA,MAAA,GAASC,OAAA;IAOT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,WAAW;IAOvC,MAAAW,YAAA,GAAeC,sBAAA,CAAuBV,KAAK;IAC3C,MAAAM,eAAA,GAAkBH,QAAA,CAAS,MAAM,CACrCM,YAAA,CAAaF,KAAA,EACb;MACE,aAAa,CAACP,KAAA,CAAMW;IAAA,EAEvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICdD,MAAMb,MAAA,GAASC,OAAA;IAUT,MAAAC,KAAA,GAAQC,WAAA,CAAYH,MAAA,EAAQ,sBAAsB;IAOlD,MAAAI,YAAA,GAAeC,QAAA,CAAS,MAAMH,KAAA,CAAMI,SAAA,KAAc,QAAQJ,KAAA,CAAMK,KAAA,KAAU,IAAI;IAE9E,MAAAC,eAAA,GAAkBH,QAAA,CAAS,OAAO;MACtC,WAAWD,YAAA,CAAaK,KAAA;MACxB,kBAAkB,CAACP,KAAA,CAAMQ,OAAA;MACzB,iBAAiBR,KAAA,CAAMQ;IAAA,EACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}