{"version":3,"file":"event-UQ02889E.js","sources":["../src/utils/event.ts"],"sourcesContent":["/**\n * @deprecated remove with parseEventOptions\n */\nexport const IS_BROWSER =\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined' &&\n  typeof navigator !== 'undefined'\n\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n/**\n * @deprecated\n */\nexport const parseEventOptions = (\n  options: boolean | Readonly<EventListenerOptions> | undefined\n): boolean | EventListenerOptions | undefined => {\n  const HAS_PASSIVE_EVENT_SUPPORT = (() => {\n    let passiveEventSupported = false\n    if (IS_BROWSER) {\n      try {\n        const options = {\n          // This function will be called when the browser\n          // attempts to access the passive property\n          get passive() {\n            passiveEventSupported = true\n            // eslint-disable-next-line no-useless-return\n            return\n          },\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        WINDOW.addEventListener('test', options, options)\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        WINDOW.removeEventListener('test', options, options)\n      } catch {\n        passiveEventSupported = false\n      }\n    }\n    return passiveEventSupported\n  })()\n\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return typeof options === 'object' ? options : {capture: !!options || false}\n  }\n  // Need to translate to actual Boolean value\n  return typeof options === 'object' ? options.capture : options\n}\n\n// Attach an event listener to an element\n/**\n * @deprecated\n */\nexport const eventOn = (\n  el: Readonly<Element>,\n  eventName: string,\n  handler: EventListener,\n  options: boolean | Readonly<EventListenerOptions> | undefined\n) => {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options))\n  }\n}\n\n// Remove an event listener from an element\n/**\n * @deprecated\n */\nexport const eventOff = (\n  el: Readonly<Element>,\n  eventName: string,\n  handler: EventListener,\n  options: boolean | Readonly<EventListenerOptions> | undefined\n) => {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, options)\n  }\n}\n\n// Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n/**\n * @deprecated\n */\nexport const eventOnOff = (on: boolean, eventParams: Parameters<typeof eventOff>) => {\n  const method = on ? eventOn : eventOff\n  method(...eventParams)\n}\n\n// Utility method to prevent the default event handling and propagation\nexport const stopEvent = (\n  event: Readonly<Event>,\n  {preventDefault = true, propagation = false, immediatePropagation = false} = {}\n) => {\n  if (preventDefault) {\n    event.preventDefault()\n  }\n  if (propagation) {\n    event.stopPropagation()\n  }\n  if (immediatePropagation) {\n    event.stopImmediatePropagation()\n  }\n}\n"],"names":["IS_BROWSER","window","document","navigator","eventOn","el","eventName","handler","options","addEventListener","passiveEventSupported","passive","WINDOW","removeEventListener","capture","parseEventOptions","eventOff","on","eventParams","event","preventDefault","propagation","immediatePropagation","stopPropagation","stopImmediatePropagation"],"mappings":"aAGa,MAAAA,EACO,oBAAXC,QACa,oBAAbC,UACc,oBAAdC,UA+CIC,EAAU,CACrBC,EACAC,EACAC,EACAC,KAEIH,GAAMA,EAAGI,kBACXJ,EAAGI,iBAAiBH,EAAWC,EA/CF,CAC/BC,SAGE,IAAIE,GAAwB,EAC5B,GAAIV,EACE,IACF,MAAMQ,EAAU,CAGd,WAAIG,GACsBD,GAAA,CAExB,GAKGE,OAAAH,iBAAiB,OAAQD,EAASA,GAGlCI,OAAAC,oBAAoB,OAAQL,EAASA,EAAO,CAC7C,MACkBE,GAAA,CAAA,CAGrB,OAAAA,CACN,KAGyB,iBAAZF,EAAuBA,EAAU,CAACM,UAAWN,IAAW,GAG9C,iBAAZA,EAAuBA,EAAQM,QAAUN,EAcbO,CAAkBP,GAAQ,EAQzDQ,EAAW,CACtBX,EACAC,EACAC,EACAC,KAEIH,GAAMA,EAAGQ,qBACRR,EAAAQ,oBAAoBP,EAAWC,EAASC,EAAO,qBAS5B,CAACS,EAAaC,MACvBD,EAAKb,EAAUY,MACpBE,EAAW,oBAIE,CACvBC,GACCC,kBAAiB,EAAMC,eAAc,EAAOC,wBAAuB,GAAS,MAEzEF,GACFD,EAAMC,iBAEJC,GACFF,EAAMI,kBAEJD,GACFH,EAAMK,0BAAyB"}