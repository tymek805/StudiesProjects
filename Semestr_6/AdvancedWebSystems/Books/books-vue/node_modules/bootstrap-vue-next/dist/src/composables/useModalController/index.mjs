import { inject } from "vue";
import { u as useSharedModalStack } from "../../../useModalManager-tL74pLur.mjs";
import { m as modalControllerPluginKey } from "../../../keys-D3gOZjD-.mjs";
const useModalController = () => {
  const { lastStack, stack } = useSharedModalStack();
  const modalControllerPlugin = inject(modalControllerPluginKey);
  const hide = (trigger = "") => {
    var _a;
    if (lastStack == null ? void 0 : lastStack.value) {
      (_a = lastStack == null ? void 0 : lastStack.value.exposed) == null ? void 0 : _a.hide(trigger);
    }
  };
  const hideAll = (trigger = "") => {
    stack == null ? void 0 : stack.value.forEach((modal) => {
      var _a;
      (_a = modal.exposed) == null ? void 0 : _a.hide(trigger);
    });
  };
  return {
    ...modalControllerPlugin,
    hide,
    hideAll
    // Todo: Supports listening events globally in the future
  };
};
export {
  useModalController
};
//# sourceMappingURL=index.mjs.map
