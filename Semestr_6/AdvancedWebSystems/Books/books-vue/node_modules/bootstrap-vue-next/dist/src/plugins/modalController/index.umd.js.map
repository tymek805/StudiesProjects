{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/modalController/index.ts"],"sourcesContent":["import {markRaw, type Plugin, ref, toRef, watch} from 'vue'\nimport {modalControllerPluginKey} from '../../utils/keys'\nimport type {\n  ControllerKey,\n  ModalOrchestratorMapValue,\n  ModalOrchestratorShowParam,\n} from '../../types/ComponentOrchestratorTypes'\n\nexport const modalControllerPlugin: Plugin = {\n  install(app) {\n    const modals = ref(new Map<ControllerKey, ModalOrchestratorMapValue>())\n\n    const buildPromise = (): {\n      value: Promise<boolean | null>\n      resolve: (value: boolean | null) => void\n    } => {\n      let resolveFunc: (value: boolean | null) => void = () => {\n        /* empty */\n      }\n\n      const promise = new Promise<boolean | null>((resolve) => {\n        resolveFunc = resolve\n      })\n\n      return {\n        value: promise,\n        resolve: resolveFunc,\n      }\n    }\n\n    const buildPrereqs = (id: string | undefined) =>\n      [buildPromise(), (id || Symbol('Modals controller')) as ControllerKey, true] as const\n\n    const show = (obj: ModalOrchestratorShowParam = {}): Promise<boolean | null> => {\n      const resolvedProps = toRef(obj.props)\n\n      const [_promise, _self, _modelValue] = buildPrereqs(resolvedProps.value?.id)\n\n      modals.value.set(_self, {\n        component: !obj.component ? undefined : markRaw(obj.component),\n        props: {...resolvedProps.value, _isConfirm: false, _promise, _modelValue},\n      })\n\n      watch(resolvedProps, (newValue) => {\n        const previous = modals.value.get(_self)\n        if (!previous) return\n        modals.value.set(_self, {\n          component: !obj.component ? undefined : markRaw(obj.component),\n          props: {...previous.props, ...newValue},\n        })\n      })\n\n      return _promise.value\n    }\n\n    const confirm = (obj: ModalOrchestratorShowParam = {}): Promise<boolean | null> => {\n      const resolvedProps = toRef(obj.props)\n\n      const [_promise, _self, _modelValue] = buildPrereqs(resolvedProps.value?.id)\n\n      modals.value.set(_self, {\n        component: !obj.component ? undefined : markRaw(obj.component),\n        props: {...resolvedProps.value, _isConfirm: true, _promise, _modelValue},\n      })\n\n      watch(resolvedProps, (newValue) => {\n        const previous = modals.value.get(_self)\n        if (!previous) return\n        modals.value.set(_self, {\n          component: !obj.component ? undefined : markRaw(obj.component),\n          props: {...previous.props, ...newValue},\n        })\n      })\n\n      return _promise.value\n    }\n\n    /**\n     * You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const leave = (self: ControllerKey) => {\n      const modal = modals.value.get(self)\n      if (!modal?.props) return\n      modal.props = {\n        ...modal.props,\n        _modelValue: false,\n      }\n    }\n\n    /**\n     * You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const remove = (self: ControllerKey) => {\n      modals.value.delete(self)\n    }\n\n    app.provide(modalControllerPluginKey, {\n      modals,\n      remove,\n      show,\n      confirm,\n      leave,\n    })\n  },\n}\n"],"names":["modalControllerPlugin","install","app","modals","ref","Map","buildPromise","resolveFunc","value","Promise","resolve","buildPrereqs","id","Symbol","provide","modalControllerPluginKey","remove","self","delete","show","obj","resolvedProps","toRef","props","_promise","_self","_modelValue","_a","set","component","markRaw","_isConfirm","newValue","previous","get","confirm","leave","modal"],"mappings":"8IAQaA,EAAgC,CAC3C,OAAAC,CAAQC,GACN,MAAMC,EAASC,EAAAA,IAAQ,IAAAC,KAEjBC,EAAe,KAInB,IAAIC,EAA+C,OAQ5C,MAAA,CACLC,MALc,IAAIC,SAAyBC,IAC7BH,EAAAG,CAAA,IAKdA,QAASH,EACX,EAGII,EAAgBC,GACpB,CAACN,IAAiBM,GAAMC,OAAO,sBAAwC,GAiErEX,EAAAY,QAAQC,2BAA0B,CACpCZ,SACAa,OANcC,IACPd,EAAAK,MAAMU,OAAOD,EAAI,EAMxBE,KAlEW,CAACC,EAAkC,YACxC,MAAAC,EAAgBC,EAAAA,MAAMF,EAAIG,QAEzBC,EAAUC,EAAOC,GAAef,EAAa,OAAAgB,EAAAN,EAAcb,YAAd,EAAAmB,EAAqBf,IAgBzE,OAdOT,EAAAK,MAAMoB,IAAIH,EAAO,CACtBI,UAAYT,EAAIS,UAAwBC,EAAAA,QAAQV,EAAIS,gBAAxB,EAC5BN,MAAO,IAAIF,EAAcb,MAAOuB,YAAY,EAAOP,WAAUE,yBAGzDL,GAAgBW,IACpB,MAAMC,EAAW9B,EAAOK,MAAM0B,IAAIT,GAC7BQ,GACE9B,EAAAK,MAAMoB,IAAIH,EAAO,CACtBI,UAAYT,EAAIS,UAAwBC,EAAAA,QAAQV,EAAIS,gBAAxB,EAC5BN,MAAO,IAAIU,EAASV,SAAUS,IAC/B,IAGIR,EAAShB,KAAA,EAgDhB2B,QA7Cc,CAACf,EAAkC,YAC3C,MAAAC,EAAgBC,EAAAA,MAAMF,EAAIG,QAEzBC,EAAUC,EAAOC,GAAef,EAAa,OAAAgB,EAAAN,EAAcb,YAAd,EAAAmB,EAAqBf,IAgBzE,OAdOT,EAAAK,MAAMoB,IAAIH,EAAO,CACtBI,UAAYT,EAAIS,UAAwBC,EAAAA,QAAQV,EAAIS,gBAAxB,EAC5BN,MAAO,IAAIF,EAAcb,MAAOuB,YAAY,EAAMP,WAAUE,yBAGxDL,GAAgBW,IACpB,MAAMC,EAAW9B,EAAOK,MAAM0B,IAAIT,GAC7BQ,GACE9B,EAAAK,MAAMoB,IAAIH,EAAO,CACtBI,UAAYT,EAAIS,UAAwBC,EAAAA,QAAQV,EAAIS,gBAAxB,EAC5BN,MAAO,IAAIU,EAASV,SAAUS,IAC/B,IAGIR,EAAShB,KAAA,EA2BhB4B,MArBanB,IACb,MAAMoB,EAAQlC,EAAOK,MAAM0B,IAAIjB,UAC1BoB,WAAOd,SACZc,EAAMd,MAAQ,IACTc,EAAMd,MACTG,aAAa,GACf,GAgBD"}