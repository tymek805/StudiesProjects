declare const _default: import('vue').DefineComponent<{}, {
    popovers?: import('vue').Ref<Map<import('../..').ControllerKey, import('../..').PopoverOrchestratorParam>, Map<import('../..').ControllerKey, import('../..').PopoverOrchestratorParam>> | undefined;
    popover?: ((obj: import('../..').OrchestratedPopover) => import('../..').ControllerKey) | undefined;
    setPopover?: ((self: import('../..').ControllerKey, val: Partial<import('../..').PopoverOrchestratorParam>) => void) | undefined;
    removePopover?: ((self: import('../..').ControllerKey) => void) | undefined;
    tooltips?: import('vue').Ref<Map<import('../..').ControllerKey, import('../..').TooltipOrchestratorParam>, Map<import('../..').ControllerKey, import('../..').TooltipOrchestratorParam>> | undefined;
    tooltip?: ((obj: import('../..').OrchestratedTooltip) => import('../..').ControllerKey) | undefined;
    setTooltip?: ((self: import('../..').ControllerKey, val: Partial<import('../..').TooltipOrchestratorParam>) => void) | undefined;
    removeTooltip?: ((self: import('../..').ControllerKey) => void) | undefined;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
