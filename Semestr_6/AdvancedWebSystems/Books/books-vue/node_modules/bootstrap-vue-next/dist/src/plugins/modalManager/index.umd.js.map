{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/modalManager/index.ts"],"sourcesContent":["import {type ComponentInternalInstance, computed, type Plugin, readonly, type Ref, ref} from 'vue'\nimport {modalManagerPluginKey} from '../../utils/keys'\n\nexport const modalManagerPlugin: Plugin = {\n  install(app) {\n    /**\n     * A collection of all currently active modals\n     *\n     * It was made into a map so that if a modal is ever added into the stack twice, it will not be duplicated\n     * (if modelValue is true when started, it gets added in setup scope, then a watcher is triggered and it gets added again in the next tick)\n     * Didn't feel like fixing it in the modal component, so I just made it a map\n     */\n    const stack: Ref<Map<number, ComponentInternalInstance>> = ref(new Map())\n\n    const countStack = computed(() => stack.value.size)\n    const valuesStack = computed(() => [...stack.value.values()])\n    const lastStack = computed(() => valuesStack.value[valuesStack.value.length - 1])\n\n    const pushStack = (modal: Readonly<ComponentInternalInstance>) => {\n      stack.value.set(modal.uid, modal)\n    }\n    const removeStack = (modal: Readonly<ComponentInternalInstance>) => {\n      stack.value.delete(modal.uid)\n    }\n\n    /**\n     * A collection of all registered modals\n     */\n    const registry: Ref<Map<number, ComponentInternalInstance>> = ref(new Map())\n\n    // Utility getters not made, would not be used (count, last)\n\n    const pushRegistry = (modal: Readonly<ComponentInternalInstance>) => {\n      registry.value.set(modal.uid, modal)\n    }\n    const removeRegistry = (modal: Readonly<ComponentInternalInstance>) => {\n      registry.value.delete(modal.uid)\n    }\n\n    app.provide(modalManagerPluginKey, {\n      countStack,\n      lastStack,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      registry: readonly(registry) as Readonly<Ref<Map<number, ComponentInternalInstance>>>,\n      stack: valuesStack,\n      pushStack,\n      removeStack,\n      pushRegistry,\n      removeRegistry,\n    })\n  },\n}\n"],"names":["modalManagerPlugin","install","app","stack","ref","Map","countStack","computed","value","size","valuesStack","values","lastStack","length","registry","provide","modalManagerPluginKey","readonly","pushStack","modal","set","uid","removeStack","delete","pushRegistry","removeRegistry"],"mappings":"8IAGaA,EAA6B,CACxC,OAAAC,CAAQC,GAQN,MAAMC,EAAqDC,EAAAA,IAAQ,IAAAC,KAE7DC,EAAaC,EAAAA,UAAS,IAAMJ,EAAMK,MAAMC,OACxCC,EAAcH,EAAAA,UAAS,IAAM,IAAIJ,EAAMK,MAAMG,YAC7CC,EAAYL,YAAS,IAAMG,EAAYF,MAAME,EAAYF,MAAMK,OAAS,KAYxEC,EAAwDV,EAAAA,IAAQ,IAAAC,KAWlEH,EAAAa,QAAQC,wBAAuB,CACjCV,aACAM,YAGAE,SAAUG,WAASH,GACnBX,MAAOO,EACPQ,UA5BiBC,IACjBhB,EAAMK,MAAMY,IAAID,EAAME,IAAKF,EAAK,EA4BhCG,YA1BmBH,IACbhB,EAAAK,MAAMe,OAAOJ,EAAME,IAAG,EA0B5BG,aAhBoBL,IACpBL,EAASN,MAAMY,IAAID,EAAME,IAAKF,EAAK,EAgBnCM,eAdsBN,IACbL,EAAAN,MAAMe,OAAOJ,EAAME,IAAG,GAchC"}