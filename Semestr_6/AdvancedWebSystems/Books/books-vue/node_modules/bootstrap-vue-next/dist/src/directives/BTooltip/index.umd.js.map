{"version":3,"file":"index.umd.js","sources":["../../../../src/directives/BTooltip/index.ts"],"sourcesContent":["import {type Directive, type Ref} from 'vue'\nimport {\n  bind,\n  type ElementWithPopper,\n  resolveActiveStatus,\n  resolveContent,\n  resolveDirectiveProps,\n  unbind,\n} from '../../utils/floatingUi'\nimport {defaultsKey} from '../../utils/keys'\nimport {findProvides} from '../utils'\n\nexport const vBTooltip: Directive<ElementWithPopper> = {\n  mounted(el, binding, vnode) {\n    const defaults = (findProvides(binding, vnode) as Record<symbol, Ref>)[defaultsKey]?.value\n    const isActive = resolveActiveStatus(binding.value)\n    if (!isActive) return\n\n    const text = resolveContent(binding.value, el)\n\n    if (!text.content && !text.title) return\n    el.$__binding = JSON.stringify([binding.modifiers, binding.value])\n    bind(el, binding, {\n      noninteractive: true,\n      ...(defaults['BTooltip'] || undefined),\n      ...resolveDirectiveProps(binding, el),\n      title: text.title ?? text.content ?? '',\n      tooltip: isActive,\n    })\n  },\n  updated(el, binding, vnode) {\n    const defaults = (findProvides(binding, vnode) as Record<symbol, Ref>)[defaultsKey]?.value\n\n    const isActive = resolveActiveStatus(binding.value)\n    if (!isActive) return\n\n    const text = resolveContent(binding.value, el)\n\n    if (!text.content && !text.title) return\n    delete binding.oldValue\n    if (el.$__binding === JSON.stringify([binding.modifiers, binding.value])) return\n    unbind(el)\n    bind(el, binding, {\n      noninteractive: true,\n      ...(defaults['BTooltip'] || undefined),\n      ...resolveDirectiveProps(binding, el),\n      title: text.title ?? text.content ?? '',\n      tooltip: isActive,\n    })\n    el.$__binding = JSON.stringify([binding.modifiers, binding.value])\n  },\n  beforeUnmount(el) {\n    unbind(el)\n  },\n}\n"],"names":["vBTooltip","mounted","el","binding","vnode","defaults","findProvides","defaultsKey","_a","value","isActive","resolveActiveStatus","text","resolveContent","content","title","$__binding","JSON","stringify","modifiers","floatingUi","bind","noninteractive","resolveDirectiveProps","tooltip","updated","oldValue","unbind","beforeUnmount"],"mappings":"iOAYaA,EAA0C,CACrD,OAAAC,CAAQC,EAAIC,EAASC,SACb,MAAAC,EAAYC,OAAAA,IAAAA,aAAaH,EAASC,GAA+BG,EAAWA,mBAAG,EAAAC,EAAAC,MAC/EC,EAAWC,EAAAA,oBAAoBR,EAAQM,OAC7C,IAAKC,EAAU,OAEf,MAAME,EAAOC,EAAAA,eAAeV,EAAQM,MAAOP,IAEtCU,EAAKE,SAAYF,EAAKG,SACxBb,EAAAc,WAAaC,KAAKC,UAAU,CAACf,EAAQgB,UAAWhB,EAAQM,QAC3DW,EAAAC,KAAKnB,EAAIC,EAAS,CAChBmB,gBAAgB,KACZjB,EAAmB,eAAK,KACzBkB,EAAsBA,sBAAApB,EAASD,GAClCa,MAAOH,EAAKG,OAASH,EAAKE,SAAW,GACrCU,QAASd,IAEb,EACA,OAAAe,CAAQvB,EAAIC,EAASC,SACb,MAAAC,EAAYC,OAAAA,IAAAA,aAAaH,EAASC,GAA+BG,EAAWA,mBAAG,EAAAC,EAAAC,MAE/EC,EAAWC,EAAAA,oBAAoBR,EAAQM,OAC7C,IAAKC,EAAU,OAEf,MAAME,EAAOC,EAAAA,eAAeV,EAAQM,MAAOP,IAEtCU,EAAKE,SAAYF,EAAKG,gBACpBZ,EAAQuB,SACXxB,EAAGc,aAAeC,KAAKC,UAAU,CAACf,EAAQgB,UAAWhB,EAAQM,UACjEkB,EAAAA,OAAOzB,GACPkB,EAAAC,KAAKnB,EAAIC,EAAS,CAChBmB,gBAAgB,KACZjB,EAAmB,eAAK,KACzBkB,EAAsBA,sBAAApB,EAASD,GAClCa,MAAOH,EAAKG,OAASH,EAAKE,SAAW,GACrCU,QAASd,IAERR,EAAAc,WAAaC,KAAKC,UAAU,CAACf,EAAQgB,UAAWhB,EAAQM,SAC7D,EACA,aAAAmB,CAAc1B,GACZyB,EAAAA,OAAOzB,EAAE"}