import { Boundary, Placement, RootBoundary } from '@floating-ui/vue';
import { DirectiveBinding } from 'vue';
import { BPopoverProps } from '../types/ComponentProps';
export { autoUpdate } from '@floating-ui/vue';
export declare const resolveBootstrapPlacement: (placement: Placement) => string;
export declare const resolveBootstrapCaret: (placement: Placement) => string;
export declare const resolveActiveStatus: (values: DirectiveBinding["value"]) => boolean;
export declare const resolveContent: (values: DirectiveBinding["value"], el: HTMLElement) => {
    title?: string;
    content?: string;
};
export declare const resolveDirectiveProps: (binding: Readonly<DirectiveBinding>, el: Readonly<HTMLElement>) => any;
export interface ElementWithPopper extends HTMLElement {
    $__element?: HTMLElement;
    $__binding?: string;
}
export declare const bind: (el: ElementWithPopper, binding: Readonly<DirectiveBinding>, props: BPopoverProps) => void;
export declare const unbind: (el: ElementWithPopper) => void;
export declare const isBoundary: (input: unknown) => input is Boundary;
export declare const isRootBoundary: (input: Boundary | RootBoundary) => input is RootBoundary;
