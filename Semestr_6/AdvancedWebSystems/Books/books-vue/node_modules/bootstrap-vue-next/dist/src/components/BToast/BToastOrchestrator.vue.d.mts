import { BToastOrchestratorProps } from '../../types/ComponentProps';
declare const _default: import('vue').DefineComponent<BToastOrchestratorProps, {
    toasts?: import('vue').Ref<import('../..').ToastOrchestratorArrayValue[], import('../..').ToastOrchestratorArrayValue[]> | undefined;
    _setIsAppend?: ((value: boolean) => void) | undefined;
    show?: ((obj: import('../..').ToastOrchestratorShowParam) => import('../..').ControllerKey) | undefined;
    remove?: ((self: import('../..').ControllerKey) => void) | undefined;
    leave?: ((self: import('../..').ControllerKey) => void) | undefined;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BToastOrchestratorProps> & Readonly<{}>, {
    teleportDisabled: boolean;
    teleportTo: string | import('vue').RendererElement | null;
    appendToast: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
export default _default;
