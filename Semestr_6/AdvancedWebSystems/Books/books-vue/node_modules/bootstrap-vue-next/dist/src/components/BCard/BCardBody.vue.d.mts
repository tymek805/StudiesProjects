import { BCardBodyProps } from '../../types/ComponentProps';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<{
        default?: (props: Record<string, never>) => any;
        subtitle?: (props: Record<string, never>) => any;
        title?: (props: Record<string, never>) => any;
    }> & {
        default?: (props: Record<string, never>) => any;
        subtitle?: (props: Record<string, never>) => any;
        title?: (props: Record<string, never>) => any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BCardBodyProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BCardBodyProps> & Readonly<{}>, {
    text: string;
    variant: import('../..').ColorVariant | null;
    tag: string;
    title: string;
    bgVariant: import('../../types/ColorTypes').BgColorVariant | null;
    textVariant: import('../..').TextColorVariant | null;
    subtitle: string;
    subtitleTag: string;
    subtitleTextVariant: import('../..').TextColorVariant | null;
    titleTag: string;
    overlay: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
