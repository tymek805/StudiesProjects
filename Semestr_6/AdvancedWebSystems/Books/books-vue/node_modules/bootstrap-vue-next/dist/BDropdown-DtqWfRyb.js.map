{"version":3,"file":"BDropdown-DtqWfRyb.js","sources":["../src/components/BDropdown/BDropdown.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    :skip=\"inInputGroup || props.noWrapper\"\n    :class=\"computedClasses\"\n    :role=\"inButtonGroupAttributes?.role\"\n  >\n    <BButton\n      :id=\"computedId\"\n      ref=\"_splitButton\"\n      :variant=\"props.splitVariant || props.variant\"\n      :size=\"props.size\"\n      :class=\"buttonClasses\"\n      :disabled=\"props.splitDisabled || props.disabled\"\n      :type=\"props.splitButtonType\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-expanded=\"props.split ? undefined : showRef\"\n      :aria-haspopup=\"props.split ? undefined : 'menu'\"\n      :href=\"props.split ? props.splitHref : undefined\"\n      :to=\"props.split && props.splitTo ? props.splitTo : undefined\"\n      @click=\"onSplitClick\"\n    >\n      <slot name=\"button-content\"> {{ props.text }} </slot>\n    </BButton>\n    <BButton\n      v-if=\"props.split\"\n      :id=\"computedId + '-split'\"\n      ref=\"_button\"\n      :variant=\"props.variant\"\n      :size=\"props.size\"\n      :disabled=\"props.disabled\"\n      :class=\"[props.toggleClass, {show: showRef}]\"\n      class=\"dropdown-toggle-split dropdown-toggle\"\n      :aria-expanded=\"showRef\"\n      aria-haspopup=\"menu\"\n      @click=\"onButtonClick\"\n    >\n      <span class=\"visually-hidden\">\n        <slot name=\"toggle-text\">\n          {{ props.toggleText }}\n        </slot>\n      </span>\n    </BButton>\n    <ConditionalTeleport\n      :to=\"props.teleportTo\"\n      :disabled=\"!props.teleportTo || props.teleportDisabled\"\n    >\n      <Transition\n        v-if=\"renderRef || contentShowing\"\n        v-bind=\"transitionProps\"\n        :appear=\"modelValue || props.visible\"\n      >\n        <ul\n          v-show=\"showRef\"\n          :id=\"computedId + '-menu'\"\n          ref=\"_floating\"\n          :style=\"[floatingStyles, sizeStyles]\"\n          class=\"dropdown-menu overflow-auto\"\n          :class=\"[props.menuClass, computedMenuClasses]\"\n          :aria-labelledby=\"computedId\"\n          :role=\"props.role\"\n          @click=\"onClickInside\"\n        >\n          <slot v-if=\"contentShowing\" :hide=\"hide\" :show=\"show\" :visible=\"showRef\" />\n        </ul>\n      </Transition>\n    </ConditionalTeleport>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  type Boundary,\n  flip,\n  type Middleware,\n  offset as offsetMiddleware,\n  type RootBoundary,\n  shift,\n  size as sizeMiddleware,\n  useFloating,\n} from '@floating-ui/vue'\nimport {onClickOutside, onKeyStroke, useToNumber} from '@vueuse/core'\nimport {\n  computed,\n  type CSSProperties,\n  type EmitFn,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  toRef,\n  useTemplateRef,\n  watch,\n} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BDropdownProps} from '../../types/ComponentProps'\nimport BButton from '../BButton/BButton.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {isBoundary, isRootBoundary, resolveBootstrapCaret} from '../../utils/floatingUi'\nimport {getElement} from '../../utils/getElement'\nimport {buttonGroupKey, dropdownInjectionKey, inputGroupKey} from '../../utils/keys'\nimport {type showHideEmits, useShowHide} from '../../composables/useShowHide'\n\nconst _props = withDefaults(defineProps<Omit<BDropdownProps, 'modelValue'>>(), {\n  ariaLabel: undefined,\n  autoClose: true,\n  boundary: 'clippingAncestors',\n  boundaryPadding: undefined,\n  teleportTo: undefined,\n  teleportDisabled: false,\n  disabled: false,\n  floatingMiddleware: undefined,\n  id: undefined,\n  initialAnimation: false,\n  isNav: false,\n  lazy: false,\n  menuClass: undefined,\n  noCaret: false,\n  noFade: false,\n  noFlip: false,\n  noShift: false,\n  noSize: false,\n  offset: 0,\n  unmountLazy: false,\n  role: 'menu',\n  size: 'md',\n  noWrapper: false,\n  split: false,\n  splitButtonType: 'button',\n  splitClass: undefined,\n  splitDisabled: undefined,\n  splitHref: undefined,\n  splitTo: undefined,\n  placement: 'bottom-start',\n  splitVariant: undefined,\n  strategy: 'absolute',\n  text: undefined,\n  show: false,\n  toggleClass: undefined,\n  toggleText: 'Toggle dropdown',\n  transProps: undefined,\n  variant: 'secondary',\n  visible: false,\n  wrapperClass: undefined,\n})\nconst props = useDefaults(_props, 'BDropdown')\n\nconst emit = defineEmits<\n  {\n    'split-click': [event: MouseEvent]\n  } & showHideEmits\n>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'button-content'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: {hide: () => void; show: () => void; visible: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'toggle-text'?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'dropdown')\n\nconst modelValue = defineModel<Exclude<BDropdownProps['modelValue'], undefined>>({default: false})\n\nconst inInputGroup = inject(inputGroupKey, false)\nconst inButtonGroup = inject(buttonGroupKey, false)\n\nconst computedOffset = computed(() =>\n  typeof props.offset === 'string' || typeof props.offset === 'number' ? props.offset : NaN\n)\nconst offsetToNumber = useToNumber(computedOffset)\n\nconst floating = useTemplateRef<HTMLElement>('_floating')\nconst button = useTemplateRef<HTMLElement>('_button')\nconst splitButton = useTemplateRef<HTMLElement>('_splitButton')\n\nconst boundary = computed<Boundary | undefined>(() =>\n  isBoundary(props.boundary) ? props.boundary : undefined\n)\nconst rootBoundary = computed<RootBoundary | undefined>(() =>\n  isRootBoundary(props.boundary) ? props.boundary : undefined\n)\n\nconst referencePlacement = computed(() => (!props.split ? splitButton.value : button.value))\n\nconst {\n  showRef,\n  renderRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  contentShowing,\n  isVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, referencePlacement, computedId)\n\nconst computedMenuClasses = computed(() => [\n  {\n    show: isVisible.value,\n    fade: !computedNoAnimation.value,\n  },\n])\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referencePlacement.value)?.focus()\n  },\n  {target: referencePlacement}\n)\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referencePlacement.value)?.focus()\n  },\n  {target: floating}\n)\n\nconst keynav = (e: Readonly<Event>, v: number) => {\n  if (floating.value?.contains((e.target as HTMLElement)?.closest('form'))) return\n  if (/input|select|option|textarea|form/i.test((e.target as HTMLElement)?.tagName)) return\n  e.preventDefault()\n  if (!showRef.value) {\n    show()\n    const loop = setInterval(() => {\n      if (isVisible.value) {\n        clearInterval(loop)\n        nextTick(() => keynav(e, v))\n      }\n    }, 16)\n    return\n  }\n  const list = floating.value?.querySelectorAll('.dropdown-item:not(.disabled):not(:disabled)')\n  if (!list) return\n  if (floating.value?.contains(document.activeElement)) {\n    const active = floating.value.querySelector('.dropdown-item:focus')\n    const index = Array.prototype.indexOf.call(list, active) + v\n    if (index >= 0 && index < list?.length) (list[index] as HTMLElement)?.focus()\n  } else {\n    ;(list[v === -1 ? list.length - 1 : 0] as HTMLElement)?.focus()\n  }\n}\n\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: referencePlacement})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: referencePlacement})\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: floating})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: floating})\n\nconst sizeStyles = ref<CSSProperties>({})\nconst floatingMiddleware = computed<Middleware[]>(() => {\n  if (props.floatingMiddleware !== undefined) {\n    return props.floatingMiddleware\n  }\n  const localOffset =\n    typeof props.offset === 'string' || typeof props.offset === 'number'\n      ? offsetToNumber.value\n      : props.offset\n  const arr: Middleware[] = [offsetMiddleware(localOffset)]\n  if (props.noFlip === false) {\n    arr.push(\n      flip({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noShift === false) {\n    arr.push(\n      shift({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noSize === false) {\n    arr.push(\n      sizeMiddleware({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n        apply({availableWidth, availableHeight}) {\n          sizeStyles.value = {\n            maxHeight:\n              availableHeight >= (floating.value?.scrollHeight ?? 0)\n                ? undefined\n                : availableHeight\n                  ? `${Math.max(0, availableHeight)}px`\n                  : undefined,\n            maxWidth:\n              availableWidth >= (floating.value?.scrollWidth ?? 0)\n                ? undefined\n                : availableWidth\n                  ? `${Math.max(0, availableWidth)}px`\n                  : undefined,\n          }\n        },\n      })\n    )\n  }\n  return arr\n})\nconst {update, floatingStyles} = useFloating(referencePlacement, floating, {\n  placement: () => props.placement,\n  middleware: floatingMiddleware,\n  strategy: toRef(() => props.strategy),\n  whileElementsMounted: autoUpdate,\n})\n\nconst inButtonGroupAttributes = inButtonGroup\n  ? {\n      class: 'btn-group',\n      role: 'group',\n    }\n  : undefined\n\nconst computedClasses = computed(() => [\n  inButtonGroupAttributes?.class,\n  props.wrapperClass,\n  {\n    'btn-group': !props.wrapperClass && props.split,\n    [`drop${resolveBootstrapCaret(props.placement)}`]: !props.wrapperClass,\n    'position-static': props.boundary !== 'clippingAncestors' && !props.isNav,\n  },\n])\n\nconst buttonClasses = computed(() => [\n  props.split ? props.splitClass : props.toggleClass,\n  {\n    'nav-link': props.isNav,\n    'dropdown-toggle': !props.split,\n    'dropdown-toggle-no-caret': props.noCaret && !props.split,\n    'show': props.split ? undefined : showRef.value,\n  },\n])\n\nconst onButtonClick = () => {\n  toggle()\n}\n\nconst onSplitClick = (event: Readonly<MouseEvent>) => {\n  if (props.split) {\n    emit('split-click', event)\n    return\n  }\n  onButtonClick()\n}\n\nonClickOutside(\n  floating,\n  () => {\n    if (showRef.value && (props.autoClose === true || props.autoClose === 'outside')) {\n      hide()\n    }\n  },\n  {ignore: [button, splitButton]}\n)\nconst onClickInside = () => {\n  if (showRef.value && (props.autoClose === true || props.autoClose === 'inside')) {\n    hide()\n  }\n}\n\nwatch(isVisible, () => {\n  update()\n})\n\ndefineExpose({\n  hide,\n  show,\n  toggle,\n})\n\nprovide(dropdownInjectionKey, {\n  id: computedId,\n  show,\n  hide,\n  toggle,\n  visible: toRef(() => showRef.value),\n  isNav: toRef(() => props.isNav),\n})\n</script>\n<style lang=\"scss\" scoped>\n.dropdown-menu {\n  &.fade {\n    display: block;\n  }\n}\n</style>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","computedId","useId","id","modelValue","_useModel","inInputGroup","inject","inputGroupKey","inButtonGroup","buttonGroupKey","computedOffset","computed","offset","NaN","offsetToNumber","useToNumber","floating","useTemplateRef","button","splitButton","boundary","isBoundary","rootBoundary","isRootBoundary","referencePlacement","split","value","showRef","renderRef","hide","show","toggle","computedNoAnimation","transitionProps","contentShowing","isVisible","useShowHide","computedMenuClasses","fade","index$1","onKeyStroke","getElement","_a","focus","target","keynav","e","v","_b","contains","closest","test","_c","tagName","preventDefault","loop","setInterval","clearInterval","nextTick","list","_d","querySelectorAll","_e","document","activeElement","active","querySelector","index","Array","prototype","indexOf","call","length","_f","_g","sizeStyles","ref","floatingMiddleware","localOffset","arr","offsetMiddleware","noFlip","push","flip","padding","boundaryPadding","noShift","shift","noSize","sizeMiddleware","apply","availableWidth","availableHeight","maxHeight","scrollHeight","Math","max","maxWidth","scrollWidth","update","floatingStyles","useFloating","placement","middleware","strategy","toRef","whileElementsMounted","autoUpdate","inButtonGroupAttributes","class","role","computedClasses","wrapperClass","resolveBootstrapCaret","isNav","buttonClasses","splitClass","toggleClass","noCaret","onButtonClick","onSplitClick","event","onClickOutside","autoClose","ignore","onClickInside","vue","watch","__expose","provide","dropdownInjectionKey","visible"],"mappings":"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"}