{"version":3,"file":"BImg.vue_vue_type_script_setup_true_lang-C9mkr0zQ.js","sources":["../src/components/BImg/BImg.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :class=\"computedClasses\"\n    class=\"b-img\"\n    :src=\"!props.blank ? props.src : computedBlankImgSrc\"\n    :width=\"computedDimentions.width || undefined\"\n    :height=\"computedDimentions.height || undefined\"\n    :srcset=\"!props.blank ? computedSrcset : undefined\"\n    :sizes=\"!props.blank ? computedSizes : undefined\"\n    :loading=\"props.lazy ? 'lazy' : 'eager'\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type {BImgProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed} from 'vue'\nimport {useToNumber} from '@vueuse/core'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\n\nconst _props = withDefaults(defineProps<BImgProps>(), {\n  blank: false,\n  blankColor: 'transparent',\n  block: false,\n  fluid: false,\n  fluidGrow: false,\n  height: undefined,\n  lazy: false,\n  sizes: undefined,\n  tag: 'img',\n  src: undefined,\n  srcset: undefined,\n  placement: undefined,\n  thumbnail: false,\n  width: undefined,\n  // RadiusElementExtendables props\n  rounded: false,\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\nconst props = useDefaults(_props, 'BImg')\n\nconst heightNumber = useToNumber(() => props.height ?? NaN)\nconst widthNumber = useToNumber(() => props.width ?? NaN)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: props.rounded,\n  roundedTop: props.roundedTop,\n  roundedBottom: props.roundedBottom,\n  roundedStart: props.roundedStart,\n  roundedEnd: props.roundedEnd,\n}))\n\nconst computedSrcset = computed(() =>\n  typeof props.srcset === 'string'\n    ? props.srcset\n        .split(',')\n        .filter((x) => x)\n        .join(',')\n    : Array.isArray(props.srcset)\n      ? props.srcset.filter((x) => x).join(',')\n      : undefined\n)\n\nconst computedSizes = computed(() =>\n  typeof props.sizes === 'string'\n    ? props.sizes\n        .split(',')\n        .filter((x) => x)\n        .join(',')\n    : Array.isArray(props.sizes)\n      ? props.sizes.filter((x) => x).join(',')\n      : undefined\n)\n\nconst computedDimentions = computed<{height: number | undefined; width: number | undefined}>(() => {\n  const width = Number.isNaN(widthNumber.value) ? undefined : widthNumber.value\n  const height = Number.isNaN(heightNumber.value) ? undefined : heightNumber.value\n  if (props.blank) {\n    if (width !== undefined && height === undefined) return {height: width, width}\n    if (width === undefined && height !== undefined) return {height, width: height}\n    if (width === undefined && height === undefined) return {height: 1, width: 1}\n  }\n  return {\n    width,\n    height,\n  }\n})\n\nconst computedBlankImgSrc = computed(() =>\n  makeBlankImgSrc(computedDimentions.value.width, computedDimentions.value.height, props.blankColor)\n)\n\nconst computedAlignment = computed(() => ({\n  'float-start': props.placement === 'start',\n  'float-end': props.placement === 'end',\n  'mx-auto': props.placement === 'center',\n}))\n\nconst computedClasses = computed(() => [\n  radiusElementClasses.value,\n  computedAlignment.value,\n  {\n    'img-thumbnail': props.thumbnail,\n    'img-fluid': props.fluid || props.fluidGrow,\n    'w-100': props.fluidGrow,\n    'd-block': props.block || props.placement === 'center',\n  },\n])\n\nconst makeBlankImgSrc = (width: number | undefined, height: number | undefined, color: string) =>\n  `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\" preserveAspectRatio=\"none\">\n    <rect width=\"100%\" height=\"100%\" style=\"fill:${color};\"></rect>\n    </svg>`)}`\n</script>\n"],"names":["_props","__props","props","useDefaults","heightNumber","useToNumber","height","NaN","widthNumber","width","radiusElementClasses","useRadiusElementClasses","rounded","roundedTop","roundedBottom","roundedStart","roundedEnd","computedSrcset","computed","srcset","split","filter","x","join","Array","isArray","computedSizes","sizes","computedDimentions","Number","isNaN","value","blank","computedBlankImgSrc","makeBlankImgSrc","blankColor","computedAlignment","placement","computedClasses","thumbnail","fluid","fluidGrow","block","color","encodeURIComponent"],"mappings":"03BAqBA,MAAMA,EAASC,EAuBTC,EAAQC,EAAAA,YAAYH,EAAQ,QAE5BI,EAAeC,EAAAA,aAAY,IAAMH,EAAMI,QAAUC,MACjDC,EAAcH,EAAAA,aAAY,IAAMH,EAAMO,OAASF,MAE/CG,EAAuBC,EAAAA,yBAAwB,KAAO,CAC1DC,QAASV,EAAMU,QACfC,WAAYX,EAAMW,WAClBC,cAAeZ,EAAMY,cACrBC,aAAcb,EAAMa,aACpBC,WAAYd,EAAMc,eAGdC,EAAiBC,EAAAA,UAAS,IACN,iBAAjBhB,EAAMiB,OACTjB,EAAMiB,OACHC,MAAM,KACNC,QAAQC,GAAMA,IACdC,KAAK,KACRC,MAAMC,QAAQvB,EAAMiB,QAClBjB,EAAMiB,OAAOE,QAAQC,GAAMA,IAAGC,KAAK,UACnC,IAGFG,EAAgBR,EAAAA,UAAS,IACN,iBAAhBhB,EAAMyB,MACTzB,EAAMyB,MACHP,MAAM,KACNC,QAAQC,GAAMA,IACdC,KAAK,KACRC,MAAMC,QAAQvB,EAAMyB,OAClBzB,EAAMyB,MAAMN,QAAQC,GAAMA,IAAGC,KAAK,UAClC,IAGFK,EAAqBV,EAAAA,UAAkE,KAC3F,MAAMT,EAAQoB,OAAOC,MAAMtB,EAAYuB,YAAS,EAAYvB,EAAYuB,MAClEzB,EAASuB,OAAOC,MAAM1B,EAAa2B,YAAS,EAAY3B,EAAa2B,MAC3E,GAAI7B,EAAM8B,MAAO,CACX,QAAU,IAAVvB,QAAkC,IAAXH,QAA6B,CAACA,OAAQG,EAAOA,SACpE,QAAU,IAAVA,QAAkC,IAAXH,QAA6B,CAACA,SAAQG,MAAOH,GACpE,QAAU,IAAVG,QAAkC,IAAXH,QAA6B,CAACA,OAAQ,EAAGG,MAAO,EAAC,CAEvE,MAAA,CACLA,QACAH,SACF,IAGI2B,EAAsBf,EAAAA,UAAS,IACnCgB,EAAgBN,EAAmBG,MAAMtB,MAAOmB,EAAmBG,MAAMzB,OAAQJ,EAAMiC,cAGnFC,EAAoBlB,EAAAA,UAAS,KAAO,CACxC,cAAmC,UAApBhB,EAAMmC,UACrB,YAAiC,QAApBnC,EAAMmC,UACnB,UAA+B,WAApBnC,EAAMmC,cAGbC,EAAkBpB,EAAAA,UAAS,IAAM,CACrCR,EAAqBqB,MACrBK,EAAkBL,MAClB,CACE,gBAAiB7B,EAAMqC,UACvB,YAAarC,EAAMsC,OAAStC,EAAMuC,UAClC,QAASvC,EAAMuC,UACf,UAAWvC,EAAMwC,OAA6B,WAApBxC,EAAMmC,cAI9BH,EAAkB,CAACzB,EAA2BH,EAA4BqC,IAC9E,oCAAoCC,mBAAmB,eAAenC,cAAkBH,sDAA2DG,KAASH,oFAC3GqC"}