{"version":3,"file":"BCarouselSlide.vue_vue_type_script_setup_true_lang-B9IWk30W.mjs","sources":["../src/utils/getSlotElements.ts","../src/components/BCarousel/BCarousel.vue","../src/components/BCarousel/BCarouselSlide.vue"],"sourcesContent":["import type {Slot, VNode} from 'vue'\n\nexport const getSlotElements = (slot: Slot | undefined, filterBy: string): VNode[] =>\n  (slot?.() ?? [])\n    .reduce((arr: VNode[], slot: VNode) => {\n      if (typeof slot.type === 'symbol') {\n        arr = arr.concat(slot.children as unknown as VNode)\n      } else {\n        arr.push(slot)\n      }\n      return arr\n    }, [])\n    .filter((child) => (child.type as {__name: string} | undefined)?.__name === filterBy)\n","<template>\n  <div\n    :id=\"computedId\"\n    ref=\"_element\"\n    class=\"carousel slide pointer-event\"\n    :class=\"computedClasses\"\n  >\n    <div\n      v-if=\"props.indicators\"\n      class=\"carousel-indicators\"\n      :aria-label=\"props.labelIndicators\"\n      :aria-owns=\"buttonOwnership\"\n    >\n      <!-- :data-bs-target=\"`#${computedId}`\" is required since the classes target elems with that attr -->\n      <button\n        v-for=\"(_, i) in slides.length\"\n        :key=\"i\"\n        type=\"button\"\n        data-bs-target=\"\"\n        :class=\"i === modelValue ? 'active' : ''\"\n        :aria-current=\"i === modelValue ? true : undefined\"\n        :aria-label=\"`${props.indicatorsButtonLabel} ${i}`\"\n        :aria-controls=\"buttonOwnership\"\n        :aria-describedby=\"slideValues?.[i]._id\"\n        @click=\"goToValue(i)\"\n      />\n    </div>\n\n    <div ref=\"_relatedTarget\" class=\"carousel-inner\">\n      <TransitionGroup\n        :enter-from-class=\"enterClasses\"\n        :enter-active-class=\"enterClasses\"\n        :enter-to-class=\"enterClasses\"\n        :leave-from-class=\"leaveClasses\"\n        :leave-active-class=\"leaveClasses\"\n        :leave-to-class=\"leaveClasses\"\n        @before-leave=\"onBeforeLeave\"\n        @after-leave=\"onAfterLeave\"\n        @after-enter=\"onAfterEnter\"\n        @enter=\"onEnter\"\n      >\n        <component\n          :is=\"slide\"\n          v-for=\"(slide, i) in slides\"\n          v-show=\"i === modelValue\"\n          :key=\"i\"\n          ref=\"_slideValues\"\n          :class=\"{active: i === modelValue && isTransitioning === false}\"\n          :style=\"props.noAnimation && {transition: 'none'}\"\n        />\n      </TransitionGroup>\n    </div>\n\n    <template v-if=\"props.controls\">\n      <button class=\"carousel-control-prev\" type=\"button\" @click=\"onClickPrev\">\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsPrevText }}</span>\n      </button>\n      <button class=\"carousel-control-next\" type=\"button\" @click=\"onClickNext\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsNextText }}</span>\n      </button>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvCarouselEvent} from '../../utils'\nimport {computed, onMounted, provide, ref, toRef, useTemplateRef, watch} from 'vue'\nimport {useId} from '../../composables/useId'\nimport type {BCarouselProps} from '../../types/ComponentProps'\nimport {onKeyStroke, useElementHover, useIntervalFn, useSwipe, useToNumber} from '@vueuse/core'\nimport type BCarouselSlide from './BCarouselSlide.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {Numberish} from '../../types/CommonTypes'\nimport {getSlotElements} from '../../utils/getSlotElements'\nimport {carouselInjectionKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<Omit<BCarouselProps, 'modelValue'>>(), {\n  background: undefined,\n  controls: false,\n  controlsNextText: 'Next',\n  controlsPrevText: 'Previous',\n  fade: false,\n  id: undefined,\n  imgHeight: undefined,\n  imgWidth: undefined,\n  indicators: false,\n  indicatorsButtonLabel: 'Slide',\n  interval: 5000,\n  labelIndicators: 'Select a slide to display',\n  keyboard: true,\n  noAnimation: false,\n  noHoverPause: false,\n  noTouch: false,\n  noWrap: false,\n  ride: false,\n  rideReverse: false,\n  touchThreshold: 50,\n})\nconst props = useDefaults(_props, 'BCarousel')\n\nconst emit = defineEmits<{\n  'slide': [value: BvCarouselEvent]\n  'slid': [value: BvCarouselEvent]\n  'prev-click': [value: MouseEvent]\n  'next-click': [value: MouseEvent]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel')\nconst buttonOwnership = useId(undefined, 'carousel-button-ownership')\n\nconst modelValue = defineModel<Exclude<BCarouselProps['modelValue'], undefined>>({default: 0})\n\nconst slideValues = useTemplateRef<InstanceType<typeof BCarouselSlide>[]>('_slideValues')\n\nconst touchThresholdNumber = useToNumber(() => props.touchThreshold)\nconst slideInterval = ref<Numberish | null>(null)\nonMounted(() => {\n  slideInterval.value =\n    slideValues.value?.find((slid) => slid.$el.style.display !== 'none')?._interval ?? null\n})\nconst intervalNumber = useToNumber(() => slideInterval.value ?? props.interval)\n\nconst isTransitioning = ref(false)\nconst rideStarted = ref(false)\nconst direction = ref(true)\nconst relatedTarget = useTemplateRef<HTMLElement>('_relatedTarget')\nconst element = useTemplateRef<HTMLElement>('_element')\nconst previousModelValue = ref(modelValue.value)\n\nconst isHovering = useElementHover(element)\n\n// Class carousel-item is a static property\n// If you make it static, the direction can be reversed -- properly (atm it does the carousel-item-${} logic backwards for entering, a weird hack)\n// So all that would be great. However, when you do this, it will break the transition flow. Something about it breaks and I'm not sure why!\n// Try it by removing carousel-item from below and making `!direction.value` => `direction.value` for enter\n// Then reviewing the behavior\nconst enterClasses = computed(\n  () =>\n    `carousel-item carousel-item-${!direction.value ? 'next' : 'prev'} carousel-item-${\n      !direction.value ? 'start' : 'end'\n    }`\n)\nconst leaveClasses = computed(\n  () => `carousel-item active carousel-item-${direction.value ? 'start' : 'end'}`\n)\n\nconst {pause, resume} = useIntervalFn(\n  () => {\n    if (props.rideReverse) {\n      prev()\n      return\n    }\n    next()\n  },\n  intervalNumber,\n  {immediate: props.ride === 'carousel'}\n)\n\nconst isRiding = computed(\n  () => (props.ride === true && rideStarted.value === true) || props.ride === 'carousel'\n)\nconst slides = computed(() => getSlotElements(slots.default, 'BCarouselSlide'))\nconst computedClasses = computed(() => ({'carousel-fade': props.fade}))\n\nconst buildBvCarouselEvent = (event: 'slid' | 'slide') =>\n  new BvCarouselEvent(event, {\n    componentId: computedId.value,\n    cancelable: false,\n    target: element.value,\n    direction: direction.value ? 'right' : 'left',\n    from: previousModelValue.value,\n    to: modelValue.value,\n    relatedTarget: relatedTarget.value?.children[modelValue.value] ?? null,\n  })\n\nconst goToValue = (value: number): void => {\n  if (isTransitioning.value === true) return\n\n  if (props.ride === true) {\n    rideStarted.value = true\n  }\n  if (isRiding.value === true) {\n    resume()\n  }\n  direction.value = value < modelValue.value ? false : true\n  if (value >= slides.value.length) {\n    if (props.noWrap) return\n    modelValue.value = 0\n    return\n  }\n  if (value < 0) {\n    if (props.noWrap) return\n    modelValue.value = slides.value.length - 1\n    return\n  }\n  previousModelValue.value = modelValue.value\n  modelValue.value = value\n}\n\nconst prev = (): void => {\n  goToValue(modelValue.value - 1)\n}\nconst next = (): void => {\n  goToValue(modelValue.value + 1)\n}\n\nconst onKeydown = (fn: () => void) => {\n  if (props.keyboard === false) return\n  fn()\n}\n\nconst onMouseEnter = () => {\n  if (props.noHoverPause) return\n  pause()\n}\nconst onMouseLeave = () => {\n  if (!isRiding.value) return\n  resume()\n}\n\nconst {lengthX} = useSwipe(element, {\n  passive: true,\n  onSwipeStart() {\n    if (props.noTouch === true) return\n    pause()\n  },\n  onSwipeEnd() {\n    if (props.noTouch === true) return\n    const resumeRiding = () => {\n      if (isRiding.value === false) return\n      resume()\n    }\n    if (lengthX.value >= touchThresholdNumber.value) {\n      next()\n      resumeRiding()\n      return\n    }\n    if (lengthX.value <= -touchThresholdNumber.value) {\n      prev()\n      resumeRiding()\n    }\n  },\n})\n\nconst onBeforeLeave = () => {\n  emit('slide', buildBvCarouselEvent('slide'))\n  isTransitioning.value = true\n}\nconst onAfterLeave = () => {\n  emit('slid', buildBvCarouselEvent('slid'))\n  isTransitioning.value = false\n}\n// carousel-item class is removed from the slide during the transition,\n// as is included within enter classes.\n// The first slide recovers carousel-item class,\nconst onAfterEnter = (el: Readonly<Element>) => {\n  if (modelValue.value !== 0) {\n    el.classList.add('carousel-item')\n  }\n}\nconst onEnter = (el: Readonly<Element>) => {\n  slideInterval.value = slideValues.value?.find((slid) => slid.$el === el)?._interval ?? null\n}\n\nonKeyStroke(\n  'ArrowLeft',\n  () => {\n    onKeydown(prev)\n  },\n  {target: element}\n)\nonKeyStroke(\n  'ArrowRight',\n  () => {\n    onKeydown(next)\n  },\n  {target: element}\n)\n\nwatch(\n  () => props.ride,\n  () => {\n    rideStarted.value = false\n  }\n)\n\nwatch(isHovering, (newValue) => {\n  if (newValue) {\n    onMouseEnter()\n    return\n  }\n  onMouseLeave()\n})\n\nconst onClickPrev = (event: MouseEvent) => {\n  emit('prev-click', event)\n  if (event.defaultPrevented) return\n  prev()\n}\nconst onClickNext = (event: MouseEvent) => {\n  emit('next-click', event)\n  if (event.defaultPrevented) return\n  next()\n}\n\ndefineExpose({\n  next,\n  pause,\n  prev,\n  resume,\n})\n\nprovide(carouselInjectionKey, {\n  background: toRef(() => props.background),\n  width: toRef(() => props.imgWidth),\n  height: toRef(() => props.imgHeight),\n})\n</script>\n","<template>\n  <div :id=\"computedId\" class=\"carousel-item\" :style=\"computedStyle\">\n    <slot name=\"img\">\n      <BImg\n        class=\"d-block w-100\"\n        :alt=\"props.imgAlt\"\n        :srcset=\"props.imgSrcset\"\n        :src=\"props.imgSrc\"\n        :width=\"props.imgWidth || parentData?.width.value\"\n        :height=\"props.imgHeight || parentData?.height.value\"\n        :blank=\"props.imgBlank\"\n        :blank-color=\"props.imgBlankColor\"\n      />\n    </slot>\n    <component\n      :is=\"props.contentTag\"\n      v-if=\"hasContent\"\n      class=\"carousel-caption\"\n      :class=\"computedContentClasses\"\n    >\n      <component :is=\"props.captionTag\" v-if=\"hasCaption\">\n        <slot name=\"caption\">\n          <span>{{ props.caption }}</span>\n        </slot>\n      </component>\n      <component :is=\"props.textTag\" v-if=\"hasText\">\n        <slot name=\"text\">\n          <span>{{ props.text }}</span>\n        </slot>\n      </component>\n      <slot />\n    </component>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type CSSProperties, inject, toRef} from 'vue'\nimport type {BCarouselSlideProps} from '../../types/ComponentProps'\nimport {carouselInjectionKey} from '../../utils/keys'\nimport BImg from '../BImg/BImg.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useId} from '../../composables/useId'\n\nconst _props = withDefaults(defineProps<BCarouselSlideProps>(), {\n  background: undefined,\n  caption: undefined,\n  captionTag: 'h3',\n  contentTag: 'div',\n  contentVisibleUp: undefined,\n  id: undefined,\n  imgAlt: undefined,\n  imgBlank: false,\n  imgBlankColor: 'transparent',\n  imgHeight: undefined,\n  imgSrc: undefined,\n  imgSrcset: undefined,\n  imgWidth: undefined,\n  interval: undefined,\n  text: undefined,\n  textTag: 'p',\n})\nconst props = useDefaults(_props, 'BCarouselSlide')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  caption?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  img?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  text?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel-slide')\nconst parentData = inject(carouselInjectionKey, null)\n\nconst hasText = computed(() => props.text || !isEmptySlot(slots.text))\nconst hasCaption = computed(() => props.caption || !isEmptySlot(slots.caption))\nconst hasContent = computed(() => hasText.value || hasCaption.value || !isEmptySlot(slots.default))\n\nconst computedStyle = computed<CSSProperties>(() => ({\n  background: `${\n    props.background || parentData?.background.value || 'rgb(171, 171, 171)'\n  } none repeat scroll 0% 0%`,\n}))\n\nconst computedContentClasses = computed(() => ({\n  'd-none': props.contentVisibleUp !== undefined,\n  [`d-${props.contentVisibleUp}-block`]: props.contentVisibleUp !== undefined,\n}))\n\ndefineExpose({\n  _interval: toRef(() => props.interval),\n  _id: computedId,\n})\n</script>\n"],"names":["slot","_useSlots","_useModel"],"mappings":"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"}