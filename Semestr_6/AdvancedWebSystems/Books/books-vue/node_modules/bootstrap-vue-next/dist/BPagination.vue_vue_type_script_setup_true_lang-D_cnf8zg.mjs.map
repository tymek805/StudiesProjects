{"version":3,"file":"BPagination.vue_vue_type_script_setup_true_lang-D_cnf8zg.mjs","sources":["../src/components/BPagination/BPagination.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"pagination\"\n    :class=\"computedWrapperClasses\"\n    role=\"menubar\"\n    :aria-disabled=\"props.disabled\"\n    :aria-label=\"props.ariaLabel || undefined\"\n    @keydown=\"handleKeyNav\"\n  >\n    <li v-for=\"page in pages\" :key=\"`page-${page.id}`\" v-bind=\"page.li\" ref=\"_pageElements\">\n      <span\n        v-if=\"page.id === FIRST_ELLIPSIS || page.id === LAST_ELLIPSIS\"\n        v-bind=\"ellipsisProps.span\"\n      >\n        <slot name=\"ellipsis-text\">\n          {{ props.ellipsisText || '...' }}\n        </slot>\n      </span>\n      <component v-bind=\"page.button\" :is=\"page.button.is\" v-else @click=\"page.clickHandler\">\n        <slot\n          :name=\"page.text.name\"\n          :disabled=\"page.text.disabled\"\n          :page=\"page.text.page\"\n          :index=\"page.text.index\"\n          :active=\"page.text.active\"\n          :content=\"page.text.value\"\n        >\n          {{ page.text.value }}\n        </slot>\n      </component>\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvEvent} from '../../utils'\nimport {computed, nextTick, useTemplateRef, watch} from 'vue'\nimport type {BPaginationProps} from '../../types/ComponentProps'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ClassValue} from '../../types/AnyValuedAttributes'\nimport {CODE_DOWN, CODE_LEFT, CODE_RIGHT, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {getActiveElement} from '../../utils/dom'\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3\n\nconst FIRST_BUTTON = -1\nconst PREV_BUTTON = -2\nconst NEXT_BUTTON = -3\nconst LAST_BUTTON = -4\nconst FIRST_ELLIPSIS = -5\nconst LAST_ELLIPSIS = -6\n\n// This is necessary because type inference isn't succeeding for the pages computed\ninterface PageButton {\n  id: number\n  li: Record<string, unknown>\n  button: Record<string, unknown>\n  text: Record<string, unknown>\n  clickHandler: (e: Readonly<MouseEvent>) => void\n}\n\nconst _props = withDefaults(defineProps<Omit<BPaginationProps, 'modelValue'>>(), {\n  align: 'start',\n  ariaControls: undefined,\n  ariaLabel: 'Pagination',\n  disabled: false,\n  ellipsisClass: undefined,\n  ellipsisText: '\\u2026',\n  firstClass: undefined,\n  firstNumber: false,\n  firstText: '\\u00AB',\n  noEllipsis: false,\n  noGotoEndButtons: false,\n  labelFirstPage: 'Go to first page',\n  labelLastPage: 'Go to last page',\n  labelNextPage: 'Go to next page',\n  labelPage: 'Go to page',\n  labelPrevPage: 'Go to previous page',\n  lastClass: undefined,\n  lastNumber: false,\n  lastText: '\\u00BB',\n  limit: 5,\n  nextClass: undefined,\n  nextText: '\\u203A',\n  pageClass: undefined,\n  perPage: DEFAULT_PER_PAGE,\n  pills: false,\n  prevClass: undefined,\n  prevText: '\\u2039',\n  size: undefined,\n  totalRows: DEFAULT_TOTAL_ROWS,\n})\nconst props = useDefaults(_props, 'BPagination')\n\nconst emit = defineEmits<{\n  'page-click': [event: BvEvent, pageNumber: number]\n}>()\n\nconst modelValue = defineModel<Exclude<BPaginationProps['modelValue'], undefined>>({\n  default: 1,\n})\n\nconst pageElements = useTemplateRef<HTMLLIElement[]>('_pageElements')\n\nconst limitNumber = useToNumber(() => props.limit, {nanToZero: true, method: 'parseInt'})\nconst perPageNumber = useToNumber(() => props.perPage, {nanToZero: true, method: 'parseInt'})\nconst totalRowsNumber = useToNumber(() => props.totalRows, {nanToZero: true, method: 'parseInt'})\nconst modelValueNumber = useToNumber(modelValue, {nanToZero: true, method: 'parseInt'})\n\nconst perPageSanitized = computed(() => Math.max(perPageNumber.value || DEFAULT_PER_PAGE, 1))\nconst totalRowsSanitized = computed(() => Math.max(totalRowsNumber.value || DEFAULT_TOTAL_ROWS, 0))\n// Use Active to on page-item to denote active tab\nconst numberOfPages = computed(() => Math.ceil(totalRowsSanitized.value / perPageSanitized.value))\nconst computedFill = computed(() => props.align === 'fill')\n// This doesn't use the computedFill util because TS cannot infer that it would never be 'fill'\nconst justifyAlign = computed(() => (props.align === 'fill' ? 'start' : props.align))\n\nconst alignment = useAlignment(justifyAlign)\n\nconst isActivePage = (pageNumber: number) => pageNumber === computedModelValue.value\nconst getTabIndex = (num: number) => (props.disabled ? null : isActivePage(num) ? '0' : '-1')\n\nconst checkDisabled = (num: number) =>\n  props.disabled ||\n  isActivePage(num) ||\n  computedModelValue.value < 1 ||\n  // Check if the number is out of bounds\n  num < 1 ||\n  num > numberOfPages.value\n\nconst firstDisabled = computed(() => checkDisabled(1))\nconst prevDisabled = computed(() => checkDisabled(computedModelValue.value - 1))\nconst lastDisabled = computed(() => checkDisabled(numberOfPages.value))\nconst nextDisabled = computed(() => checkDisabled(computedModelValue.value + 1))\n\nconst getBaseButtonProps = ({\n  page,\n  classVal,\n  disabled,\n  slotName,\n  textValue,\n  tabIndex,\n  label,\n  position,\n  isActive,\n  role,\n  hidden,\n  isSmHidden,\n}: {\n  page: number\n  disabled: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  tabIndex?: string\n  label?: string\n  position?: number\n  isActive?: boolean\n  role?: string\n  hidden?: boolean\n  isSmHidden?: boolean\n}) => ({\n  li: {\n    'class': [\n      'page-item',\n      {\n        'active': isActive,\n        disabled,\n        'bv-d-sm-down-none': isSmHidden,\n        'flex-fill': computedFill.value,\n        'd-flex': computedFill.value && !disabled,\n      },\n      classVal,\n    ],\n    role,\n    'aria-hidden': hidden,\n  },\n  button: {\n    'is': disabled ? 'span' : 'button',\n    'class': ['page-link', 'text-center', {'flex-grow-1': !disabled && computedFill.value}],\n    'aria-label': label,\n    'aria-controls': props.ariaControls || undefined,\n    'aria-disabled': disabled ? true : undefined,\n    'aria-posinset': position,\n    'aria-setsize': position ? numberOfPages.value : undefined,\n    'role': 'menuitem',\n    'type': disabled ? undefined : 'button',\n    'tabindex': disabled ? undefined : tabIndex,\n  },\n  text: {\n    name: slotName,\n    active: isActive,\n    value: textValue ?? page,\n    page,\n    disabled,\n    index: page - 1,\n    content: textValue ? undefined : page,\n  },\n  clickHandler: (e: Readonly<MouseEvent>) => pageClick(e, page),\n})\n\nconst getButtonProps = ({\n  page,\n  classVal,\n  disabled,\n  slotName,\n  textValue,\n  label,\n}: {\n  page: number\n  disabled: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  label: string\n}) => getBaseButtonProps({page, classVal, disabled, slotName, textValue, label, tabIndex: '-1'})\n\nconst getPageButtonProps = (page: number, isSmHidden?: boolean) =>\n  getBaseButtonProps({\n    page,\n    disabled: props.disabled,\n    classVal: props.pageClass,\n    slotName: 'page',\n    label: props.labelPage ? `${props.labelPage} ${page}` : undefined,\n    tabIndex: getTabIndex(page) ?? undefined,\n    position: page,\n    isActive: isActivePage(page),\n    isSmHidden,\n  })\n\nconst firstButtonProps = computed(() =>\n  getButtonProps({\n    page: 1,\n    disabled: firstDisabled.value,\n    classVal: props.firstClass,\n    slotName: 'first-text',\n    textValue: props.firstText,\n    label: props.labelFirstPage,\n  })\n)\nconst prevButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.max(computedModelValue.value - 1, 1),\n    disabled: prevDisabled.value,\n    classVal: props.prevClass,\n    slotName: 'prev-text',\n    textValue: props.prevText,\n    label: props.labelPrevPage,\n  })\n)\nconst nextButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.min(computedModelValue.value + 1, numberOfPages.value),\n    disabled: nextDisabled.value,\n    classVal: props.nextClass,\n    slotName: 'next-text',\n    textValue: props.nextText,\n    label: props.labelNextPage,\n  })\n)\nconst lastButtonProps = computed(() =>\n  getButtonProps({\n    page: numberOfPages.value,\n    disabled: lastDisabled.value,\n    classVal: props.lastClass,\n    slotName: 'last-text',\n    textValue: props.lastText,\n    label: props.labelLastPage,\n  })\n)\n\nconst ellipsisProps = computed(() => ({\n  li: {\n    class: [\n      'page-item',\n      'disabled',\n      'text-center',\n      'bv-d-sm-down-none',\n      computedFill.value ? 'flex-fill' : '',\n      props.ellipsisClass,\n    ],\n    role: 'separator',\n  },\n  span: {\n    class: ['page-link'],\n  },\n}))\n\nconst computedWrapperClasses = computed(() => [\n  alignment.value,\n  {\n    [`pagination-${props.size}`]: props.size !== undefined,\n    'b-pagination-pills': props.pills,\n  },\n])\n\nconst pagination = computed(() => ({\n  pageSize: perPageSanitized.value,\n  totalRows: totalRowsNumber.value,\n  numberOfPages: numberOfPages.value,\n}))\n\nconst pageClick = (event: Readonly<MouseEvent>, pageNumber: number) => {\n  if (pageNumber === computedModelValue.value) return\n\n  const clickEvent = new BvEvent('page-click', {\n    cancelable: true,\n    target: event.target,\n  })\n  emit('page-click', clickEvent, pageNumber)\n\n  if (clickEvent.defaultPrevented) return\n\n  modelValue.value = pageNumber\n\n  //    nextTick(() => {\n  //  if (isVisible(target) && un_element.contains(target)) {\n  //  attemptFocus(target)\n  //} else {\n  //this.focusCurrent()\n  //}\n  // })\n}\n\nconst isDisabled = (el: HTMLButtonElement) => {\n  const isElement = !!(el && el.nodeType === Node.ELEMENT_NODE)\n  const hasAttr = isElement ? el.hasAttribute('disabled') : null\n  const hasClass = isElement && el.classList ? el.classList.contains('disabled') : false\n\n  return !isElement || el.disabled || hasAttr || hasClass\n}\n\nconst getButtons = () =>\n  pageElements.value\n    ?.map((page) => page.children[0] as HTMLButtonElement)\n    .filter((btn) => {\n      if (btn.getAttribute('display') === 'none') {\n        return false\n      }\n\n      const bcr = btn.getBoundingClientRect()\n\n      return !!(bcr && bcr.height > 0 && bcr.width > 0)\n    }) ?? []\n\nconst focusFirst = () => {\n  nextTick(() => {\n    const btn = getButtons().find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusPrev = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n\n    if (index > 0 && !isDisabled(buttons[index - 1])) {\n      buttons[index - 1]?.focus()\n    }\n  })\n}\n\nconst focusLast = () => {\n  nextTick(() => {\n    const btn = getButtons()\n      .reverse()\n      .find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusNext = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n\n    if (index < buttons.length - 1 && !isDisabled(buttons[index + 1])) {\n      buttons[index + 1]?.focus()\n    }\n  })\n}\n\nconst handleKeyNav = (event: KeyboardEvent) => {\n  const {code, shiftKey} = event\n\n  if (code === CODE_LEFT || code === CODE_UP) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusFirst()\n    } else {\n      focusPrev()\n    }\n  } else if (code === CODE_RIGHT || code === CODE_DOWN) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusLast()\n    } else {\n      focusNext()\n    }\n  }\n}\n\nconst computedModelValue = computed(() => {\n  const page = modelValueNumber.value || 1\n  return page > numberOfPages.value ? numberOfPages.value : page < 1 ? 1 : page\n})\n\nwatch(pagination, (oldValue, newValue) => {\n  if (newValue.pageSize !== oldValue.pageSize && newValue.totalRows === oldValue.totalRows) {\n    // If the page size changes, reset to page 1\n    modelValue.value = 1\n  }\n})\n\nconst noFirstButton = computed(() => (props.noGotoEndButtons && !props.firstNumber ? 1 : 0))\nconst noLastButton = computed(() => (props.noGotoEndButtons && !props.lastNumber ? 1 : 0))\nconst showFirstButton = computed(() => (noFirstButton.value ? 0 : 1))\nconst showLastButton = computed(() => (noLastButton.value ? 0 : 1))\nconst firstPage = computed(() => (props.firstNumber ? 1 : 0))\nconst lastPage = computed(() => (props.lastNumber ? 1 : 0))\nconst halfLimit = computed(() => Math.floor(limitNumber.value / 2))\n\nconst pages = computed(() => {\n  const {value} = computedModelValue\n\n  const els = elements.value.map((p) => {\n    switch (p) {\n      case FIRST_BUTTON:\n        return {id: p, ...firstButtonProps.value}\n      case PREV_BUTTON:\n        return {id: p, ...prevButtonProps.value}\n      case NEXT_BUTTON:\n        return {id: p, ...nextButtonProps.value}\n      case LAST_BUTTON:\n        return {id: p, ...lastButtonProps.value}\n      case FIRST_ELLIPSIS:\n      case LAST_ELLIPSIS:\n        return {id: p, ...ellipsisProps.value}\n      default:\n        return {id: p, ...getPageButtonProps(p)}\n    }\n  })\n\n  if (numberOfPages.value > 3) {\n    if (value > numberOfPages.value - halfLimit.value - lastPage.value) {\n      const idx = 2 + showFirstButton.value\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n\n    if (value <= halfLimit.value + firstPage.value) {\n      const idx = els.length - (3 + showLastButton.value)\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n  }\n\n  return els as PageButton[]\n})\n\nconst elements = computed(() => {\n  // The idea here is to create an array of all the buttons on the page control.\n  // This way we can keep the invariants in one place and the template code just\n  // iterates over the array.\n\n  const pages = numberOfPages.value\n  const {value} = computedModelValue\n  const limit = limitNumber.value\n  const noEllipsis = props.noEllipsis || limit <= ELLIPSIS_THRESHOLD\n\n  // The first case is when all of the page buttons fit on the control, this is\n  //  the simplest case and the only one that will create an array smaller than\n  //  Limit + 4 - noEndButtons * 2 (the [first, last,] prev, next buttons)\n\n  if (pages < limit + firstPage.value + lastPage.value) {\n    return [\n      !firstPage.value && !noFirstButton.value ? FIRST_BUTTON : null,\n      PREV_BUTTON,\n      ...Array.from({length: pages}, (_, index) => index + 1),\n      NEXT_BUTTON,\n      !lastPage.value && !noLastButton.value ? LAST_BUTTON : null,\n    ].filter((x) => x !== null) as number[]\n  }\n\n  // All of the remaining cases result in an array that is exactly limit + 4 - noEndButtons * 2 in length, so create\n  //  the array upfront and set up the beginning and end buttons, then fill the rest for each case\n\n  const buttons = Array.from({length: limit + 4 - (noFirstButton.value + noLastButton.value)})\n  if (!noFirstButton.value) {\n    if (!firstPage.value) {\n      buttons[0] = FIRST_BUTTON\n      buttons[1] = PREV_BUTTON\n    } else {\n      buttons[0] = PREV_BUTTON\n      buttons[1] = 1\n    }\n  } else {\n    buttons[0] = PREV_BUTTON\n  }\n\n  if (!noLastButton.value) {\n    if (!lastPage.value) {\n      buttons[buttons.length - 1] = LAST_BUTTON\n      buttons[buttons.length - 2] = NEXT_BUTTON\n    } else {\n      buttons[buttons.length - 1] = NEXT_BUTTON\n      buttons[buttons.length - 2] = pages\n    }\n  } else {\n    buttons[buttons.length - 1] = NEXT_BUTTON\n  }\n\n  // The next case is where the page buttons start at the begginning, with\n  //  no ellipsis at the beginning, but one at the end\n\n  if (value <= halfLimit.value + firstPage.value) {\n    for (let index = 1; index <= limit; index++) {\n      buttons[index + 1 - noFirstButton.value] = index + firstPage.value\n    }\n\n    if (!noEllipsis) {\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  // And then we have the case where the page buttons go up to the end, with no\n  //  ellipsis at the end, but one at the beginning\n\n  if (value > pages - halfLimit.value - lastPage.value) {\n    const start = pages - (limit - 1) - lastPage.value\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - noFirstButton.value] = start + index\n    }\n\n    if (!noEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n    }\n  }\n\n  // Finally we have the case where we have ellipsis at both ends\n  if (!buttons[2]) {\n    // Is there a more elegant way to ceck that we're in the final case?\n    const start = value - Math.floor(limit / 2)\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - noFirstButton.value] = start + index\n    }\n\n    if (!noEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  //Enable sanity check for debugging purposes\n  // for (let i = 0; i < buttons.length; i++) {\n  //   if (!buttons[i]) {\n  //     // eslint-disable-next-line no-console\n  //     console.log(\n  //       `Failed: button == ${i}, limit=${limit}, pages=${pages}, firstPage=${firstPage}, lastPage=${lastPage}, value=${value}`\n  //     )\n  //   }\n  // }\n\n  return buttons.filter((x) => x !== null) as number[]\n})\n</script>\n\n<script lang=\"ts\">\nconst DEFAULT_PER_PAGE = 20\nconst DEFAULT_TOTAL_ROWS = 0\n</script>\n"],"names":["_useModel","pages"],"mappings":"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"}