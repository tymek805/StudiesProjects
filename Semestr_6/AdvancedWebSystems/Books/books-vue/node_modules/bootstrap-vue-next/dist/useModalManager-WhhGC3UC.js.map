{"version":3,"file":"useModalManager-WhhGC3UC.js","sources":["../src/composables/useModalManager.ts"],"sourcesContent":["import {getSSRHandler, tryOnScopeDispose, unrefElement} from '@vueuse/core'\nimport {\n  type ComponentInternalInstance,\n  computed,\n  getCurrentInstance,\n  inject,\n  type Ref,\n  toValue,\n  watch,\n} from 'vue'\nimport {modalManagerPluginKey} from '../utils/keys'\n\nconst modalOpenClassName = 'modal-open'\n\nexport const useSharedModalStack = () => {\n  const modalManagerPlugin = inject(modalManagerPluginKey)\n\n  /**\n   * Removes an item from both the stack and registry\n   */\n  const dispose = (modal: Readonly<ComponentInternalInstance>): void => {\n    modalManagerPlugin?.removeStack(modal)\n    modalManagerPlugin?.removeRegistry(modal)\n  }\n\n  const updateHTMLAttrs = getSSRHandler('updateHTMLAttrs', (selector, attribute, value) => {\n    const el =\n      typeof selector === 'string'\n        ? window?.document.querySelector(selector)\n        : unrefElement(selector)\n    if (!el) return\n\n    if (attribute === 'class') {\n      el.classList.toggle(modalOpenClassName, value === modalOpenClassName)\n    } else {\n      el.setAttribute(attribute, value)\n    }\n  })\n\n  tryOnScopeDispose(() => {\n    updateHTMLAttrs('body', 'class', '')\n  })\n\n  watch(\n    () => modalManagerPlugin?.countStack.value,\n    (newValue) => {\n      if (newValue === undefined) return\n      updateHTMLAttrs('body', 'class', newValue > 0 ? modalOpenClassName : '')\n    }\n  )\n\n  return {\n    ...modalManagerPlugin,\n    dispose,\n  }\n}\n\nexport const useModalManager = (modalOpen: Readonly<Ref<boolean>>, initialValue: boolean) => {\n  const {pushRegistry, pushStack, removeStack, stack, dispose, countStack} = useSharedModalStack()\n\n  const currentModal = getCurrentInstance()\n\n  if (!currentModal || currentModal.type.__name !== 'BModal') {\n    throw new Error('useModalManager must only use in BModal component')\n  }\n\n  pushRegistry?.(currentModal)\n\n  tryOnScopeDispose(() => {\n    dispose(currentModal)\n  })\n\n  const setInStack = (newValue: boolean, oldValue: boolean) => {\n    if (newValue) {\n      pushStack?.(currentModal)\n    } else if (oldValue && !newValue) {\n      removeStack?.(currentModal)\n    }\n  }\n\n  // (initialValue, initialValue) is meant to always only ever trigger the first `if (newValue) {` block. The other block is skipped _always_\n  setInStack(initialValue, initialValue)\n\n  watch(modalOpen, setInStack)\n\n  return {\n    activePosition: computed(() =>\n      stack?.value.findIndex((el) => toValue(el.exposed?.id) === toValue(currentModal.exposed?.id))\n    ),\n    activeModalCount: countStack,\n    stackWithoutSelf: computed(\n      () =>\n        stack?.value.filter(\n          (el) => toValue(el.exposed?.id) !== toValue(currentModal.exposed?.id)\n        ) ?? []\n    ),\n  }\n}\n"],"names":["modalOpenClassName","useSharedModalStack","modalManagerPlugin","inject","modalManagerPluginKey","updateHTMLAttrs","getSSRHandler","selector","attribute","value","el","window","document","querySelector","unrefElement","classList","toggle","setAttribute","tryOnScopeDispose","vue","watch","countStack","newValue","dispose","modal","removeStack","removeRegistry","modalOpen","initialValue","pushRegistry","pushStack","stack","currentModal","getCurrentInstance","type","__name","Error","setInStack","oldValue","activePosition","computed","findIndex","toValue","_a","exposed","id","_b","activeModalCount","stackWithoutSelf","filter"],"mappings":"sIAYMA,EAAqB,aAEdC,EAAsB,KAC3B,MAAAC,EAAqBC,SAAOC,yBAU5BC,EAAkBC,EAAAA,cAAc,mBAAmB,CAACC,EAAUC,EAAWC,KACvE,MAAAC,EACgB,iBAAbH,EACH,MAAAI,YAAA,EAAAA,OAAQC,SAASC,cAAcN,GAC/BO,EAAAA,aAAaP,GACdG,IAEa,UAAdF,EACFE,EAAGK,UAAUC,OAAOhB,EAAoBS,IAAUT,GAE/CU,EAAAO,aAAaT,EAAWC,GAAK,IAgB7B,OAZPS,EAAAA,mBAAkB,KACAb,EAAA,OAAQ,QAAS,GAAE,IAGrCc,EAAAC,OACE,UAAMlB,WAAoBmB,WAAWZ,QACpCa,SACkB,IAAbA,GACJjB,EAAgB,OAAQ,QAASiB,EAAW,EAAItB,EAAqB,GAAE,IAIpE,IACFE,EACHqB,QAjCeC,IACf,MAAAtB,GAAAA,EAAoBuB,YAAYD,GAChC,MAAAtB,GAAAA,EAAoBwB,eAAeF,EAAA,EAgCrC,0BAG6B,CAACG,EAAmCC,KAC3D,MAAAC,aAACA,YAAcC,EAAWL,YAAAA,EAAAM,MAAaA,UAAOR,EAASF,WAAAA,GAAcpB,IAErE+B,EAAeC,EAAAA,qBAErB,IAAKD,GAA6C,WAA7BA,EAAaE,KAAKC,OAC/B,MAAA,IAAIC,MAAM,qDAGH,MAAAP,GAAAA,EAAAG,GAEfd,EAAAA,mBAAkB,KAChBK,EAAQS,EAAY,IAGhB,MAAAK,EAAa,CAACf,EAAmBgB,KACjChB,EACU,MAAAQ,GAAAA,EAAAE,GACHM,IAAahB,IACR,MAAAG,GAAAA,EAAAO,GAAY,EASvB,OAJPK,EAAWT,EAAcA,GAEzBT,EAAAC,MAAMO,EAAWU,GAEV,CACLE,eAAgBC,EAAAA,UAAS,IACvB,MAAAT,OAAA,EAAAA,EAAOtB,MAAMgC,WAAW/B,YAAOgC,OAAAA,EAAAA,QAAQ,OAAAC,EAAGjC,EAAAkC,cAAS,EAAAD,EAAAE,MAAQH,EAAAA,QAAQ,OAAAI,EAAAd,EAAaY,cAAb,EAAAE,EAAsBD,GAAE,MAE7FE,iBAAkB1B,EAClB2B,iBAAkBR,EAAAA,UAChB,WACET,WAAOtB,MAAMwC,QACVvC,6BAAe,OAAAiC,EAAGjC,EAAAkC,cAAS,EAAAD,EAAAE,MAAQH,EAAAA,QAAQ,OAAAI,EAAAd,EAAaY,cAAb,EAAAE,EAAsBD,GAAE,MACjE,KAEX"}