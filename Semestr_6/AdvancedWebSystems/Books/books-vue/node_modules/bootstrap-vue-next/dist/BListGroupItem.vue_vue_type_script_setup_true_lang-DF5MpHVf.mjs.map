{"version":3,"file":"BListGroupItem.vue_vue_type_script_setup_true_lang-DF5MpHVf.mjs","sources":["../src/components/BListGroup/BListGroup.vue","../src/components/BListGroup/BListGroupItem.vue"],"sourcesContent":["<template>\n  <component :is=\"computedTag\" class=\"list-group\" :class=\"computedClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, toRef} from 'vue'\nimport {listGroupInjectionKey} from '../../utils/keys'\nimport type {BListGroupProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BListGroupProps>(), {\n  flush: false,\n  horizontal: false,\n  numbered: false,\n  tag: 'div',\n})\nconst props = useDefaults(_props, 'BListGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => {\n  const horizontal = props.flush ? false : props.horizontal\n  return {\n    'list-group-flush': props.flush,\n    'list-group-horizontal': horizontal === true,\n    [`list-group-horizontal-${horizontal}`]: typeof horizontal === 'string',\n    'list-group-numbered': props.numbered,\n  }\n})\nconst computedTag = computed(() => (props.numbered === true ? 'ol' : props.tag))\n\nprovide(listGroupInjectionKey, {\n  numbered: toRef(() => props.numbered),\n})\n</script>\n","<template>\n  <component\n    :is=\"tagComputed\"\n    class=\"list-group-item\"\n    :class=\"computedClasses\"\n    :aria-current=\"props.active ? true : undefined\"\n    :aria-disabled=\"props.disabled ? true : undefined\"\n    :target=\"isLink ? props.target : undefined\"\n    :href=\"!props.button ? props.href : undefined\"\n    :to=\"!props.button ? props.to : undefined\"\n    v-bind=\"computedAttrs\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, inject, useAttrs} from 'vue'\nimport type {BListGroupItemProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport BLink from '../BLink/BLink.vue'\nimport {listGroupInjectionKey} from '../../utils/keys'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\n\nconst _props = withDefaults(defineProps<BListGroupItemProps>(), {\n  action: false,\n  button: false,\n  tag: 'div',\n  // Link props\n  active: false, // Why is this active: false?\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  icon: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  stretched: false,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  variant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BListGroupItem')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst attrs = useAttrs()\n\nconst parentData = inject(listGroupInjectionKey, null)\n\nconst {computedLink} = useBLinkHelper(props)\n\nconst isLink = computed(() => !props.button && computedLink.value)\nconst tagComputed = computed(() =>\n  parentData?.numbered.value ? 'li' : props.button ? 'button' : !isLink.value ? props.tag : BLink\n)\n\nconst isAction = computed(\n  () =>\n    props.action ||\n    isLink.value ||\n    props.button ||\n    ['a', 'router-link', 'button', 'b-link'].includes(props.tag)\n)\n\nconst computedClasses = computed(() => ({\n  [`list-group-item-${props.variant}`]: props.variant !== null && props.variant !== undefined,\n  'list-group-item-action': isAction.value,\n  'active': props.active,\n  'disabled': props.disabled,\n}))\n\nconst computedAttrs = computed(() => {\n  const localAttrs = {} as {type?: string; disabled?: boolean}\n  if (props.button) {\n    if (!attrs || !attrs.type) {\n      // Add a type for button is one not provided in passed attributes\n      localAttrs.type = 'button'\n    }\n    if (props.disabled) {\n      // Set disabled attribute if button and disabled\n      localAttrs.disabled = true\n    }\n  }\n  return localAttrs\n})\n</script>\n"],"names":["BLink"],"mappings":";;;;;;;;;;;;;AAYA,UAAM,SAAS;AAMT,UAAA,QAAQ,YAAY,QAAQ,YAAY;AAOxC,UAAA,kBAAkB,SAAS,MAAM;AACrC,YAAM,aAAa,MAAM,QAAQ,QAAQ,MAAM;AACxC,aAAA;AAAA,QACL,oBAAoB,MAAM;AAAA,QAC1B,yBAAyB,eAAe;AAAA,QACxC,CAAC,yBAAyB,UAAU,EAAE,GAAG,OAAO,eAAe;AAAA,QAC/D,uBAAuB,MAAM;AAAA,MAC/B;AAAA,IAAA,CACD;AACK,UAAA,cAAc,SAAS,MAAO,MAAM,aAAa,OAAO,OAAO,MAAM,GAAI;AAE/E,YAAQ,uBAAuB;AAAA,MAC7B,UAAU,MAAM,MAAM,MAAM,QAAQ;AAAA,IAAA,CACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdD,UAAM,SAAS;AA4BT,UAAA,QAAQ,YAAY,QAAQ,gBAAgB;AAOlD,UAAM,QAAQ,SAAS;AAEjB,UAAA,aAAa,OAAO,uBAAuB,IAAI;AAErD,UAAM,EAAC,aAAA,IAAgB,eAAe,KAAK;AAE3C,UAAM,SAAS,SAAS,MAAM,CAAC,MAAM,UAAU,aAAa,KAAK;AACjE,UAAM,cAAc;AAAA,MAAS,OAC3B,yCAAY,SAAS,SAAQ,OAAO,MAAM,SAAS,WAAW,CAAC,OAAO,QAAQ,MAAM,MAAMA;AAAAA,IAC5F;AAEA,UAAM,WAAW;AAAA,MACf,MACE,MAAM,UACN,OAAO,SACP,MAAM,UACN,CAAC,KAAK,eAAe,UAAU,QAAQ,EAAE,SAAS,MAAM,GAAG;AAAA,IAC/D;AAEM,UAAA,kBAAkB,SAAS,OAAO;AAAA,MACtC,CAAC,mBAAmB,MAAM,OAAO,EAAE,GAAG,MAAM,YAAY,QAAQ,MAAM,YAAY;AAAA,MAClF,0BAA0B,SAAS;AAAA,MACnC,UAAU,MAAM;AAAA,MAChB,YAAY,MAAM;AAAA,IAAA,EAClB;AAEI,UAAA,gBAAgB,SAAS,MAAM;AACnC,YAAM,aAAa,CAAC;AACpB,UAAI,MAAM,QAAQ;AAChB,YAAI,CAAC,SAAS,CAAC,MAAM,MAAM;AAEzB,qBAAW,OAAO;AAAA,QAAA;AAEpB,YAAI,MAAM,UAAU;AAElB,qBAAW,WAAW;AAAA,QAAA;AAAA,MACxB;AAEK,aAAA;AAAA,IAAA,CACR;;;;;;;;;;;;;;;;;;"}