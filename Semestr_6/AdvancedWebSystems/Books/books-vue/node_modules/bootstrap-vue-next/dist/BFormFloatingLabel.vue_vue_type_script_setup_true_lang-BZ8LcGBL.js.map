{"version":3,"file":"BFormFloatingLabel.vue_vue_type_script_setup_true_lang-BZ8LcGBL.js","sources":["../src/components/BForm/BFormDatalist.vue","../src/components/BForm/BFormFloatingLabel.vue"],"sourcesContent":["<template>\n  <datalist :id=\"computedId\">\n    <slot name=\"first\" />\n    <BFormSelectOption\n      v-for=\"(option, index) in normalizedOptsWrapper\"\n      :key=\"index\"\n      v-bind=\"option\"\n    >\n      <slot name=\"option\" v-bind=\"option\">\n        {{ option.text }}\n      </slot>\n    </BFormSelectOption>\n    <slot />\n  </datalist>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type {BFormDatalistProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport BFormSelectOption from '../BFormSelect/BFormSelectOption.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useFormSelect} from '../../composables/useFormSelect'\nimport type {SelectOption} from '../../types/SelectTypes'\n\nconst _props = withDefaults(defineProps<BFormDatalistProps>(), {\n  disabled: false,\n  disabledField: 'disabled',\n  id: undefined,\n  options: () => [],\n  textField: 'text',\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormDatalist')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  first?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  option: (props: SelectOption<T>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'datalist')\n\nconst {normalizedOptions, isComplex} = useFormSelect(\n  () => props.options,\n  computed(() => ({...props, optionsField: 'options', labelField: 'label'}))\n)\n\nconst normalizedOptsWrapper = computed(\n  () =>\n    // Datalist doesn't support complex options\n    normalizedOptions.value.filter((opt) => !isComplex(opt)) as readonly SelectOption<T>[]\n)\n</script>\n","<template>\n  <div class=\"form-floating\">\n    <slot />\n    <label :for=\"props.labelFor\">\n      <slot name=\"label\">\n        {{ props.label }}\n      </slot>\n    </label>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormFloatingLabelProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BFormFloatingLabelProps>(), {\n  label: undefined,\n  labelFor: undefined,\n  text: undefined,\n})\nconst props = useDefaults(_props, 'BFormFloatingLabel')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  label?: (props: Record<string, never>) => any\n}>()\n</script>\n"],"names":["_props","__props","props","useDefaults","computedId","useId","id","normalizedOptions","isComplex","useFormSelect","options","computed","optionsField","labelField","normalizedOptsWrapper","value","filter","opt"],"mappings":"mWAyBA,MAAMA,EAASC,EAQTC,EAAQC,EAAAA,YAAYH,EAAQ,iBAW5BI,EAAaC,EAAAA,OAAM,IAAMH,EAAMI,IAAI,aAEnCC,kBAACA,EAAAC,UAAmBA,GAAaC,EAAAA,eACrC,IAAMP,EAAMQ,SACZC,EAAAA,UAAS,KAAA,IAAWT,EAAOU,aAAc,UAAWC,WAAY,aAG5DC,EAAwBH,EAAAA,UAC5B,IAEEJ,EAAkBQ,MAAMC,QAAQC,IAAST,EAAUS,wnBCvCvD,MAAMjB,EAASC,EAKTC,EAAQC,EAAAA,YAAYH,EAAQ"}