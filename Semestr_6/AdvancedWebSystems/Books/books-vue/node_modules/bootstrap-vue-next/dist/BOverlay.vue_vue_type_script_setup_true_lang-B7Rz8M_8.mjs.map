{"version":3,"file":"BOverlay.vue_vue_type_script_setup_true_lang-B7Rz8M_8.mjs","sources":["../src/components/BOverlay/BOverlay.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    :tag=\"props.wrapTag\"\n    class=\"b-overlay-wrap position-relative\"\n    :aria-busy=\"computedAriaBusy\"\n    :skip=\"props.noWrap\"\n  >\n    <slot />\n    <Transition\n      v-bind=\"fadeTransitions\"\n      enter-to-class=\"show\"\n      name=\"fade\"\n      @after-enter=\"emit('shown')\"\n      @after-leave=\"emit('hidden')\"\n    >\n      <component\n        :is=\"props.overlayTag\"\n        v-if=\"props.show\"\n        class=\"b-overlay\"\n        :class=\"overlayClasses\"\n        :style=\"overlayStyles\"\n        @click=\"emit('click', $event)\"\n      >\n        <div class=\"position-absolute\" :class=\"blurClasses\" :style=\"blurStyles\" />\n\n        <div class=\"position-absolute\" :style=\"spinWrapperStyles\">\n          <slot name=\"overlay\" v-bind=\"spinnerAttrs\">\n            <BSpinner v-if=\"!props.noSpinner\" v-bind=\"spinnerAttrs\" />\n          </slot>\n        </div>\n      </component>\n    </Transition>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BOverlayProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport type {BgColorVariant} from '../../types/ColorTypes'\nimport {useFadeTransition} from '../../composables/useTransitions'\n\nconst _props = withDefaults(defineProps<BOverlayProps>(), {\n  blur: '2px',\n  bgColor: undefined,\n  fixed: false,\n  noCenter: false,\n  noFade: false,\n  noSpinner: false,\n  noWrap: false,\n  opacity: 0.85,\n  overlayTag: 'div',\n  show: false,\n  spinnerSmall: false,\n  spinnerType: 'border',\n  spinnerVariant: undefined,\n  variant: 'light',\n  wrapTag: 'div',\n  zIndex: 10,\n  // RadiusElementExtendables props\n  rounded: false,\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\nconst props = useDefaults(_props, 'BOverlay')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n  hidden: []\n  shown: []\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  overlay?: (props: typeof spinnerAttrs.value) => any\n}>()\n\nconst positionStyles = {top: 0, left: 0, bottom: 0, right: 0} as const\n\nconst fadeTransitions = useFadeTransition(() => !props.noFade)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: props.rounded,\n  roundedTop: props.roundedTop,\n  roundedBottom: props.roundedBottom,\n  roundedStart: props.roundedStart,\n  roundedEnd: props.roundedEnd,\n}))\n\nconst computedAriaBusy = computed(() => (props.show ? true : null))\n\nconst spinnerAttrs = computed(() => ({\n  type: props.spinnerType,\n  variant: props.spinnerVariant,\n  small: props.spinnerSmall,\n}))\n\nconst overlayStyles = computed(() => ({\n  ...positionStyles,\n  zIndex: props.zIndex || 10,\n}))\n\nconst overlayClasses = computed(() => ({\n  'position-absolute': !props.noWrap || !props.fixed,\n  'position-fixed': props.noWrap && props.fixed,\n}))\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    bgVariant: props.variant !== null && !props.bgColor ? (props.variant as BgColorVariant) : null,\n  }))\n)\nconst blurClasses = computed(() => [colorClasses.value, radiusElementClasses.value])\n\nconst blurStyles = computed(() => ({\n  ...positionStyles,\n  opacity: props.opacity,\n  backgroundColor: props.bgColor || undefined,\n  backdropFilter: props.blur ? `blur(${props.blur})` : undefined,\n}))\n\nconst spinWrapperStyles = computed(() =>\n  props.noCenter\n    ? positionStyles\n    : {\n        top: '50%',\n        left: '50%',\n        transform: 'translateX(-50%) translateY(-50%)',\n      }\n)\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAM,SAAS;AAyBT,UAAA,QAAQ,YAAY,QAAQ,UAAU;AAE5C,UAAM,OAAO;AAaP,UAAA,iBAAiB,EAAC,KAAK,GAAG,MAAM,GAAG,QAAQ,GAAG,OAAO,EAAC;AAE5D,UAAM,kBAAkB,kBAAkB,MAAM,CAAC,MAAM,MAAM;AAEvD,UAAA,uBAAuB,wBAAwB,OAAO;AAAA,MAC1D,SAAS,MAAM;AAAA,MACf,YAAY,MAAM;AAAA,MAClB,eAAe,MAAM;AAAA,MACrB,cAAc,MAAM;AAAA,MACpB,YAAY,MAAM;AAAA,IAAA,EAClB;AAEF,UAAM,mBAAmB,SAAS,MAAO,MAAM,OAAO,OAAO,IAAK;AAE5D,UAAA,eAAe,SAAS,OAAO;AAAA,MACnC,MAAM,MAAM;AAAA,MACZ,SAAS,MAAM;AAAA,MACf,OAAO,MAAM;AAAA,IAAA,EACb;AAEI,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,GAAG;AAAA,MACH,QAAQ,MAAM,UAAU;AAAA,IAAA,EACxB;AAEI,UAAA,iBAAiB,SAAS,OAAO;AAAA,MACrC,qBAAqB,CAAC,MAAM,UAAU,CAAC,MAAM;AAAA,MAC7C,kBAAkB,MAAM,UAAU,MAAM;AAAA,IAAA,EACxC;AAEF,UAAM,eAAe;AAAA,MACnB,SAAS,OAAO;AAAA,QACd,WAAW,MAAM,YAAY,QAAQ,CAAC,MAAM,UAAW,MAAM,UAA6B;AAAA,MAAA,EAC1F;AAAA,IACJ;AACM,UAAA,cAAc,SAAS,MAAM,CAAC,aAAa,OAAO,qBAAqB,KAAK,CAAC;AAE7E,UAAA,aAAa,SAAS,OAAO;AAAA,MACjC,GAAG;AAAA,MACH,SAAS,MAAM;AAAA,MACf,iBAAiB,MAAM,WAAW;AAAA,MAClC,gBAAgB,MAAM,OAAO,QAAQ,MAAM,IAAI,MAAM;AAAA,IAAA,EACrD;AAEF,UAAM,oBAAoB;AAAA,MAAS,MACjC,MAAM,WACF,iBACA;AAAA,QACE,KAAK;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,MAAA;AAAA,IAEnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}