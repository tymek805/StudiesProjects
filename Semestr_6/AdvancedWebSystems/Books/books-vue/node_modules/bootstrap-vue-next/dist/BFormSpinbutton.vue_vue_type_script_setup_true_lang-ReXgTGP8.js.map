{"version":3,"file":"BFormSpinbutton.vue_vue_type_script_setup_true_lang-ReXgTGP8.js","sources":["../src/components/BFormSpinbutton/BFormSpinbutton.vue","../src/composables/useRtl.ts"],"sourcesContent":["<template>\n  <div\n    ref=\"_element\"\n    class=\"b-form-spinbutton form-control\"\n    :class=\"computedClasses\"\n    role=\"group\"\n    :lang=\"computedLocale\"\n    :tabindex=\"props.disabled ? undefined : '-1'\"\n    :title=\"props.ariaLabel\"\n    @click=\"focused = true\"\n  >\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.top.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.top.button\"\n        @mousedown=\"buttons.top.handler\"\n        @touchstart=\"buttons.top.handler\"\n      >\n        <svg v-bind=\"buttons.top.svg\">\n          <path v-bind=\"buttons.top.path\" />\n        </svg>\n      </button>\n    </slot>\n    <input\n      v-if=\"props.name && !props.disabled\"\n      key=\"hidden\"\n      type=\"hidden\"\n      :name=\"props.name\"\n      :form=\"props.form\"\n      :value=\"valueAsFixed\"\n    />\n    <output\n      :id=\"computedId\"\n      key=\"output\"\n      class=\"flex-grow-1\"\n      :class=\"computedSpinClasses\"\n      :dir=\"(isRtl ?? false) ? 'rtl' : 'ltr'\"\n      :tabindex=\"props.disabled ? undefined : '0'\"\n      role=\"spinbutton\"\n      aria-live=\"off\"\n      :aria-label=\"props.ariaLabel || undefined\"\n      :aria-invalid=\"\n        props.state === false || (!modelValue !== null && props.required) ? true : undefined\n      \"\n      :aria-required=\"props.required ? true : undefined\"\n      :aria-valuemin=\"computedMin\"\n      :aria-valuemax=\"computedMax\"\n      :aria-valuenow=\"modelValue !== null ? modelValue : undefined\"\n      :aria-valuetext=\"modelValue !== null ? computedFormatter(modelValue) : undefined\"\n    >\n      <bdi>\n        {{ (modelValue !== null ? computedFormatter(modelValue) : props.placeholder) || '' }}\n      </bdi>\n    </output>\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.bottom.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.bottom.button\"\n        @mousedown=\"buttons.bottom.handler\"\n        @touchstart=\"buttons.bottom.handler\"\n      >\n        <svg v-bind=\"buttons.bottom.svg\">\n          <path v-bind=\"buttons.bottom.path\" />\n        </svg>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport type {BFormSpinbuttonProps} from '../../types/ComponentProps'\nimport {eventOnOff, stopEvent} from '../../utils/event'\nimport {\n  CODE_DOWN,\n  CODE_END,\n  CODE_HOME,\n  CODE_PAGEDOWN,\n  CODE_PAGEUP,\n  CODE_UP,\n} from '../../utils/constants'\nimport {onKeyStroke, useFocus, useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useRtl} from '../../composables/useRtl'\nimport type {ButtonType} from '../../types/ButtonType'\n\nconst KEY_CODES = [CODE_UP, CODE_DOWN, CODE_HOME, CODE_END, CODE_PAGEUP, CODE_PAGEDOWN]\n\nconst _props = withDefaults(defineProps<Omit<BFormSpinbuttonProps, 'modelValue'>>(), {\n  ariaControls: undefined,\n  ariaLabel: undefined,\n  disabled: false,\n  form: undefined,\n  formatterFn: undefined,\n  id: undefined,\n  inline: false,\n  labelDecrement: 'Decrement',\n  labelIncrement: 'Increment',\n  locale: undefined,\n  max: defaultValues.max,\n  min: defaultValues.min,\n  name: undefined,\n  placeholder: undefined,\n  readonly: false,\n  repeatDelay: defaultValues.repeatDelay,\n  repeatInterval: defaultValues.repeatInterval,\n  repeatStepMultiplier: defaultValues.repeatMultiplier,\n  repeatThreshold: defaultValues.repeatThreshold,\n  required: false,\n  size: undefined,\n  state: null,\n  step: defaultValues.step,\n  vertical: false,\n  wrap: false,\n})\nconst props = useDefaults(_props, 'BFormSpinbutton')\n\nconst emit = defineEmits<{\n  change: [value: number | null]\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  decrement?: (props: {hasFocus: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  increment?: (props: {hasFocus: boolean}) => any\n}>()\n\nconst modelValue = defineModel<Exclude<BFormSpinbuttonProps['modelValue'], undefined>>({\n  default: null,\n})\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst {focused} = useFocus(element)\n\nconst computedId = useId(() => props.id, 'spinbutton')\n\nconst computedClasses = computed(() => ({\n  'disabled': props.disabled,\n  'readonly': props.readonly,\n  'focus': focused.value,\n  'd-inline-flex': props.inline || props.vertical,\n  'd-flex': !props.inline && !props.vertical,\n  'align-items-stretch': !props.vertical,\n  'flex-column': props.vertical,\n  [`form-control-${props.size}`]: props.size !== undefined,\n}))\n\nconst computedSpinClasses = computed(() => ({\n  'd-flex': props.vertical,\n  'align-self-center': !props.vertical,\n  'align-items-center': props.vertical,\n  'border-top': props.vertical,\n  'border-bottom': props.vertical,\n  'border-start': !props.vertical,\n  'border-end': !props.vertical,\n}))\n\n//non reactive properties\nlet $_autoDelayTimer: ReturnType<typeof setTimeout> | undefined\nlet $_autoRepeatTimer: ReturnType<typeof setTimeout> | undefined\nlet $_keyIsDown = false\n\n// const computedInline = computed(() => props.inline && !props.vertical)\n\n// const computedReadonly = computed(() => props.readonly && !props.disabled)\n\nconst stepNumber = useToNumber(() => props.step)\nconst computedStep = computed(() =>\n  Number.isNaN(stepNumber.value) ? defaultValues.step : stepNumber.value\n)\n\nconst minNumber = useToNumber(() => props.min)\nconst computedMin = computed(() =>\n  Number.isNaN(minNumber.value) ? defaultValues.min : minNumber.value\n)\n\nconst maxNumber = useToNumber(() => props.max)\nconst computedMax = computed(() => {\n  const step = computedStep.value\n  const min = computedMin.value\n  return Math.floor((maxNumber.value - min) / step) * step + min\n})\n\nconst repeatDelayNumber = useToNumber(() => props.repeatDelay, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedDelay = computed(() =>\n  repeatDelayNumber.value > 0 ? repeatDelayNumber.value : defaultValues.repeatDelay\n)\n\nconst repeatIntervalNumber = useToNumber(() => props.repeatInterval, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedInterval = computed(() =>\n  repeatIntervalNumber.value > 0 ? repeatIntervalNumber.value : defaultValues.repeatInterval\n)\n\nconst repeatThresholdNumber = useToNumber(() => props.repeatThreshold, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedThreshold = computed(() =>\n  Math.max(\n    Number.isNaN(repeatThresholdNumber.value)\n      ? defaultValues.repeatThreshold\n      : repeatThresholdNumber.value,\n    1\n  )\n)\n\nconst repeatStepMultiplierNumber = useToNumber(() => props.repeatStepMultiplier, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedStepMultiplier = computed(() =>\n  Math.max(\n    Number.isNaN(repeatStepMultiplierNumber.value)\n      ? defaultValues.repeatMultiplier\n      : repeatStepMultiplierNumber.value,\n    1\n  )\n)\n\nconst computedPrecision = computed(() => {\n  const step = computedStep.value\n  return Math.floor(step) === step ? 0 : (step.toString().split('.')[1] || '').length\n})\n\nconst computedMultiplier = computed(() => Math.pow(10, computedPrecision.value || 0))\n\nconst valueAsFixed = computed(() =>\n  modelValue.value === null ? '' : modelValue.value.toFixed(computedPrecision.value)\n)\n\nconst {isRtl, locale: globalLocale} = useRtl()\n\nconst computedLocale = computed(() => {\n  const loc = (props.locale ?? globalLocale?.value) || 'locale'\n  const locales = [loc]\n  const nf = new Intl.NumberFormat(locales)\n  return nf.resolvedOptions().locale\n})\n\nconst defaultFormatter = () =>\n  new Intl.NumberFormat(computedLocale.value, {\n    style: 'decimal',\n    useGrouping: false,\n    minimumIntegerDigits: 1,\n    minimumFractionDigits: computedPrecision.value,\n    maximumFractionDigits: computedPrecision.value,\n    notation: 'standard',\n  }).format\n\nconst computedFormatter = computed(() => props.formatterFn ?? defaultFormatter())\n\nconst stepValue = (direction: number) => {\n  // Sets a new incremented or decremented value, supporting optional wrapping\n  // Direction is either +1 or -1 (or a multiple thereof)\n  let {value} = modelValue\n  if (!props.disabled && value !== null) {\n    const step = computedStep.value * direction\n    const min = computedMin.value\n    const max = computedMax.value\n    const multiplier = computedMultiplier.value\n    const {wrap} = props\n    // We ensure that the value steps like a native input\n    value = Math.round((value - min) / step) * step + min + step\n    // We ensure that precision is maintained (decimals)\n    value = Math.round(value * multiplier) / multiplier\n    // Handle if wrapping is enabled\n    modelValue.value = value > max ? (wrap ? min : max) : value < min ? (wrap ? max : min) : value\n  }\n}\n\nconst stepUp = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = computedMin.value\n    return\n  }\n  stepValue(+1 * multiplier)\n}\n\nconst stepDown = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = props.wrap ? computedMax.value : computedMin.value\n    return\n  }\n  stepValue(-1 * multiplier)\n}\n\nonKeyStroke(\n  KEY_CODES,\n  (event) => {\n    const {code, altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    // https://w3c.github.io/aria-practices/#spinbutton\n    stopEvent(event, {immediatePropagation: true})\n    if ($_keyIsDown) {\n      // Keypress is already in progress\n      return\n    }\n\n    resetTimers()\n    if ([CODE_UP, CODE_DOWN].includes(code)) {\n      // The following use the custom auto-repeat handling\n\n      $_keyIsDown = true\n      if (code === CODE_UP) {\n        handleStepRepeat(event, stepUp)\n        return\n      }\n      if (code === CODE_DOWN) {\n        handleStepRepeat(event, stepDown)\n      }\n      return\n    }\n    // These use native OS key repeating\n    if (code === CODE_PAGEUP) {\n      stepUp(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_PAGEDOWN) {\n      stepDown(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_HOME) {\n      modelValue.value = computedMin.value\n      return\n    }\n    if (code === CODE_END) {\n      modelValue.value = computedMax.value\n    }\n  },\n  {target: element, eventName: 'keydown'}\n)\n\nonKeyStroke(\n  KEY_CODES,\n  (event: Readonly<KeyboardEvent>) => {\n    // Emit a change event when the keyup happens\n\n    const {altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    stopEvent(event, {immediatePropagation: true})\n    resetTimers()\n    $_keyIsDown = false\n    emit('change', modelValue.value)\n  },\n  {target: element, eventName: 'keyup'}\n)\n\n// takes in a mount or Keyboard Event\nconst handleStepRepeat = (event: Readonly<Event>, stepper: (step: number) => void) => {\n  const {type} = event || {}\n\n  if (!props.disabled && !props.readonly) {\n    if (isMouseEvent(event)) {\n      // We only respond to left (main === 0) button clicks\n      if (type === 'mousedown' && event.button) return\n    }\n    resetTimers()\n    // Step the counter initially\n    stepper(1)\n    const threshold = computedThreshold.value\n    const multiplier = computedStepMultiplier.value\n    const delay = computedDelay.value\n    const interval = computedInterval.value\n\n    // Initiate the delay/repeat interval\n    $_autoDelayTimer = setTimeout(() => {\n      let count = 0\n      $_autoRepeatTimer = setInterval(() => {\n        // After N initial repeats, we increase the incrementing step amount\n        // We do this to minimize screen reader announcements of the value\n        // (values are announced every change, which can be chatty for SR users)\n        // And to make it easer to select a value when the range is large\n        stepper(count < threshold ? 1 : multiplier)\n        count++\n      }, interval)\n    }, delay)\n  }\n}\n\nconst isMouseEvent = (evt: Readonly<Event>): evt is MouseEvent =>\n  evt.type === 'mouseup' || evt.type === 'mousedown'\n\nconst onMouseup: EventListener = (event: Readonly<Event>) => {\n  // `<body>` listener, only enabled when mousedown starts\n\n  if (isMouseEvent(event)) {\n    if (event.type === 'mouseup' && event.button) {\n      // Ignore non left button (main === 0) mouse button click\n      return\n    }\n  }\n\n  stopEvent(event, {immediatePropagation: true})\n  resetTimers()\n  setMouseup(false)\n  // Trigger the change event\n  emit('change', modelValue.value)\n}\n\nconst setMouseup = (on: boolean) => {\n  // Enable or disabled the body mouseup/touchend handlers\n  // Use try/catch to handle case when called server side\n  try {\n    eventOnOff(on, [document.body, 'mouseup', onMouseup, false])\n    eventOnOff(on, [document.body, 'touchend', onMouseup, false])\n  } catch {\n    /* empty */\n  }\n}\nconst resetTimers = () => {\n  clearTimeout($_autoDelayTimer)\n  clearInterval($_autoRepeatTimer)\n  $_autoDelayTimer = undefined\n  $_autoRepeatTimer = undefined\n}\n\nconst buttons = computed(() => {\n  const incrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-plus',\n      viewBox: '0 0 16 16',\n    },\n    path: {\n      d: 'M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z',\n    },\n  } as const\n\n  const decrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-dash',\n      viewBox: '0 0 16 16',\n    },\n    path: {d: 'M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z'},\n  } as const\n\n  const sharedButtonAttrs = {\n    'class': [{'py-0': !props.vertical}, 'btn', 'btn-sm', 'border-0', 'rounded-0'],\n    'tabindex': '-1',\n    'type': 'button' as ButtonType,\n    'disabled': props.disabled || props.readonly,\n    'aria-disabled': props.disabled || props.readonly ? true : undefined,\n    'aria-controls': computedId.value,\n  }\n\n  const sharedSvgAttrs = {\n    'aria-hidden': true,\n    'scale': focused.value ? 1.5 : 1.25,\n  }\n\n  const handler = (event: Readonly<Event>, stepper: (multiplier?: number) => void) => {\n    if (!props.disabled && !props.readonly) {\n      stopEvent(event, {immediatePropagation: true})\n      setMouseup(true)\n      // Since we `preventDefault()`, we must manually focus the button\n      // Though it's likely captured from the element click focus\n      focused.value = true\n      handleStepRepeat(event, stepper)\n    }\n  }\n\n  const incrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelIncrement || undefined,\n      'aria-keyshortcuts': 'ArrowUp',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...incrementSvgAttrs.svg,\n    },\n    path: {\n      ...incrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'increment',\n    },\n    handler: (e: Event) => handler(e, stepUp),\n  }\n\n  const decrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelDecrement || undefined,\n      'aria-keyshortcuts': 'ArrowDown',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...decrementSvgAttrs.svg,\n    },\n    path: {\n      ...decrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'decrement',\n    },\n    handler: (e: Readonly<Event>) => handler(e, stepDown),\n  }\n\n  return {\n    top: {\n      ...(props.vertical ? incrementAttrs : decrementAttrs),\n    },\n    bottom: {\n      ...(!props.vertical ? incrementAttrs : decrementAttrs),\n    },\n  }\n})\n</script>\n\n<script lang=\"ts\">\nconst defaultValues = {\n  min: 1,\n  max: 100,\n  step: 1,\n  repeatDelay: 500,\n  repeatInterval: 100,\n  repeatThreshold: 10,\n  repeatMultiplier: 4,\n} as const\n</script>\n","import {inject, onMounted, watch} from 'vue'\nimport {rtlPluginKey} from '../utils/keys'\n\nexport const useRtl = () => {\n  const rtlPlugin = inject(rtlPluginKey)\n\n  onMounted(() => {\n    // I can't think of a reason why one might want to destroy these if unmounted...\n    watch(\n      () => rtlPlugin?.locale.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('lang', newValue ?? '')\n      },\n      {immediate: true}\n    )\n\n    watch(\n      () => rtlPlugin?.isRtl.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('dir', (newValue ?? false) ? 'rtl' : 'ltr')\n      },\n      {immediate: true}\n    )\n  })\n\n  return {...rtlPlugin}\n}\n"],"names":["defaultValues","KEY_CODES","CODE_UP","CODE_DOWN","CODE_HOME","CODE_END","CODE_PAGEUP","CODE_PAGEDOWN","_props","__props","props","useDefaults","emit","__emit","modelValue","_useModel","element","useTemplateRef","focused","useFocus","computedId","useId","id","computedClasses","computed","disabled","readonly","focus","value","inline","vertical","size","computedSpinClasses","$_autoDelayTimer","$_autoRepeatTimer","$_keyIsDown","stepNumber","useToNumber","step","computedStep","Number","isNaN","minNumber","min","computedMin","maxNumber","max","computedMax","Math","floor","repeatDelayNumber","repeatDelay","nanToZero","method","computedDelay","repeatIntervalNumber","repeatInterval","computedInterval","repeatThresholdNumber","repeatThreshold","computedThreshold","repeatStepMultiplierNumber","repeatStepMultiplier","computedStepMultiplier","computedPrecision","toString","split","length","computedMultiplier","pow","valueAsFixed","toFixed","isRtl","locale","globalLocale","rtlPlugin","inject","rtlPluginKey","onMounted","vue","watch","newValue","document","documentElement","setAttribute","immediate","useRtl","computedLocale","locales","Intl","NumberFormat","resolvedOptions","computedFormatter","formatterFn","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","notation","format","stepValue","direction","multiplier","wrap","round","stepUp","stepDown","index","onKeyStroke","event","code","altKey","ctrlKey","metaKey","stopEvent","immediatePropagation","resetTimers","includes","handleStepRepeat","target","eventName","stepper","type","isMouseEvent","button","threshold","delay","interval","setTimeout","count","setInterval","evt","onMouseup","setMouseup","on","eventOnOff","body","clearTimeout","clearInterval","buttons","incrementSvgAttrs","xmlns","width","height","fill","class","viewBox","d","decrementSvgAttrs","sharedButtonAttrs","tabindex","sharedSvgAttrs","scale","handler","incrementAttrs","labelIncrement","svg","path","slot","name","e","decrementAttrs","labelDecrement","top","bottom"],"mappings":"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"}