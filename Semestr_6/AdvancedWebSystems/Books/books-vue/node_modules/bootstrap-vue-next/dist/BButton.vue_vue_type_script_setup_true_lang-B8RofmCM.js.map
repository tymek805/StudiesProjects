{"version":3,"file":"BButton.vue_vue_type_script_setup_true_lang-B8RofmCM.js","sources":["../src/components/BButton/BButton.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    ref=\"_element\"\n    class=\"btn\"\n    v-bind=\"linkProps\"\n    :class=\"computedClasses\"\n    :aria-disabled=\"computedAriaDisabled\"\n    :aria-pressed=\"isToggle ? pressedValue : null\"\n    :autocomplete=\"isToggle ? 'off' : null\"\n    :disabled=\"isButton ? props.disabled : null\"\n    :href=\"props.href\"\n    :rel=\"computedLink ? props.rel : null\"\n    :role=\"nonStandardTag || computedLink ? 'button' : null\"\n    :target=\"computedLink ? props.target : null\"\n    :type=\"isButton ? props.type : null\"\n    :to=\"!isButton ? props.to : null\"\n    @click=\"clicked\"\n  >\n    <slot v-if=\"props.loading\" name=\"loading\">\n      <template v-if=\"!props.loadingFill\">\n        {{ props.loadingText }}\n      </template>\n      <slot name=\"loading-spinner\">\n        <BSpinner\n          :small=\"props.size !== 'lg'\"\n          :label=\"props.loadingFill ? props.loadingText : undefined\"\n        />\n      </slot>\n    </slot>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport BLink from '../BLink/BLink.vue'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport {onKeyStroke} from '@vueuse/core'\nimport type {BButtonProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ColorVariant} from '../../types/ColorTypes'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading-spinner'?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<Omit<BButtonProps, 'pressed'>>(), {\n  loading: false,\n  loadingFill: false,\n  loadingText: 'Loading...',\n  pill: false,\n  size: 'md',\n  squared: false,\n  tag: 'button',\n  type: 'button',\n  // Link props\n  active: false, // Why is this active: false?\n  variant: 'secondary',\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  stretched: false,\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  routerTag: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  // End link props\n})\n\nconst props = useDefaults(_props, 'BButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst pressedValue = defineModel<BButtonProps['pressed']>('pressed', {default: undefined})\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active-class',\n  'exact-active-class',\n  'replace',\n  'routerComponentName',\n  'routerTag',\n])\n\nconst isToggle = computed(() => typeof pressedValue.value === 'boolean')\nconst isButton = computed(\n  () => props.tag === 'button' && props.href === undefined && props.to === undefined\n)\nconst isBLink = computed(() => props.to !== undefined)\nconst nonStandardTag = computed(() => (props.href !== undefined ? false : !isButton.value))\n\nconst linkProps = computed(() => (isBLink.value ? computedLinkProps.value : []))\nconst computedAriaDisabled = computed(() => {\n  if (props.href === '#' && props.disabled) return true\n\n  return nonStandardTag.value ? props.disabled : null\n})\n\nconst variantIsLinkType = computed(() => props.variant?.startsWith('link') || false)\nconst variantIsLinkTypeSubset = computed(() => props.variant?.startsWith('link-') || false)\nconst linkValueClasses = useLinkClasses(\n  computed(() => ({\n    ...(variantIsLinkType.value\n      ? {\n          icon: props.icon,\n          opacity: props.opacity,\n          opacityHover: props.opacityHover,\n          underlineOffset: props.underlineOffset,\n          underlineOffsetHover: props.underlineOffsetHover,\n          underlineOpacity: props.underlineOpacity,\n          underlineOpacityHover: props.underlineOpacityHover,\n          underlineVariant: props.underlineVariant,\n          variant:\n            variantIsLinkTypeSubset.value === true\n              ? (props.variant?.slice(5) as ColorVariant)\n              : null,\n        }\n      : undefined),\n  }))\n)\nconst computedClasses = computed(() => [\n  variantIsLinkType.value === true && computedLink.value === false\n    ? linkValueClasses.value\n    : undefined,\n  [`btn-${props.size}`],\n  {\n    [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n    'active': props.active || pressedValue.value,\n    'rounded-pill': props.pill,\n    'rounded-0': props.squared,\n    'disabled': props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (isBLink.value ? BLink : props.href ? 'a' : props.tag))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopPropagation()\n    return\n  }\n  emit('click', e)\n  if (isToggle.value) pressedValue.value = !pressedValue.value\n}\n\nonKeyStroke(\n  [' ', 'enter'],\n  (e) => {\n    if (props.href === '#') {\n      e.preventDefault()\n      element.value?.click()\n    }\n  },\n  {target: element}\n)\n</script>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","element","useTemplateRef","pressedValue","_useModel","computedLink","computedLinkProps","useBLinkHelper","isToggle","computed","value","isButton","tag","href","to","isBLink","nonStandardTag","linkProps","computedAriaDisabled","disabled","variantIsLinkType","_a","variant","startsWith","variantIsLinkTypeSubset","linkValueClasses","useLinkClasses","icon","opacity","opacityHover","underlineOffset","underlineOffsetHover","underlineOpacity","underlineOpacityHover","underlineVariant","slice","computedClasses","size","active","pill","squared","computedTag","BLink","clicked","e","preventDefault","stopPropagation","index","onKeyStroke","click","target"],"mappings":"y5CAsDA,MAAMA,EAASC,EAmCTC,EAAQC,EAAAA,YAAYH,EAAQ,WAE5BI,EAAOC,EAIPC,EAAUC,iBAA4B,YAEtCC,EAAeC,EAAAA,SAAoCR,EAAC,YAEpDS,aAACA,EAAcC,kBAAAA,GAAqBC,EAAAA,eAAeV,EAAO,CAC9D,eACA,qBACA,UACA,sBACA,cAGIW,EAAWC,EAAAA,UAAS,IAAoC,kBAAvBN,EAAaO,QAC9CC,EAAWF,EAAAA,UACf,IAAoB,WAAdZ,EAAMe,UAAmC,IAAff,EAAMgB,WAAmC,IAAbhB,EAAMiB,KAE9DC,EAAUN,EAAAA,UAAS,SAAmB,IAAbZ,EAAMiB,KAC/BE,EAAiBP,YAAS,SAAsB,IAAfZ,EAAMgB,OAA8BF,EAASD,QAE9EO,EAAYR,EAAAA,UAAS,IAAOM,EAAQL,MAAQJ,EAAkBI,MAAQ,KACtEQ,EAAuBT,EAAAA,UAAS,MACjB,MAAfZ,EAAMgB,OAAgBhB,EAAMsB,YAEzBH,EAAeN,MAAQb,EAAMsB,SAAW,QAG3CC,EAAoBX,YAAS,WAAY,OAAN,OAAMY,EAAAxB,EAAAyB,cAAS,EAAAD,EAAAE,WAAW,WAAW,CAAA,IACxEC,EAA0Bf,YAAS,WAAY,OAAN,OAAMY,EAAAxB,EAAAyB,cAAS,EAAAD,EAAAE,WAAW,YAAY,CAAA,IAC/EE,EAAmBC,EAAAA,eACvBjB,EAAAA,UAAS,WAAO,MAAA,IACVW,EAAkBV,MAClB,CACEiB,KAAM9B,EAAM8B,KACZC,QAAS/B,EAAM+B,QACfC,aAAchC,EAAMgC,aACpBC,gBAAiBjC,EAAMiC,gBACvBC,qBAAsBlC,EAAMkC,qBAC5BC,iBAAkBnC,EAAMmC,iBACxBC,sBAAuBpC,EAAMoC,sBAC7BC,iBAAkBrC,EAAMqC,iBACxBZ,SACoC,IAAlCE,EAAwBd,MACnB,OAAAW,IAAMC,cAAN,EAAAD,EAAec,MAAM,GACtB,WAER,EAAA,KAGFC,EAAkB3B,EAAAA,UAAS,IAAM,EACT,IAA5BW,EAAkBV,QAAyC,IAAvBL,EAAaK,MAC7Ce,EAAiBf,WACjB,EACJ,CAAC,OAAOb,EAAMwC,QACd,CACE,CAAC,OAAOxC,EAAMyB,WAA8B,OAAlBzB,EAAMyB,UAAsD,IAAlCE,EAAwBd,MAC5E4B,OAAUzC,EAAMyC,QAAUnC,EAAaO,MACvC,eAAgBb,EAAM0C,KACtB,YAAa1C,EAAM2C,QACnBrB,SAAYtB,EAAMsB,aAIhBsB,EAAchC,EAAAA,UAAS,IAAOM,EAAQL,MAAQgC,YAAQ7C,EAAMgB,KAAO,IAAMhB,EAAMe,MAE/E+B,EAAWC,IACf,GAAI/C,EAAMsB,SAGR,OAFAyB,EAAEC,sBACFD,EAAEE,kBAGJ/C,EAAK,QAAS6C,GACVpC,EAASE,QAAoBP,EAAAO,OAASP,EAAaO,MAAA,SAGzDqC,EAAAC,YACE,CAAC,IAAK,UACLJ,UACoB,MAAf/C,EAAMgB,OACR+B,EAAEC,iBACF,OAAAxB,EAAApB,EAAQS,QAAOW,EAAA4B,QAAM,GAGzB,CAACC,OAAQjD"}