{"version":3,"file":"BButton.vue_vue_type_script_setup_true_lang-ByjfGDl1.mjs","sources":["../src/components/BButton/BButton.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    ref=\"_element\"\n    class=\"btn\"\n    v-bind=\"linkProps\"\n    :class=\"computedClasses\"\n    :aria-disabled=\"computedAriaDisabled\"\n    :aria-pressed=\"isToggle ? pressedValue : null\"\n    :autocomplete=\"isToggle ? 'off' : null\"\n    :disabled=\"isButton ? props.disabled : null\"\n    :href=\"props.href\"\n    :rel=\"computedLink ? props.rel : null\"\n    :role=\"nonStandardTag || computedLink ? 'button' : null\"\n    :target=\"computedLink ? props.target : null\"\n    :type=\"isButton ? props.type : null\"\n    :to=\"!isButton ? props.to : null\"\n    @click=\"clicked\"\n  >\n    <slot v-if=\"props.loading\" name=\"loading\">\n      <template v-if=\"!props.loadingFill\">\n        {{ props.loadingText }}\n      </template>\n      <slot name=\"loading-spinner\">\n        <BSpinner\n          :small=\"props.size !== 'lg'\"\n          :label=\"props.loadingFill ? props.loadingText : undefined\"\n        />\n      </slot>\n    </slot>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport BLink from '../BLink/BLink.vue'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport {onKeyStroke} from '@vueuse/core'\nimport type {BButtonProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ColorVariant} from '../../types/ColorTypes'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading-spinner'?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<Omit<BButtonProps, 'pressed'>>(), {\n  loading: false,\n  loadingFill: false,\n  loadingText: 'Loading...',\n  pill: false,\n  size: 'md',\n  squared: false,\n  tag: 'button',\n  type: 'button',\n  // Link props\n  active: false, // Why is this active: false?\n  variant: 'secondary',\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  stretched: false,\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  routerTag: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  // End link props\n})\n\nconst props = useDefaults(_props, 'BButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst pressedValue = defineModel<BButtonProps['pressed']>('pressed', {default: undefined})\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active-class',\n  'exact-active-class',\n  'replace',\n  'routerComponentName',\n  'routerTag',\n])\n\nconst isToggle = computed(() => typeof pressedValue.value === 'boolean')\nconst isButton = computed(\n  () => props.tag === 'button' && props.href === undefined && props.to === undefined\n)\nconst isBLink = computed(() => props.to !== undefined)\nconst nonStandardTag = computed(() => (props.href !== undefined ? false : !isButton.value))\n\nconst linkProps = computed(() => (isBLink.value ? computedLinkProps.value : []))\nconst computedAriaDisabled = computed(() => {\n  if (props.href === '#' && props.disabled) return true\n\n  return nonStandardTag.value ? props.disabled : null\n})\n\nconst variantIsLinkType = computed(() => props.variant?.startsWith('link') || false)\nconst variantIsLinkTypeSubset = computed(() => props.variant?.startsWith('link-') || false)\nconst linkValueClasses = useLinkClasses(\n  computed(() => ({\n    ...(variantIsLinkType.value\n      ? {\n          icon: props.icon,\n          opacity: props.opacity,\n          opacityHover: props.opacityHover,\n          underlineOffset: props.underlineOffset,\n          underlineOffsetHover: props.underlineOffsetHover,\n          underlineOpacity: props.underlineOpacity,\n          underlineOpacityHover: props.underlineOpacityHover,\n          underlineVariant: props.underlineVariant,\n          variant:\n            variantIsLinkTypeSubset.value === true\n              ? (props.variant?.slice(5) as ColorVariant)\n              : null,\n        }\n      : undefined),\n  }))\n)\nconst computedClasses = computed(() => [\n  variantIsLinkType.value === true && computedLink.value === false\n    ? linkValueClasses.value\n    : undefined,\n  [`btn-${props.size}`],\n  {\n    [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n    'active': props.active || pressedValue.value,\n    'rounded-pill': props.pill,\n    'rounded-0': props.squared,\n    'disabled': props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (isBLink.value ? BLink : props.href ? 'a' : props.tag))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopPropagation()\n    return\n  }\n  emit('click', e)\n  if (isToggle.value) pressedValue.value = !pressedValue.value\n}\n\nonKeyStroke(\n  [' ', 'enter'],\n  (e) => {\n    if (props.href === '#') {\n      e.preventDefault()\n      element.value?.click()\n    }\n  },\n  {target: element}\n)\n</script>\n"],"names":["_useModel","BLink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,UAAM,SAAS;AAmCT,UAAA,QAAQ,YAAY,QAAQ,SAAS;AAE3C,UAAM,OAAO;AAIP,UAAA,UAAU,eAA4B,UAAU;AAEhD,UAAA,eAAeA,SAAoC,SAAC,SAA+B;AAEzF,UAAM,EAAC,cAAc,sBAAqB,eAAe,OAAO;AAAA,MAC9D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAED,UAAM,WAAW,SAAS,MAAM,OAAO,aAAa,UAAU,SAAS;AACvE,UAAM,WAAW;AAAA,MACf,MAAM,MAAM,QAAQ,YAAY,MAAM,SAAS,UAAa,MAAM,OAAO;AAAA,IAC3E;AACA,UAAM,UAAU,SAAS,MAAM,MAAM,OAAO,MAAS;AAC/C,UAAA,iBAAiB,SAAS,MAAO,MAAM,SAAS,SAAY,QAAQ,CAAC,SAAS,KAAM;AAEpF,UAAA,YAAY,SAAS,MAAO,QAAQ,QAAQ,kBAAkB,QAAQ,EAAG;AACzE,UAAA,uBAAuB,SAAS,MAAM;AAC1C,UAAI,MAAM,SAAS,OAAO,MAAM,SAAiB,QAAA;AAE1C,aAAA,eAAe,QAAQ,MAAM,WAAW;AAAA,IAAA,CAChD;AAEK,UAAA,oBAAoB,SAAS;;AAAM,0BAAM,YAAN,mBAAe,WAAW,YAAW;AAAA,KAAK;AAC7E,UAAA,0BAA0B,SAAS;;AAAM,0BAAM,YAAN,mBAAe,WAAW,aAAY;AAAA,KAAK;AAC1F,UAAM,mBAAmB;AAAA,MACvB,SAAS,MAAO;;AAAA;AAAA,UACd,GAAI,kBAAkB,QAClB;AAAA,YACE,MAAM,MAAM;AAAA,YACZ,SAAS,MAAM;AAAA,YACf,cAAc,MAAM;AAAA,YACpB,iBAAiB,MAAM;AAAA,YACvB,sBAAsB,MAAM;AAAA,YAC5B,kBAAkB,MAAM;AAAA,YACxB,uBAAuB,MAAM;AAAA,YAC7B,kBAAkB,MAAM;AAAA,YACxB,SACE,wBAAwB,UAAU,QAC7B,WAAM,YAAN,mBAAe,MAAM,KACtB;AAAA,UAAA,IAER;AAAA,QAAA;AAAA,OACJ;AAAA,IACJ;AACM,UAAA,kBAAkB,SAAS,MAAM;AAAA,MACrC,kBAAkB,UAAU,QAAQ,aAAa,UAAU,QACvD,iBAAiB,QACjB;AAAA,MACJ,CAAC,OAAO,MAAM,IAAI,EAAE;AAAA,MACpB;AAAA,QACE,CAAC,OAAO,MAAM,OAAO,EAAE,GAAG,MAAM,YAAY,QAAQ,wBAAwB,UAAU;AAAA,QACtF,UAAU,MAAM,UAAU,aAAa;AAAA,QACvC,gBAAgB,MAAM;AAAA,QACtB,aAAa,MAAM;AAAA,QACnB,YAAY,MAAM;AAAA,MAAA;AAAA,IACpB,CACD;AAEK,UAAA,cAAc,SAAS,MAAO,QAAQ,QAAQC,cAAQ,MAAM,OAAO,MAAM,MAAM,GAAI;AAEnF,UAAA,UAAU,CAAC,MAAkC;AACjD,UAAI,MAAM,UAAU;AAClB,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAClB;AAAA,MAAA;AAEF,WAAK,SAAS,CAAC;AACf,UAAI,SAAS,MAAoB,cAAA,QAAQ,CAAC,aAAa;AAAA,IACzD;AAEA;AAAA,MACE,CAAC,KAAK,OAAO;AAAA,MACb,CAAC,MAAM;;AACD,YAAA,MAAM,SAAS,KAAK;AACtB,YAAE,eAAe;AACjB,wBAAQ,UAAR,mBAAe;AAAA,QAAM;AAAA,MAEzB;AAAA,MACA,EAAC,QAAQ,QAAO;AAAA,IAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}