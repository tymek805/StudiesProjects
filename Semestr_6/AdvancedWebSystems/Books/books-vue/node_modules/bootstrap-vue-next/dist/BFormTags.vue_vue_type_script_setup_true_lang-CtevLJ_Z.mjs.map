{"version":3,"file":"BFormTags.vue_vue_type_script_setup_true_lang-CtevLJ_Z.mjs","sources":["../src/components/BFormTags/BFormTag.vue","../src/components/BFormTags/BFormTags.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :id=\"computedId\"\n    :title=\"tagText\"\n    class=\"badge b-form-tag d-inline-flex align-items-center mw-100\"\n    :class=\"computedClasses\"\n    :aria-labelledby=\"taglabelId\"\n  >\n    <span :id=\"taglabelId\" class=\"b-form-tag-content flex-grow-1 text-truncate\">\n      <slot>{{ tagText }}</slot>\n    </span>\n    <BCloseButton\n      v-if=\"!props.disabled && !props.noRemove\"\n      aria-keyshortcuts=\"Delete\"\n      :aria-label=\"props.removeLabel\"\n      class=\"b-form-tag-remove\"\n      :aria-describedby=\"taglabelId\"\n      :aria-controls=\"props.id\"\n      @click=\"emit('remove', tagText)\"\n    />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BFormTagProps} from '../../types/ComponentProps'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BFormTagProps>(), {\n  disabled: false,\n  id: undefined,\n  noRemove: false,\n  pill: false,\n  removeLabel: 'Remove tag',\n  tag: 'span',\n  title: undefined,\n  variant: 'secondary',\n})\nconst props = useDefaults(_props, 'BFormTag')\n\nconst emit = defineEmits<{\n  remove: [value: string]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id)\n\nconst tagText = computed(\n  () => ((slots.default?.({})[0].children ?? '').toString() || props.title) ?? ''\n)\nconst taglabelId = computed(() => `${computedId.value}taglabel__`)\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'rounded-pill': props.pill,\n    'disabled': props.disabled,\n  },\n])\n</script>\n","<template>\n  <div\n    :id=\"computedId\"\n    class=\"b-form-tags form-control h-auto\"\n    :class=\"computedClasses\"\n    role=\"group\"\n    tabindex=\"-1\"\n    @focusin=\"onFocusin\"\n    @focusout=\"emit('focusout', $event)\"\n  >\n    <output\n      :id=\"`${computedId}selected_tags__`\"\n      class=\"visually-hidden\"\n      :for=\"_inputId\"\n      :aria-live=\"focused ? 'polite' : 'off'\"\n      aria-atomic=\"true\"\n      aria-relevant=\"additions text\"\n      >{{ tags.join(', ') }}</output\n    >\n    <div\n      :id=\"`${computedId}removed_tags__`\"\n      role=\"status\"\n      :aria-live=\"focused ? 'assertive' : 'off'\"\n      aria-atomic=\"true\"\n      class=\"visually-hidden\"\n    >\n      ({{ props.tagRemovedLabel }}) {{ lastRemovedTag }}\n    </div>\n\n    <slot v-bind=\"slotAttrs\">\n      <ul\n        :id=\"`${computedId}tag_list__`\"\n        class=\"b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center\"\n      >\n        <template v-for=\"(tag, index) in tags\" :key=\"index\">\n          <slot\n            name=\"tag\"\n            :tag=\"tag\"\n            :tag-class=\"props.tagClass\"\n            :tag-variant=\"props.tagVariant\"\n            :tag-pills=\"props.tagPills\"\n            :remove-tag=\"removeTag\"\n          >\n            <BFormTag\n              :key=\"tag\"\n              :class=\"props.tagClass\"\n              tag=\"li\"\n              :variant=\"props.tagVariant\"\n              :pill=\"props.tagPills\"\n              @remove=\"removeTag\"\n              >{{ tag }}</BFormTag\n            >\n          </slot>\n        </template>\n        <li\n          role=\"none\"\n          aria-live=\"off\"\n          class=\"b-from-tags-field flex-grow-1\"\n          :aria-controls=\"`${computedId}tag_list__`\"\n        >\n          <div role=\"group\" class=\"d-flex\">\n            <input\n              :id=\"_inputId\"\n              ref=\"_input\"\n              :disabled=\"props.disabled\"\n              :value=\"inputValue\"\n              :type=\"props.inputType\"\n              :placeholder=\"props.placeholder\"\n              class=\"b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0\"\n              style=\"outline: currentcolor none 0px; min-width: 5rem\"\n              v-bind=\"props.inputAttrs\"\n              :form=\"props.form\"\n              :required=\"props.required || undefined\"\n              :aria-required=\"props.required || undefined\"\n              @input=\"onInput\"\n              @change=\"onChange\"\n              @focus=\"onFocus\"\n              @blur=\"onBlur\"\n            />\n            <button\n              v-if=\"disableAddButton\"\n              type=\"button\"\n              class=\"btn b-form-tags-button py-0\"\n              :class=\"[\n                inputClass,\n                {\n                  [`btn-${props.addButtonVariant}`]: props.addButtonVariant !== null,\n                  'disabled invisible': inputValue.length === 0,\n                },\n              ]\"\n              style=\"font-size: 90%\"\n              :disabled=\"props.disabled || inputValue.length === 0 || isLimitReached\"\n              @click=\"addTag(inputValue)\"\n            >\n              <slot name=\"add-button-text\">{{ props.addButtonText }}</slot>\n            </button>\n          </div>\n        </li>\n      </ul>\n      <div aria-live=\"polite\" aria-atomic=\"true\">\n        <div v-if=\"isInvalid\" class=\"d-block invalid-feedback\">\n          {{ props.invalidTagText }}: {{ inputValue }}\n        </div>\n        <small v-if=\"isDuplicate\" class=\"form-text text-body-secondary\"\n          >{{ props.duplicateTagText }}: {{ inputValue }}</small\n        >\n        <small v-if=\"tags.length === props.limit\" class=\"form-text text-body-secondary\">\n          {{ props.limitTagsText }}</small\n        >\n      </div>\n    </slot>\n    <template v-if=\"props.name\">\n      <input\n        v-for=\"(tag, index) in tags\"\n        :key=\"index\"\n        type=\"hidden\"\n        :name=\"props.name\"\n        :value=\"tag\"\n      />\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, syncRef, useFocus, useToNumber} from '@vueuse/core'\nimport {computed, ref, useTemplateRef} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormTagsProps} from '../../types/ComponentProps'\nimport {escapeRegExpChars} from '../../utils/stringUtils'\nimport BFormTag from './BFormTag.vue'\nimport type {ClassValue} from '../../types/AnyValuedAttributes'\nimport type {ColorVariant} from '../../types/ColorTypes'\nimport {useId} from '../../composables/useId'\nimport {useStateClass} from '../../composables/useStateClass'\n\nconst _props = withDefaults(defineProps<Omit<BFormTagsProps, 'modelValue'>>(), {\n  addButtonText: 'Add',\n  addButtonVariant: 'outline-secondary',\n  addOnChange: false,\n  autofocus: false,\n  disabled: false,\n  duplicateTagText: 'Duplicate tag(s)',\n  form: undefined,\n  inputAttrs: undefined,\n  inputClass: undefined,\n  inputId: undefined,\n  inputType: 'text',\n  invalidTagText: 'Invalid tag(s)',\n  limit: undefined,\n  limitTagsText: 'Tag limit reached',\n  name: undefined,\n  noAddOnEnter: false,\n  noOuterFocus: false,\n  noTagRemove: false,\n  placeholder: 'Add tag...',\n  removeOnDelete: false,\n  required: false,\n  separator: undefined,\n  size: 'md',\n  state: null,\n  tagClass: undefined,\n  tagPills: false,\n  tagRemoveLabel: undefined,\n  tagRemovedLabel: 'Tag removed',\n  tagValidator: () => true,\n  tagVariant: 'secondary',\n})\nconst props = useDefaults(_props, 'BFormTags')\n\nconst emit = defineEmits<{\n  'blur': [value: FocusEvent]\n  'focus': [value: FocusEvent]\n  'focusin': [value: FocusEvent]\n  'focusout': [value: FocusEvent]\n  'tag-state': [...args: string[][]]\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'add-button-text'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: typeof slotAttrs.value) => any\n  'tag'?: (props: {\n    tag: string\n    tagClass: ClassValue\n    tagVariant: ColorVariant | null\n    tagPills: boolean\n    removeTag: (tag?: string) => void\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }) => any\n}>()\n\nconst modelValue = defineModel<Exclude<BFormTagsProps['modelValue'], undefined>>({\n  default: () => [],\n})\n\nconst computedId = useId()\n\nconst limitNumber = useToNumber(() => props.limit ?? NaN)\n\nconst stateClass = useStateClass(() => props.state)\n\nconst input = useTemplateRef<HTMLInputElement>('_input')\n\nconst {focused} = useFocus(input, {\n  initialValue: props.autofocus,\n})\n\nconst _inputId = computed(() => props.inputId || `${computedId.value}input__`)\nconst tags = ref<string[]>([...modelValue.value])\nconst inputValue = ref<string>('')\nconst shouldRemoveOnDelete = ref<boolean>(modelValue.value.length > 0)\nconst lastRemovedTag = ref<string>('')\nconst validTags = ref<string[]>([])\nconst invalidTags = ref<string[]>([])\nconst duplicateTags = ref<string[]>([])\n\nsyncRef(modelValue, tags, {\n  direction: 'ltr',\n  transform: {\n    ltr: (v) => [...v],\n  },\n})\n\nconst computedClasses = computed(() => [\n  stateClass.value,\n  {\n    [`form-control-${props.size}`]: props.size !== 'md',\n    disabled: props.disabled,\n    focus: focused.value,\n  },\n])\n\nconst isDuplicate = computed(() => tags.value.includes(inputValue.value))\nconst isInvalid = computed(() =>\n  inputValue.value === '' ? false : !props.tagValidator(inputValue.value)\n)\nconst isLimitReached = computed(() => tags.value.length === limitNumber.value)\nconst disableAddButton = computed(() => !isInvalid.value && !isDuplicate.value)\n\nconst slotAttrs = computed(() => ({\n  addButtonText: props.addButtonText,\n  addButtonVariant: props.addButtonVariant,\n  addTag,\n  disableAddButton: disableAddButton.value,\n  disabled: props.disabled,\n  duplicateTagText: props.duplicateTagText,\n  duplicateTags: duplicateTags.value,\n  form: props.form,\n  inputAttrs: {\n    ...props.inputAttrs,\n    disabled: props.disabled,\n    form: props.form,\n    id: _inputId.value,\n    value: inputValue.value,\n  },\n  inputClass: props.inputClass,\n  inputHandlers: {\n    input: onInput,\n    keydown: onKeydown,\n    change: onChange,\n  },\n  inputId: _inputId.value,\n  inputType: props.inputType,\n  invalidTagText: props.invalidTagText,\n  invalidTags: invalidTags.value,\n  isDuplicate: isDuplicate.value,\n  isInvalid: isInvalid.value,\n  isLimitReached: isLimitReached.value,\n  limitTagsText: props.limitTagsText,\n  limit: limitNumber.value,\n  noTagRemove: props.noTagRemove,\n  placeholder: props.placeholder,\n  removeTag,\n  required: props.required,\n  separator: props.separator,\n  size: props.size,\n  state: props.state,\n  tagClass: props.tagClass,\n  tagPills: props.tagPills,\n  tagRemoveLabel: props.tagRemoveLabel,\n  tagVariant: props.tagVariant,\n  tags: tags.value,\n}))\n\nconst onFocusin = (e: Readonly<FocusEvent>): void => {\n  if (props.disabled) {\n    const target = e.target as HTMLDivElement\n    target.blur()\n    return\n  }\n\n  emit('focusin', e)\n}\n\nconst onFocus = (e: Readonly<FocusEvent>): void => {\n  if (props.disabled || props.noOuterFocus) {\n    return\n  }\n\n  focused.value = true\n  emit('focus', e)\n}\n\nconst onBlur = (e: Readonly<FocusEvent>): void => {\n  focused.value = false\n  emit('blur', e)\n}\n\nconst onInput = (e: Readonly<Event> | string): void => {\n  const value = typeof e === 'string' ? e : (e.target as HTMLInputElement).value\n\n  shouldRemoveOnDelete.value = false\n\n  if (props.separator?.includes(value.charAt(0)) && value.length > 0) {\n    if (input.value) {\n      input.value.value = ''\n    }\n    return\n  }\n\n  inputValue.value = value\n\n  if (props.separator?.includes(value.charAt(value.length - 1))) {\n    addTag(value.slice(0, value.length - 1))\n    return\n  }\n\n  validTags.value = props.tagValidator(value) && !isDuplicate.value ? [value] : []\n  invalidTags.value = props.tagValidator(value) ? [] : [value]\n  duplicateTags.value = isDuplicate.value ? [value] : []\n\n  emit('tag-state', validTags.value, invalidTags.value, duplicateTags.value)\n}\n\nconst onChange = (e: Readonly<Event>): void => {\n  if (props.addOnChange) {\n    onInput(e)\n\n    if (!isDuplicate.value) {\n      addTag(inputValue.value)\n    }\n  }\n}\n\nconst onKeydown = (e: Readonly<KeyboardEvent>): void => {\n  if (e.key === 'Enter' && !props.noAddOnEnter) {\n    addTag(inputValue.value)\n    return\n  }\n\n  if (\n    (e.key === 'Backspace' || e.key === 'Delete') &&\n    props.removeOnDelete &&\n    inputValue.value === '' &&\n    shouldRemoveOnDelete.value &&\n    tags.value.length > 0\n  ) {\n    removeTag(tags.value[tags.value.length - 1])\n  } else {\n    shouldRemoveOnDelete.value = true\n  }\n}\n\nonKeyStroke(onKeydown, {target: input})\n\nconst separator = computed(() => {\n  if (!props.separator) {\n    return\n  }\n\n  return typeof props.separator === 'string' ? props.separator : props.separator.join('')\n})\n\nconst separatorRegExp = computed(() => {\n  if (!separator.value) {\n    return\n  }\n\n  return new RegExp(`[${escapeRegExpChars(separator.value)}]+`)\n})\n\nconst addTag = (tag?: string): void => {\n  tag = (tag ?? inputValue.value).trim()\n\n  const newTags = separatorRegExp.value\n    ? tag.split(separatorRegExp.value).map((t) => t.trim())\n    : [tag]\n  const validTags: string[] = []\n\n  for (const newTag of newTags) {\n    if (newTag === '' || isDuplicate.value || !props.tagValidator(newTag)) {\n      continue\n    }\n\n    if (limitNumber.value && isLimitReached.value) {\n      break\n    }\n\n    validTags.push(newTag)\n  }\n\n  const newValue = [...modelValue.value, ...validTags]\n  inputValue.value = ''\n  shouldRemoveOnDelete.value = true\n  modelValue.value = newValue\n  focused.value = true\n}\n\nconst removeTag = (tag?: string): void => {\n  const tagIndex = tags.value.indexOf(tag?.toString() ?? '')\n  if (tagIndex === -1) return\n  lastRemovedTag.value = tags.value.splice(tagIndex, 1).toString()\n  modelValue.value = tags.value\n}\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  element: input,\n  focus: () => {\n    focused.value = true\n  },\n  inputValue,\n})\n</script>\n"],"names":["_useSlots","_useModel","validTags"],"mappings":"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"}