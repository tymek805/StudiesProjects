{"version":3,"file":"useCountdownHover-Df7NzMHG.js","sources":["../src/composables/useCountdown.ts","../src/composables/useCountdownHover.ts"],"sourcesContent":["import {useTimestamp, type UseTimestampOptions} from '@vueuse/core'\nimport {computed, type MaybeRefOrGetter, readonly, ref, toRef, watch} from 'vue'\n\n/**\n * A simple interval timer that counts down the remaining seconds\n *\n * @param {MaybeRefOrGetter<number>} length the total amount of time to loop through in ms\n * @param {MaybeRefOrGetter<number>} interval how often the interval should refresh. Default 1000\n * @param {Readonly<UseIntervalFnOptions>} intervalOpts opts to pass to the interval fn. Default {}\n */\nexport const useCountdown = (\n  length: MaybeRefOrGetter<number>,\n  interval: number | 'requestAnimationFrame',\n  timestampOpts: UseTimestampOptions<true> = {}\n) => {\n  const resolvedLength = readonly(toRef(length))\n\n  const isPaused = ref(false)\n\n  const target = ref(Date.now() + resolvedLength.value)\n\n  const {isActive, pause, resume, timestamp} = useTimestamp({\n    interval,\n    controls: true,\n    callback: (v) => {\n      if (v >= target.value) {\n        isPaused.value = false\n        pause()\n      }\n    },\n    ...timestampOpts,\n  })\n\n  const value = computed(() => target.value - timestamp.value)\n\n  const restart = () => {\n    target.value = Date.now() + resolvedLength.value\n    resume()\n  }\n  watch(resolvedLength, () => {\n    restart()\n  })\n\n  const myPause = () => {\n    isPaused.value = true\n    pause()\n  }\n  const myResume = () => {\n    isPaused.value = false\n    const remainingTime = target.value - timestamp.value\n    target.value = Date.now() + remainingTime\n    resume()\n  }\n  const stop = () => {\n    pause()\n    timestamp.value = target.value\n    isPaused.value = false\n  }\n\n  return {\n    isActive: readonly(isActive),\n    isPaused: readonly(isPaused),\n    stop,\n    pause: myPause,\n    resume: myResume,\n    restart,\n    value,\n  }\n}\n","import {useElementHover} from '@vueuse/core'\nimport {type MaybeRefOrGetter, type Ref, toValue, watch} from 'vue'\n\nexport const useCountdownHover = (\n  element: Ref<HTMLElement | null>,\n  props: MaybeRefOrGetter<{\n    noHoverPause?: boolean\n    noResumeOnHoverLeave?: boolean\n    /**\n     * Countdown/hover rules don't apply to static model-values (boolean)\n     */\n    modelValueIgnoresHover: boolean\n  }>,\n  actions: {\n    pause: () => void\n    resume: () => void\n  }\n) => {\n  const isHovering = useElementHover(element)\n\n  const onMouseEnter = () => {\n    if (toValue(props).noHoverPause) return\n    actions.pause()\n  }\n  const onMouseLeave = () => {\n    if (toValue(props).noResumeOnHoverLeave) return\n    actions.resume()\n  }\n\n  watch(isHovering, (newValue) => {\n    if (toValue(props).modelValueIgnoresHover) return\n    if (newValue) {\n      onMouseEnter()\n      return\n    }\n    onMouseLeave()\n  })\n\n  return {\n    isHovering,\n  }\n}\n"],"names":["length","interval","timestampOpts","resolvedLength","readonly","toRef","isPaused","ref","target","Date","now","value","isActive","pause","resume","timestamp","useTimestamp","controls","callback","v","computed","restart","vue","watch","stop","remainingTime","element","props","actions","isHovering","useElementHover","newValue","toValue","modelValueIgnoresHover","noHoverPause","noResumeOnHoverLeave"],"mappings":"0FAU4B,CAC1BA,EACAC,EACAC,EAA2C,CAAA,KAE3C,MAAMC,EAAiBC,EAAAA,SAASC,EAAMA,MAAAL,IAEhCM,EAAWC,OAAI,GAEfC,EAASD,EAAAA,IAAIE,KAAKC,MAAQP,EAAeQ,QAEzCC,SAACA,EAAUC,MAAAA,EAAAC,OAAOA,YAAQC,GAAaC,EAAAA,aAAa,CACxDf,WACAgB,UAAU,EACVC,SAAWC,IACLA,GAAKX,EAAOG,QACdL,EAASK,OAAQ,EACXE,IAAA,KAGPX,IAGCS,EAAQS,EAAAA,UAAS,IAAMZ,EAAOG,MAAQI,EAAUJ,QAEhDU,EAAU,KACdb,EAAOG,MAAQF,KAAKC,MAAQP,EAAeQ,MACpCG,GAAA,EAETQ,EAAAC,MAAMpB,GAAgB,KACZkB,GAAA,IAmBH,MAAA,CACLT,SAAUR,WAASQ,GACnBN,SAAUF,WAASE,GACnBkB,KATW,KACLX,IACNE,EAAUJ,MAAQH,EAAOG,MACzBL,EAASK,OAAQ,CAAA,EAOjBE,MApBc,KACdP,EAASK,OAAQ,EACXE,GAAA,EAmBNC,OAjBe,KACfR,EAASK,OAAQ,EACX,MAAAc,EAAgBjB,EAAOG,MAAQI,EAAUJ,MACxCH,EAAAG,MAAQF,KAAKC,MAAQe,EACrBX,GAAA,EAcPO,UACAV,QACF,4BChE+B,CAC/Be,EACAC,EAQAC,KAKM,MAAAC,EAAaC,kBAAgBJ,GAoB5B,eATDG,GAAaE,IACbC,EAAAA,QAAQL,GAAOM,yBACfF,EAVAC,EAAAA,QAAQL,GAAOO,cACnBN,EAAQf,QAGJmB,EAAAA,QAAQL,GAAOQ,sBACnBP,EAAQd,SASK,IAGR,CACLe,aACF"}