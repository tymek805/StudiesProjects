{"version":3,"file":"BProgress.vue_vue_type_script_setup_true_lang-bUPRPOHk.js","sources":["../src/components/BProgress/BProgressBar.vue","../src/components/BProgress/BProgress.vue"],"sourcesContent":["<template>\n  <div class=\"progress-bar\" :class=\"computedClasses\" :style=\"{width: computedWidth}\">\n    <slot>\n      {{ computedLabel }}\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BProgressBarProps} from '../../types/ComponentProps'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed, inject} from 'vue'\nimport {progressInjectionKey} from '../../utils/keys'\nimport {useToNumber} from '@vueuse/core'\n\nconst _props = withDefaults(defineProps<BProgressBarProps>(), {\n  animated: false,\n  bgVariant: null,\n  label: undefined,\n  max: undefined,\n  precision: 0,\n  showProgress: false,\n  showValue: false,\n  striped: false,\n  textVariant: null,\n  value: 0,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BProgressBar')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst parentData = inject(progressInjectionKey, null)\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'progress-bar-animated': props.animated || parentData?.animated.value,\n    'progress-bar-striped':\n      props.striped || parentData?.striped.value || props.animated || parentData?.animated.value,\n  },\n])\n\nconst numberPrecision = useToNumber(() => props.precision)\nconst numberValue = useToNumber(() => props.value)\nconst numberMax = useToNumber(() => props.max ?? NaN)\nconst parentMaxNumber = useToNumber(() => parentData?.max.value ?? NaN)\n\nconst computedLabel = computed(() =>\n  props.showValue || parentData?.showValue.value\n    ? numberValue.value.toFixed(numberPrecision.value)\n    : props.showProgress || parentData?.showProgress.value\n      ? ((numberValue.value * 100) / (numberMax.value || 100)).toFixed(numberPrecision.value)\n      : props.label !== undefined\n        ? props.label\n        : ''\n)\n\nconst computedWidth = computed(() =>\n  parentMaxNumber.value\n    ? `${(numberValue.value * 100) / parentMaxNumber.value}%`\n    : numberMax.value\n      ? `${(numberValue.value * 100) / numberMax.value}%`\n      : typeof props.value === 'string'\n        ? props.value\n        : `${props.value}%`\n)\n</script>\n","<template>\n  <div\n    class=\"progress\"\n    role=\"progressbar\"\n    :style=\"{height: props.height}\"\n    :aria-valuenow=\"props.value\"\n    aria-valuemin=\"0\"\n    :aria-valuemax=\"props.max\"\n  >\n    <slot>\n      <BProgressBar\n        :animated=\"props.animated\"\n        :max=\"props.max\"\n        :precision=\"props.precision\"\n        :show-progress=\"props.showProgress\"\n        :show-value=\"props.showValue\"\n        :striped=\"props.striped\"\n        :value=\"props.value\"\n        :variant=\"props.variant\"\n        :text-variant=\"props.textVariant\"\n        :bg-variant=\"props.bgVariant\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BProgressBar from './BProgressBar.vue'\nimport type {BProgressProps} from '../../types/ComponentProps'\nimport {provide, toRef} from 'vue'\nimport {progressInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BProgressProps>(), {\n  height: undefined,\n  // BProgressBar props\n  animated: undefined,\n  bgVariant: undefined,\n  max: 100,\n  precision: undefined,\n  showProgress: undefined,\n  showValue: undefined,\n  striped: undefined,\n  textVariant: undefined,\n  value: undefined,\n  variant: undefined,\n  // End BProgressBar props\n})\nconst props = useDefaults(_props, 'BProgress')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nprovide(progressInjectionKey, {\n  animated: toRef(() => props.animated),\n  max: toRef(() => props.max),\n  showProgress: toRef(() => props.showProgress),\n  showValue: toRef(() => props.showValue),\n  striped: toRef(() => props.striped),\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","parentData","inject","progressInjectionKey","colorClasses","useColorVariantClasses","computedClasses","computed","value","animated","striped","numberPrecision","useToNumber","precision","numberValue","numberMax","max","NaN","parentMaxNumber","computedLabel","showValue","toFixed","showProgress","label","computedWidth","provide","toRef"],"mappings":"yiBAgBA,MAAMA,EAASC,EAaTC,EAAQC,EAAAA,YAAYH,EAAQ,gBAO5BI,EAAaC,EAAAA,OAAOC,EAAAA,qBAAsB,MAE1CC,EAAeC,yBAAuBN,GACtCO,EAAkBC,EAAAA,UAAS,IAAM,CACrCH,EAAaI,MACb,CACE,wBAAyBT,EAAMU,WAAY,MAAAR,OAAA,EAAAA,EAAYQ,SAASD,OAChE,uBACET,EAAMW,UAAW,MAAAT,OAAA,EAAAA,EAAYS,QAAQF,QAAST,EAAMU,WAAY,MAAAR,OAAA,EAAAA,EAAYQ,SAASD,WAIrFG,EAAkBC,EAAAA,aAAY,IAAMb,EAAMc,YAC1CC,EAAcF,EAAAA,aAAY,IAAMb,EAAMS,QACtCO,EAAYH,EAAAA,aAAY,IAAMb,EAAMiB,KAAOC,MAC3CC,EAAkBN,EAAAA,aAAY,KAAkB,MAAZX,OAAY,EAAAA,EAAAe,IAAIR,QAASS,MAE7DE,EAAgBZ,EAAAA,UAAS,IAC7BR,EAAMqB,YAAa,MAAAnB,OAAA,EAAAA,EAAYmB,UAAUZ,OACrCM,EAAYN,MAAMa,QAAQV,EAAgBH,OAC1CT,EAAMuB,eAAgB,MAAArB,OAAA,EAAAA,EAAYqB,aAAad,QACvB,IAApBM,EAAYN,OAAgBO,EAAUP,OAAS,MAAMa,QAAQV,EAAgBH,YAC/D,IAAhBT,EAAMwB,MACJxB,EAAMwB,MACN,KAGJC,EAAgBjB,EAAAA,UAAS,IAC7BW,EAAgBV,MACY,IAApBM,EAAYN,MAAeU,EAAgBV,MAA/C,IACAO,EAAUP,MACgB,IAApBM,EAAYN,MAAeO,EAAUP,MAAzC,IACuB,iBAAhBT,EAAMS,MACXT,EAAMS,MACN,GAAGT,EAAMS,4qBCrCnB,MAAMX,EAASC,EAeTC,EAAQC,EAAAA,YAAYH,EAAQ,oBAOlC4B,EAAAA,QAAQtB,EAAAA,qBAAsB,CAC5BM,SAAUiB,EAAAA,OAAM,IAAM3B,EAAMU,WAC5BO,IAAKU,EAAAA,OAAM,IAAM3B,EAAMiB,MACvBM,aAAcI,EAAAA,OAAM,IAAM3B,EAAMuB,eAChCF,UAAWM,EAAAA,OAAM,IAAM3B,EAAMqB,YAC7BV,QAASgB,EAAAA,OAAM,IAAM3B,EAAMW"}