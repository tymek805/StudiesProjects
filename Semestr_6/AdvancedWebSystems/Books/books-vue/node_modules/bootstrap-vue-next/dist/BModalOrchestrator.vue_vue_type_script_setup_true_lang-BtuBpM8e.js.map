{"version":3,"file":"BModalOrchestrator.vue_vue_type_script_setup_true_lang-BtuBpM8e.js","sources":["../src/components/BModal/BModal.vue","../src/components/BModal/BModalOrchestrator.vue"],"sourcesContent":["<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <Transition\n      v-if=\"renderRef || contentShowing\"\n      v-bind=\"transitionProps\"\n      :appear=\"modelValue || props.visible\"\n      @after-enter=\"onAfterEnter\"\n    >\n      <div\n        v-show=\"showRef && ((backdropReady && props.backdropFirst) || !props.backdropFirst)\"\n        :id=\"computedId\"\n        ref=\"_element\"\n        class=\"modal\"\n        :class=\"[\n          props.modalClass,\n          {\n            fade: !computedNoAnimation,\n            show: isVisible,\n          },\n        ]\"\n        role=\"dialog\"\n        :aria-labelledby=\"!props.noHeader ? `${computedId}-label` : undefined\"\n        :aria-describedby=\"`${computedId}-body`\"\n        tabindex=\"-1\"\n        v-bind=\"$attrs\"\n        :style=\"computedZIndex\"\n        @click.self=\"hide('backdrop')\"\n      >\n        <div class=\"modal-dialog\" :class=\"modalDialogClasses\">\n          <div v-if=\"contentShowing\" class=\"modal-content\" :class=\"props.contentClass\">\n            <div v-if=\"!props.noHeader\" class=\"modal-header\" :class=\"headerClasses\">\n              <slot name=\"header\" v-bind=\"sharedSlots\">\n                <component\n                  :is=\"props.titleTag\"\n                  :id=\"`${computedId}-label`\"\n                  class=\"modal-title\"\n                  :class=\"titleClasses\"\n                >\n                  <slot name=\"title\" v-bind=\"sharedSlots\">\n                    {{ props.title }}\n                  </slot>\n                </component>\n                <template v-if=\"!props.noHeaderClose\">\n                  <BButton\n                    v-if=\"hasHeaderCloseSlot\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  >\n                    <slot name=\"header-close\" />\n                  </BButton>\n                  <BCloseButton\n                    v-else\n                    :aria-label=\"props.headerCloseLabel\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  />\n                </template>\n              </slot>\n            </div>\n            <div\n              :id=\"`${computedId}-body`\"\n              class=\"modal-body\"\n              :class=\"bodyClasses\"\n              v-bind=\"props.bodyAttrs\"\n            >\n              <slot v-bind=\"sharedSlots\">\n                {{ props.body }}\n              </slot>\n            </div>\n            <div v-if=\"!props.noFooter\" class=\"modal-footer\" :class=\"footerClasses\">\n              <slot name=\"footer\" v-bind=\"sharedSlots\">\n                <slot name=\"cancel\" v-bind=\"sharedSlots\">\n                  <BButton\n                    v-if=\"!props.okOnly\"\n                    ref=\"_cancelButton\"\n                    :disabled=\"disableCancel\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.cancelVariant\"\n                    @click=\"hide('cancel')\"\n                  >\n                    {{ props.cancelTitle }}\n                  </BButton>\n                </slot>\n                <slot name=\"ok\" v-bind=\"sharedSlots\">\n                  <BButton\n                    ref=\"_okButton\"\n                    :disabled=\"disableOk\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.okVariant\"\n                    @click=\"hide('ok')\"\n                  >\n                    {{ props.okTitle }}\n                  </BButton>\n                </slot>\n              </slot>\n            </div>\n          </div>\n        </div>\n        <div\n          v-if=\"needsFallback\"\n          ref=\"_fallbackFocusElement\"\n          :class=\"fallbackClassSelector\"\n          tabindex=\"0\"\n          style=\"width: 0; height: 0; overflow: hidden\"\n        />\n      </div>\n    </Transition>\n    <slot v-if=\"!props.noBackdrop\" name=\"backdrop\" v-bind=\"sharedSlots\">\n      <Transition v-if=\"renderBackdropRef\" v-bind=\"backdropTransitionProps\">\n        <div\n          v-show=\"showRef || (isLeaving && props.backdropFirst && !computedNoAnimation)\"\n          class=\"modal-backdrop\"\n          :style=\"computedZIndexBackdrop\"\n          :class=\"{\n            fade: !computedNoAnimation,\n            show: backdropVisible || computedNoAnimation,\n          }\"\n          @click=\"hide('backdrop')\"\n        />\n      </Transition>\n    </slot>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, useFocus} from '@vueuse/core'\nimport {useActivatedFocusTrap} from '../../composables/useActivatedFocusTrap'\nimport {computed, type CSSProperties, type EmitFn, useTemplateRef, watch} from 'vue'\nimport type {BModalProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useSafeScrollLock} from '../../composables/useSafeScrollLock'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useModalManager} from '../../composables/useModalManager'\nimport {type showHideEmits, useShowHide} from '../../composables/useShowHide'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\n// aria\n// autofocus\n// close on escape when autofocus\n\n// Note, attempt to return focus to item that openned the modal after close\n// Implement auto focus props like autoFocusButton\n\nconst _props = withDefaults(defineProps<Omit<BModalProps, 'modelValue'>>(), {\n  autofocus: true,\n  autofocusButton: undefined,\n  backdropFirst: false,\n  body: undefined,\n  bodyBgVariant: null,\n  bodyAttrs: undefined,\n  bodyClass: null,\n  bodyScrolling: false,\n  bodyTextVariant: null,\n  bodyVariant: null,\n  busy: false,\n  buttonSize: 'md',\n  cancelDisabled: false,\n  cancelTitle: 'Cancel',\n  cancelVariant: 'secondary',\n  centered: false,\n  contentClass: undefined,\n  dialogClass: undefined,\n  footerBgVariant: null,\n  footerBorderVariant: null,\n  footerClass: undefined,\n  footerTextVariant: null,\n  footerVariant: null,\n  fullscreen: false,\n  headerBgVariant: null,\n  headerBorderVariant: null,\n  headerClass: undefined,\n  headerCloseClass: undefined,\n  headerCloseLabel: 'Close',\n  headerCloseVariant: 'secondary',\n  headerTextVariant: null,\n  headerVariant: null,\n  noFooter: false,\n  noHeader: false,\n  noHeaderClose: false,\n  id: undefined,\n  initialAnimation: false,\n  lazy: false,\n  modalClass: undefined,\n  noBackdrop: false,\n  noCloseOnBackdrop: false,\n  noCloseOnEsc: false,\n  noFade: false,\n  noTrap: false,\n  okDisabled: false,\n  okOnly: false,\n  okTitle: 'OK',\n  okVariant: 'primary',\n  unmountLazy: false,\n  scrollable: false,\n  size: 'md',\n  teleportDisabled: false,\n  teleportTo: 'body',\n  title: undefined,\n  titleClass: undefined,\n  titleVisuallyHidden: false,\n  titleTag: 'h5',\n  show: false,\n  transProps: undefined,\n  visible: false,\n})\nconst props = useDefaults(_props, 'BModal')\n\nconst emit = defineEmits<\n  {\n    backdrop: [value: BvTriggerableEvent]\n    cancel: [value: BvTriggerableEvent]\n    close: [value: BvTriggerableEvent]\n    esc: [value: BvTriggerableEvent]\n    ok: [value: BvTriggerableEvent]\n  } & showHideEmits\n>()\n\ntype SharedSlotsData = {\n  cancel: () => void\n  close: () => void\n  hide: (trigger?: string) => void\n  ok: () => void\n  active: boolean\n  visible: boolean\n}\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'backdrop'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'cancel'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'footer'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header-close'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'ok'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'title'?: (props: SharedSlotsData) => any\n}>()\n\nconst computedId = useId(() => props.id, 'modal')\n// Note: passive: true will sync an internal ref... This is required for useModalManager to exit,\n// Since the modelValue that's passed from that composable is not reactive, this internal ref _is_ and thus it will trigger closing the modal\nconst modelValue = defineModel<Exclude<BModalProps['modelValue'], undefined>>({default: false})\n\nconst element = useTemplateRef<HTMLElement>('_element')\nconst fallbackFocusElement = useTemplateRef<HTMLElement>('_fallbackFocusElement')\nconst okButton = useTemplateRef<HTMLElement>('_okButton')\nconst cancelButton = useTemplateRef<HTMLElement>('_cancelButton')\nconst closeButton = useTemplateRef<HTMLElement>('_closeButton')\n\nconst pickFocusItem = () => {\n  if (props.autofocus === false) return\n  if (props.autofocusButton === 'ok') {\n    okButtonFocus.value = true\n  } else if (props.autofocusButton === 'close') {\n    closeButtonFocus.value = true\n  } else if (props.autofocusButton === 'cancel') {\n    cancelButtonFocus.value = true\n  } else {\n    modalFocus.value = true\n  }\n}\n\nconst onAfterEnter = () => {\n  pickFocusItem()\n}\n\nconst {\n  showRef,\n  renderRef,\n  renderBackdropRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  backdropTransitionProps,\n  isLeaving,\n  isVisible,\n  trapActive,\n  contentShowing,\n  backdropReady,\n  backdropVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, element, computedId, {\n  // addShowClass: false,\n  transitionProps: {\n    onAfterEnter,\n  },\n})\n\nconst fallbackClassSelector = 'modal-fallback-focus'\nconst {needsFallback} = useActivatedFocusTrap({\n  element,\n  isActive: trapActive,\n  noTrap: () => props.noTrap,\n  fallbackFocus: {\n    ref: fallbackFocusElement,\n    classSelector: fallbackClassSelector,\n  },\n})\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide('esc')\n  },\n  {target: element}\n)\nuseSafeScrollLock(showRef, () => props.bodyScrolling)\nconst {focused: modalFocus} = useFocus(element, {\n  initialValue: modelValue.value && props.autofocusButton === undefined && props.autofocus === true,\n})\nconst {focused: okButtonFocus} = useFocus(okButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'ok' && props.autofocus === true,\n})\nconst {focused: cancelButtonFocus} = useFocus(cancelButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'cancel' && props.autofocus === true,\n})\nconst {focused: closeButtonFocus} = useFocus(closeButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'close' && props.autofocus === true,\n})\n\nconst hasHeaderCloseSlot = computed(() => !isEmptySlot(slots['header-close']))\n\nconst modalDialogClasses = computed(() => [\n  props.dialogClass,\n  {\n    'modal-fullscreen': props.fullscreen === true,\n    [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === 'string',\n    [`modal-${props.size}`]: props.size !== 'md',\n    'modal-dialog-centered': props.centered,\n    'modal-dialog-scrollable': props.scrollable,\n  },\n])\n\nconst bodyColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.bodyBgVariant,\n  textVariant: props.bodyTextVariant,\n  variant: props.bodyVariant,\n}))\nconst bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value])\n\nconst headerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.headerBgVariant,\n  textVariant: props.headerTextVariant,\n  variant: props.headerVariant,\n  borderVariant: props.headerBorderVariant,\n}))\nconst headerClasses = computed(() => [props.headerClass, headerColorClasses.value])\n\nconst headerCloseAttrs = computed(() => ({\n  variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : undefined,\n  class: props.headerCloseClass,\n}))\n\nconst footerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.footerBgVariant,\n  textVariant: props.footerTextVariant,\n  variant: props.footerVariant,\n  borderVariant: props.footerBorderVariant,\n}))\nconst footerClasses = computed(() => [props.footerClass, footerColorClasses.value])\n\nconst titleClasses = computed(() => [\n  props.titleClass,\n  {\n    ['visually-hidden']: props.titleVisuallyHidden,\n  },\n])\nconst disableCancel = computed(() => props.cancelDisabled || props.busy)\nconst disableOk = computed(() => props.okDisabled || props.busy)\n\nconst {activePosition, activeModalCount, stackWithoutSelf} = useModalManager(\n  showRef,\n  modelValue.value\n)\n\nwatch(stackWithoutSelf, (newValue, oldValue) => {\n  if (newValue.length > oldValue.length && showRef.value === true && props.noStacking === true)\n    hide()\n})\n\nconst defaultModalDialogZIndex = 1056\nconst computedZIndexNumber = computed<number>(() =>\n  // Make sure that newly opened modals have a higher z-index than currently active ones.\n  // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n  //\n  // This means inactive modals will already be higher than active ones when opened.\n\n  showRef.value || isLeaving.value\n    ? // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n      defaultModalDialogZIndex -\n      ((activeModalCount?.value ?? 0) * 2 - (activePosition?.value ?? 0) * 2)\n    : defaultModalDialogZIndex\n)\nconst computedZIndex = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value,\n}))\nconst computedZIndexBackdrop = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value - 1,\n}))\n\nconst sharedSlots = computed<SharedSlotsData>(() => ({\n  cancel: () => {\n    hide('cancel')\n  },\n  close: () => {\n    hide('close')\n  },\n  hide,\n  ok: () => {\n    hide('ok')\n  },\n  active: showRef.value,\n  visible: showRef.value,\n}))\n\ndefineExpose({\n  hide,\n  id: computedId,\n  show,\n  toggle,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.modal {\n  display: block;\n}\n\n.modal-dialog {\n  z-index: 1051;\n}\n</style>\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__modal-container\" v-bind=\"$attrs\">\n      <component\n        :is=\"modal.component ?? BModal\"\n        v-for=\"[self, modal] in tools.modals?.value\"\n        :key=\"self\"\n        v-bind=\"modal.props\"\n        v-model=\"modal.props._modelValue\"\n        initial-animation\n        :teleport-disabled=\"true\"\n        @update:model-value=\"tools.leave?.(self)\"\n        @hide=\"\n          (e: BvTriggerableEvent) => {\n            // These following are confirm rules, otherwise we always resolve true\n            if (modal.props._isConfirm === true) {\n              if (e.trigger === 'ok') {\n                modal.props._promise.resolve(true)\n                return\n              }\n              if (e.trigger === 'cancel') {\n                modal.props._promise.resolve(false)\n                return\n              }\n              modal.props._promise.resolve(null)\n            }\n            modal.props._promise.resolve(true)\n          }\n        \"\n        @hidden=\"tools.remove?.(self)\"\n      />\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BvTriggerableEvent} from '../../utils'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BModalOrchestratorProps} from '../../types/ComponentProps'\nimport BModal from './BModal.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useModalController} from '../../composables/useModalController'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BModalOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n})\nconst props = useDefaults(_props, 'BModalOrchestrator')\n\nconst tools = useModalController()\n\ndefineExpose({\n  ...tools,\n})\n</script>\n"],"names":["fallbackClassSelector","_props","__props","props","useDefaults","emit","__emit","slots","_useSlots","computedId","useId","id","modelValue","_useModel","element","useTemplateRef","fallbackFocusElement","okButton","cancelButton","closeButton","onAfterEnter","autofocus","autofocusButton","okButtonFocus","value","closeButtonFocus","cancelButtonFocus","modalFocus","showRef","renderRef","renderBackdropRef","hide","show","toggle","computedNoAnimation","transitionProps","backdropTransitionProps","isLeaving","isVisible","trapActive","contentShowing","backdropReady","backdropVisible","useShowHide","needsFallback","useActivatedFocusTrap","isActive","noTrap","fallbackFocus","ref","classSelector","index","onKeyStroke","target","useSafeScrollLock","bodyScrolling","focused","useFocus","initialValue","hasHeaderCloseSlot","computed","isEmptySlot","modalDialogClasses","dialogClass","fullscreen","size","centered","scrollable","bodyColorClasses","useColorVariantClasses","bgVariant","bodyBgVariant","textVariant","bodyTextVariant","variant","bodyVariant","bodyClasses","bodyClass","headerColorClasses","headerBgVariant","headerTextVariant","headerVariant","borderVariant","headerBorderVariant","headerClasses","headerClass","headerCloseAttrs","headerCloseVariant","class","headerCloseClass","footerColorClasses","footerBgVariant","footerTextVariant","footerVariant","footerBorderVariant","footerClasses","footerClass","titleClasses","titleClass","titleVisuallyHidden","disableCancel","cancelDisabled","busy","disableOk","okDisabled","activePosition","activeModalCount","stackWithoutSelf","useModalManager","watch","newValue","oldValue","length","noStacking","computedZIndexNumber","computedZIndex","computedZIndexBackdrop","sharedSlots","cancel","close","ok","active","visible","__expose","tools","useModalController"],"mappings":"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"}