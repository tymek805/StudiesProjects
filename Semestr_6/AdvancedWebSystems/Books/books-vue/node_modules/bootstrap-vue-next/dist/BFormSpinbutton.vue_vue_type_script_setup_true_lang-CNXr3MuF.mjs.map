{"version":3,"file":"BFormSpinbutton.vue_vue_type_script_setup_true_lang-CNXr3MuF.mjs","sources":["../src/composables/useRtl.ts","../src/components/BFormSpinbutton/BFormSpinbutton.vue"],"sourcesContent":["import {inject, onMounted, watch} from 'vue'\nimport {rtlPluginKey} from '../utils/keys'\n\nexport const useRtl = () => {\n  const rtlPlugin = inject(rtlPluginKey)\n\n  onMounted(() => {\n    // I can't think of a reason why one might want to destroy these if unmounted...\n    watch(\n      () => rtlPlugin?.locale.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('lang', newValue ?? '')\n      },\n      {immediate: true}\n    )\n\n    watch(\n      () => rtlPlugin?.isRtl.value,\n      (newValue) => {\n        const html = document.documentElement\n        html.setAttribute('dir', (newValue ?? false) ? 'rtl' : 'ltr')\n      },\n      {immediate: true}\n    )\n  })\n\n  return {...rtlPlugin}\n}\n","<template>\n  <div\n    ref=\"_element\"\n    class=\"b-form-spinbutton form-control\"\n    :class=\"computedClasses\"\n    role=\"group\"\n    :lang=\"computedLocale\"\n    :tabindex=\"props.disabled ? undefined : '-1'\"\n    :title=\"props.ariaLabel\"\n    @click=\"focused = true\"\n  >\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.top.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.top.button\"\n        @mousedown=\"buttons.top.handler\"\n        @touchstart=\"buttons.top.handler\"\n      >\n        <svg v-bind=\"buttons.top.svg\">\n          <path v-bind=\"buttons.top.path\" />\n        </svg>\n      </button>\n    </slot>\n    <input\n      v-if=\"props.name && !props.disabled\"\n      key=\"hidden\"\n      type=\"hidden\"\n      :name=\"props.name\"\n      :form=\"props.form\"\n      :value=\"valueAsFixed\"\n    />\n    <output\n      :id=\"computedId\"\n      key=\"output\"\n      class=\"flex-grow-1\"\n      :class=\"computedSpinClasses\"\n      :dir=\"(isRtl ?? false) ? 'rtl' : 'ltr'\"\n      :tabindex=\"props.disabled ? undefined : '0'\"\n      role=\"spinbutton\"\n      aria-live=\"off\"\n      :aria-label=\"props.ariaLabel || undefined\"\n      :aria-invalid=\"\n        props.state === false || (!modelValue !== null && props.required) ? true : undefined\n      \"\n      :aria-required=\"props.required ? true : undefined\"\n      :aria-valuemin=\"computedMin\"\n      :aria-valuemax=\"computedMax\"\n      :aria-valuenow=\"modelValue !== null ? modelValue : undefined\"\n      :aria-valuetext=\"modelValue !== null ? computedFormatter(modelValue) : undefined\"\n    >\n      <bdi>\n        {{ (modelValue !== null ? computedFormatter(modelValue) : props.placeholder) || '' }}\n      </bdi>\n    </output>\n    <!-- eslint-disable-next-line prettier/prettier -->\n    <!-- prettier-ignore -->\n    <slot :name=\"(buttons.bottom.slot.name as 'increment' | 'decrement')\" :has-focus=\"focused\">\n      <button\n        v-bind=\"buttons.bottom.button\"\n        @mousedown=\"buttons.bottom.handler\"\n        @touchstart=\"buttons.bottom.handler\"\n      >\n        <svg v-bind=\"buttons.bottom.svg\">\n          <path v-bind=\"buttons.bottom.path\" />\n        </svg>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport type {BFormSpinbuttonProps} from '../../types/ComponentProps'\nimport {eventOnOff, stopEvent} from '../../utils/event'\nimport {\n  CODE_DOWN,\n  CODE_END,\n  CODE_HOME,\n  CODE_PAGEDOWN,\n  CODE_PAGEUP,\n  CODE_UP,\n} from '../../utils/constants'\nimport {onKeyStroke, useFocus, useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useRtl} from '../../composables/useRtl'\nimport type {ButtonType} from '../../types/ButtonType'\n\nconst KEY_CODES = [CODE_UP, CODE_DOWN, CODE_HOME, CODE_END, CODE_PAGEUP, CODE_PAGEDOWN]\n\nconst _props = withDefaults(defineProps<Omit<BFormSpinbuttonProps, 'modelValue'>>(), {\n  ariaControls: undefined,\n  ariaLabel: undefined,\n  disabled: false,\n  form: undefined,\n  formatterFn: undefined,\n  id: undefined,\n  inline: false,\n  labelDecrement: 'Decrement',\n  labelIncrement: 'Increment',\n  locale: undefined,\n  max: defaultValues.max,\n  min: defaultValues.min,\n  name: undefined,\n  placeholder: undefined,\n  readonly: false,\n  repeatDelay: defaultValues.repeatDelay,\n  repeatInterval: defaultValues.repeatInterval,\n  repeatStepMultiplier: defaultValues.repeatMultiplier,\n  repeatThreshold: defaultValues.repeatThreshold,\n  required: false,\n  size: undefined,\n  state: null,\n  step: defaultValues.step,\n  vertical: false,\n  wrap: false,\n})\nconst props = useDefaults(_props, 'BFormSpinbutton')\n\nconst emit = defineEmits<{\n  change: [value: number | null]\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  decrement?: (props: {hasFocus: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  increment?: (props: {hasFocus: boolean}) => any\n}>()\n\nconst modelValue = defineModel<Exclude<BFormSpinbuttonProps['modelValue'], undefined>>({\n  default: null,\n})\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst {focused} = useFocus(element)\n\nconst computedId = useId(() => props.id, 'spinbutton')\n\nconst computedClasses = computed(() => ({\n  'disabled': props.disabled,\n  'readonly': props.readonly,\n  'focus': focused.value,\n  'd-inline-flex': props.inline || props.vertical,\n  'd-flex': !props.inline && !props.vertical,\n  'align-items-stretch': !props.vertical,\n  'flex-column': props.vertical,\n  [`form-control-${props.size}`]: props.size !== undefined,\n}))\n\nconst computedSpinClasses = computed(() => ({\n  'd-flex': props.vertical,\n  'align-self-center': !props.vertical,\n  'align-items-center': props.vertical,\n  'border-top': props.vertical,\n  'border-bottom': props.vertical,\n  'border-start': !props.vertical,\n  'border-end': !props.vertical,\n}))\n\n//non reactive properties\nlet $_autoDelayTimer: ReturnType<typeof setTimeout> | undefined\nlet $_autoRepeatTimer: ReturnType<typeof setTimeout> | undefined\nlet $_keyIsDown = false\n\n// const computedInline = computed(() => props.inline && !props.vertical)\n\n// const computedReadonly = computed(() => props.readonly && !props.disabled)\n\nconst stepNumber = useToNumber(() => props.step)\nconst computedStep = computed(() =>\n  Number.isNaN(stepNumber.value) ? defaultValues.step : stepNumber.value\n)\n\nconst minNumber = useToNumber(() => props.min)\nconst computedMin = computed(() =>\n  Number.isNaN(minNumber.value) ? defaultValues.min : minNumber.value\n)\n\nconst maxNumber = useToNumber(() => props.max)\nconst computedMax = computed(() => {\n  const step = computedStep.value\n  const min = computedMin.value\n  return Math.floor((maxNumber.value - min) / step) * step + min\n})\n\nconst repeatDelayNumber = useToNumber(() => props.repeatDelay, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedDelay = computed(() =>\n  repeatDelayNumber.value > 0 ? repeatDelayNumber.value : defaultValues.repeatDelay\n)\n\nconst repeatIntervalNumber = useToNumber(() => props.repeatInterval, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedInterval = computed(() =>\n  repeatIntervalNumber.value > 0 ? repeatIntervalNumber.value : defaultValues.repeatInterval\n)\n\nconst repeatThresholdNumber = useToNumber(() => props.repeatThreshold, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedThreshold = computed(() =>\n  Math.max(\n    Number.isNaN(repeatThresholdNumber.value)\n      ? defaultValues.repeatThreshold\n      : repeatThresholdNumber.value,\n    1\n  )\n)\n\nconst repeatStepMultiplierNumber = useToNumber(() => props.repeatStepMultiplier, {\n  nanToZero: true,\n  method: 'parseInt',\n})\nconst computedStepMultiplier = computed(() =>\n  Math.max(\n    Number.isNaN(repeatStepMultiplierNumber.value)\n      ? defaultValues.repeatMultiplier\n      : repeatStepMultiplierNumber.value,\n    1\n  )\n)\n\nconst computedPrecision = computed(() => {\n  const step = computedStep.value\n  return Math.floor(step) === step ? 0 : (step.toString().split('.')[1] || '').length\n})\n\nconst computedMultiplier = computed(() => Math.pow(10, computedPrecision.value || 0))\n\nconst valueAsFixed = computed(() =>\n  modelValue.value === null ? '' : modelValue.value.toFixed(computedPrecision.value)\n)\n\nconst {isRtl, locale: globalLocale} = useRtl()\n\nconst computedLocale = computed(() => {\n  const loc = (props.locale ?? globalLocale?.value) || 'locale'\n  const locales = [loc]\n  const nf = new Intl.NumberFormat(locales)\n  return nf.resolvedOptions().locale\n})\n\nconst defaultFormatter = () =>\n  new Intl.NumberFormat(computedLocale.value, {\n    style: 'decimal',\n    useGrouping: false,\n    minimumIntegerDigits: 1,\n    minimumFractionDigits: computedPrecision.value,\n    maximumFractionDigits: computedPrecision.value,\n    notation: 'standard',\n  }).format\n\nconst computedFormatter = computed(() => props.formatterFn ?? defaultFormatter())\n\nconst stepValue = (direction: number) => {\n  // Sets a new incremented or decremented value, supporting optional wrapping\n  // Direction is either +1 or -1 (or a multiple thereof)\n  let {value} = modelValue\n  if (!props.disabled && value !== null) {\n    const step = computedStep.value * direction\n    const min = computedMin.value\n    const max = computedMax.value\n    const multiplier = computedMultiplier.value\n    const {wrap} = props\n    // We ensure that the value steps like a native input\n    value = Math.round((value - min) / step) * step + min + step\n    // We ensure that precision is maintained (decimals)\n    value = Math.round(value * multiplier) / multiplier\n    // Handle if wrapping is enabled\n    modelValue.value = value > max ? (wrap ? min : max) : value < min ? (wrap ? max : min) : value\n  }\n}\n\nconst stepUp = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = computedMin.value\n    return\n  }\n  stepValue(+1 * multiplier)\n}\n\nconst stepDown = (multiplier = 1) => {\n  if (modelValue.value === null) {\n    modelValue.value = props.wrap ? computedMax.value : computedMin.value\n    return\n  }\n  stepValue(-1 * multiplier)\n}\n\nonKeyStroke(\n  KEY_CODES,\n  (event) => {\n    const {code, altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    // https://w3c.github.io/aria-practices/#spinbutton\n    stopEvent(event, {immediatePropagation: true})\n    if ($_keyIsDown) {\n      // Keypress is already in progress\n      return\n    }\n\n    resetTimers()\n    if ([CODE_UP, CODE_DOWN].includes(code)) {\n      // The following use the custom auto-repeat handling\n\n      $_keyIsDown = true\n      if (code === CODE_UP) {\n        handleStepRepeat(event, stepUp)\n        return\n      }\n      if (code === CODE_DOWN) {\n        handleStepRepeat(event, stepDown)\n      }\n      return\n    }\n    // These use native OS key repeating\n    if (code === CODE_PAGEUP) {\n      stepUp(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_PAGEDOWN) {\n      stepDown(computedStepMultiplier.value)\n      return\n    }\n    if (code === CODE_HOME) {\n      modelValue.value = computedMin.value\n      return\n    }\n    if (code === CODE_END) {\n      modelValue.value = computedMax.value\n    }\n  },\n  {target: element, eventName: 'keydown'}\n)\n\nonKeyStroke(\n  KEY_CODES,\n  (event: Readonly<KeyboardEvent>) => {\n    // Emit a change event when the keyup happens\n\n    const {altKey, ctrlKey, metaKey} = event\n\n    if (props.disabled || props.readonly || altKey || ctrlKey || metaKey) return\n\n    stopEvent(event, {immediatePropagation: true})\n    resetTimers()\n    $_keyIsDown = false\n    emit('change', modelValue.value)\n  },\n  {target: element, eventName: 'keyup'}\n)\n\n// takes in a mount or Keyboard Event\nconst handleStepRepeat = (event: Readonly<Event>, stepper: (step: number) => void) => {\n  const {type} = event || {}\n\n  if (!props.disabled && !props.readonly) {\n    if (isMouseEvent(event)) {\n      // We only respond to left (main === 0) button clicks\n      if (type === 'mousedown' && event.button) return\n    }\n    resetTimers()\n    // Step the counter initially\n    stepper(1)\n    const threshold = computedThreshold.value\n    const multiplier = computedStepMultiplier.value\n    const delay = computedDelay.value\n    const interval = computedInterval.value\n\n    // Initiate the delay/repeat interval\n    $_autoDelayTimer = setTimeout(() => {\n      let count = 0\n      $_autoRepeatTimer = setInterval(() => {\n        // After N initial repeats, we increase the incrementing step amount\n        // We do this to minimize screen reader announcements of the value\n        // (values are announced every change, which can be chatty for SR users)\n        // And to make it easer to select a value when the range is large\n        stepper(count < threshold ? 1 : multiplier)\n        count++\n      }, interval)\n    }, delay)\n  }\n}\n\nconst isMouseEvent = (evt: Readonly<Event>): evt is MouseEvent =>\n  evt.type === 'mouseup' || evt.type === 'mousedown'\n\nconst onMouseup: EventListener = (event: Readonly<Event>) => {\n  // `<body>` listener, only enabled when mousedown starts\n\n  if (isMouseEvent(event)) {\n    if (event.type === 'mouseup' && event.button) {\n      // Ignore non left button (main === 0) mouse button click\n      return\n    }\n  }\n\n  stopEvent(event, {immediatePropagation: true})\n  resetTimers()\n  setMouseup(false)\n  // Trigger the change event\n  emit('change', modelValue.value)\n}\n\nconst setMouseup = (on: boolean) => {\n  // Enable or disabled the body mouseup/touchend handlers\n  // Use try/catch to handle case when called server side\n  try {\n    eventOnOff(on, [document.body, 'mouseup', onMouseup, false])\n    eventOnOff(on, [document.body, 'touchend', onMouseup, false])\n  } catch {\n    /* empty */\n  }\n}\nconst resetTimers = () => {\n  clearTimeout($_autoDelayTimer)\n  clearInterval($_autoRepeatTimer)\n  $_autoDelayTimer = undefined\n  $_autoRepeatTimer = undefined\n}\n\nconst buttons = computed(() => {\n  const incrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-plus',\n      viewBox: '0 0 16 16',\n    },\n    path: {\n      d: 'M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z',\n    },\n  } as const\n\n  const decrementSvgAttrs = {\n    svg: {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '16',\n      height: '16',\n      fill: 'currentColor',\n      class: 'bi bi-dash',\n      viewBox: '0 0 16 16',\n    },\n    path: {d: 'M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z'},\n  } as const\n\n  const sharedButtonAttrs = {\n    'class': [{'py-0': !props.vertical}, 'btn', 'btn-sm', 'border-0', 'rounded-0'],\n    'tabindex': '-1',\n    'type': 'button' as ButtonType,\n    'disabled': props.disabled || props.readonly,\n    'aria-disabled': props.disabled || props.readonly ? true : undefined,\n    'aria-controls': computedId.value,\n  }\n\n  const sharedSvgAttrs = {\n    'aria-hidden': true,\n    'scale': focused.value ? 1.5 : 1.25,\n  }\n\n  const handler = (event: Readonly<Event>, stepper: (multiplier?: number) => void) => {\n    if (!props.disabled && !props.readonly) {\n      stopEvent(event, {immediatePropagation: true})\n      setMouseup(true)\n      // Since we `preventDefault()`, we must manually focus the button\n      // Though it's likely captured from the element click focus\n      focused.value = true\n      handleStepRepeat(event, stepper)\n    }\n  }\n\n  const incrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelIncrement || undefined,\n      'aria-keyshortcuts': 'ArrowUp',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...incrementSvgAttrs.svg,\n    },\n    path: {\n      ...incrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'increment',\n    },\n    handler: (e: Event) => handler(e, stepUp),\n  }\n\n  const decrementAttrs = {\n    button: {\n      ...sharedButtonAttrs,\n      'aria-label': props.labelDecrement || undefined,\n      'aria-keyshortcuts': 'ArrowDown',\n    },\n    svg: {\n      ...sharedSvgAttrs,\n      ...decrementSvgAttrs.svg,\n    },\n    path: {\n      ...decrementSvgAttrs.path,\n    },\n    slot: {\n      name: 'decrement',\n    },\n    handler: (e: Readonly<Event>) => handler(e, stepDown),\n  }\n\n  return {\n    top: {\n      ...(props.vertical ? incrementAttrs : decrementAttrs),\n    },\n    bottom: {\n      ...(!props.vertical ? incrementAttrs : decrementAttrs),\n    },\n  }\n})\n</script>\n\n<script lang=\"ts\">\nconst defaultValues = {\n  min: 1,\n  max: 100,\n  step: 1,\n  repeatDelay: 500,\n  repeatInterval: 100,\n  repeatThreshold: 10,\n  repeatMultiplier: 4,\n} as const\n</script>\n"],"names":["_useModel"],"mappings":"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"}