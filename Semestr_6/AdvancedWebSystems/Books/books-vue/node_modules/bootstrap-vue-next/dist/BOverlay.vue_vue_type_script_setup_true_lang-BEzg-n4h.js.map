{"version":3,"file":"BOverlay.vue_vue_type_script_setup_true_lang-BEzg-n4h.js","sources":["../src/components/BOverlay/BOverlay.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    :tag=\"props.wrapTag\"\n    class=\"b-overlay-wrap position-relative\"\n    :aria-busy=\"computedAriaBusy\"\n    :skip=\"props.noWrap\"\n  >\n    <slot />\n    <Transition\n      v-bind=\"fadeTransitions\"\n      enter-to-class=\"show\"\n      name=\"fade\"\n      @after-enter=\"emit('shown')\"\n      @after-leave=\"emit('hidden')\"\n    >\n      <component\n        :is=\"props.overlayTag\"\n        v-if=\"props.show\"\n        class=\"b-overlay\"\n        :class=\"overlayClasses\"\n        :style=\"overlayStyles\"\n        @click=\"emit('click', $event)\"\n      >\n        <div class=\"position-absolute\" :class=\"blurClasses\" :style=\"blurStyles\" />\n\n        <div class=\"position-absolute\" :style=\"spinWrapperStyles\">\n          <slot name=\"overlay\" v-bind=\"spinnerAttrs\">\n            <BSpinner v-if=\"!props.noSpinner\" v-bind=\"spinnerAttrs\" />\n          </slot>\n        </div>\n      </component>\n    </Transition>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BOverlayProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport type {BgColorVariant} from '../../types/ColorTypes'\nimport {useFadeTransition} from '../../composables/useTransitions'\n\nconst _props = withDefaults(defineProps<BOverlayProps>(), {\n  blur: '2px',\n  bgColor: undefined,\n  fixed: false,\n  noCenter: false,\n  noFade: false,\n  noSpinner: false,\n  noWrap: false,\n  opacity: 0.85,\n  overlayTag: 'div',\n  show: false,\n  spinnerSmall: false,\n  spinnerType: 'border',\n  spinnerVariant: undefined,\n  variant: 'light',\n  wrapTag: 'div',\n  zIndex: 10,\n  // RadiusElementExtendables props\n  rounded: false,\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\nconst props = useDefaults(_props, 'BOverlay')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n  hidden: []\n  shown: []\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  overlay?: (props: typeof spinnerAttrs.value) => any\n}>()\n\nconst positionStyles = {top: 0, left: 0, bottom: 0, right: 0} as const\n\nconst fadeTransitions = useFadeTransition(() => !props.noFade)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: props.rounded,\n  roundedTop: props.roundedTop,\n  roundedBottom: props.roundedBottom,\n  roundedStart: props.roundedStart,\n  roundedEnd: props.roundedEnd,\n}))\n\nconst computedAriaBusy = computed(() => (props.show ? true : null))\n\nconst spinnerAttrs = computed(() => ({\n  type: props.spinnerType,\n  variant: props.spinnerVariant,\n  small: props.spinnerSmall,\n}))\n\nconst overlayStyles = computed(() => ({\n  ...positionStyles,\n  zIndex: props.zIndex || 10,\n}))\n\nconst overlayClasses = computed(() => ({\n  'position-absolute': !props.noWrap || !props.fixed,\n  'position-fixed': props.noWrap && props.fixed,\n}))\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    bgVariant: props.variant !== null && !props.bgColor ? (props.variant as BgColorVariant) : null,\n  }))\n)\nconst blurClasses = computed(() => [colorClasses.value, radiusElementClasses.value])\n\nconst blurStyles = computed(() => ({\n  ...positionStyles,\n  opacity: props.opacity,\n  backgroundColor: props.bgColor || undefined,\n  backdropFilter: props.blur ? `blur(${props.blur})` : undefined,\n}))\n\nconst spinWrapperStyles = computed(() =>\n  props.noCenter\n    ? positionStyles\n    : {\n        top: '50%',\n        left: '50%',\n        transform: 'translateX(-50%) translateY(-50%)',\n      }\n)\n</script>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","positionStyles","top","left","bottom","right","fadeTransitions","useFadeTransition","noFade","radiusElementClasses","useRadiusElementClasses","rounded","roundedTop","roundedBottom","roundedStart","roundedEnd","computedAriaBusy","computed","show","spinnerAttrs","type","spinnerType","variant","spinnerVariant","small","spinnerSmall","overlayStyles","zIndex","overlayClasses","noWrap","fixed","colorClasses","useColorVariantClasses","bgVariant","bgColor","blurClasses","value","blurStyles","opacity","backgroundColor","backdropFilter","blur","spinWrapperStyles","noCenter","transform"],"mappings":"yrCA8CA,MAAMA,EAASC,EAyBTC,EAAQC,EAAAA,YAAYH,EAAQ,YAE5BI,EAAOC,EAaPC,EAAiB,CAACC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GAErDC,EAAkBC,EAAAA,mBAAkB,KAAOV,EAAMW,SAEjDC,EAAuBC,EAAAA,yBAAwB,KAAO,CAC1DC,QAASd,EAAMc,QACfC,WAAYf,EAAMe,WAClBC,cAAehB,EAAMgB,cACrBC,aAAcjB,EAAMiB,aACpBC,WAAYlB,EAAMkB,eAGdC,EAAmBC,EAAAA,UAAS,MAAOpB,EAAMqB,MAAc,OAEvDC,EAAeF,EAAAA,UAAS,KAAO,CACnCG,KAAMvB,EAAMwB,YACZC,QAASzB,EAAM0B,eACfC,MAAO3B,EAAM4B,iBAGTC,EAAgBT,EAAAA,UAAS,KAAO,IACjChB,EACH0B,OAAQ9B,EAAM8B,QAAU,OAGpBC,EAAiBX,EAAAA,UAAS,KAAO,CACrC,qBAAsBpB,EAAMgC,SAAWhC,EAAMiC,MAC7C,iBAAkBjC,EAAMgC,QAAUhC,EAAMiC,UAGpCC,EAAeC,EAAAA,uBACnBf,EAAAA,UAAS,KAAO,CACdgB,UAA6B,OAAlBpC,EAAMyB,SAAqBzB,EAAMqC,QAA8C,KAAnCrC,EAAMyB,aAG3Da,EAAclB,EAAAA,UAAS,IAAM,CAACc,EAAaK,MAAO3B,EAAqB2B,SAEvEC,EAAapB,EAAAA,UAAS,KAAO,IAC9BhB,EACHqC,QAASzC,EAAMyC,QACfC,gBAAiB1C,EAAMqC,cAAW,EAClCM,eAAgB3C,EAAM4C,KAAO,QAAQ5C,EAAM4C,aAAU,MAGjDC,EAAoBzB,EAAAA,UAAS,IACjCpB,EAAM8C,SACF1C,EACA,CACEC,IAAK,MACLC,KAAM,MACNyC,UAAW"}