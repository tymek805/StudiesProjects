{"version":3,"file":"BCarouselSlide.vue_vue_type_script_setup_true_lang--lhyattV.js","sources":["../src/components/BCarousel/BCarousel.vue","../src/utils/getSlotElements.ts","../src/components/BCarousel/BCarouselSlide.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"computedId\"\n    ref=\"_element\"\n    class=\"carousel slide pointer-event\"\n    :class=\"computedClasses\"\n  >\n    <div\n      v-if=\"props.indicators\"\n      class=\"carousel-indicators\"\n      :aria-label=\"props.labelIndicators\"\n      :aria-owns=\"buttonOwnership\"\n    >\n      <!-- :data-bs-target=\"`#${computedId}`\" is required since the classes target elems with that attr -->\n      <button\n        v-for=\"(_, i) in slides.length\"\n        :key=\"i\"\n        type=\"button\"\n        data-bs-target=\"\"\n        :class=\"i === modelValue ? 'active' : ''\"\n        :aria-current=\"i === modelValue ? true : undefined\"\n        :aria-label=\"`${props.indicatorsButtonLabel} ${i}`\"\n        :aria-controls=\"buttonOwnership\"\n        :aria-describedby=\"slideValues?.[i]._id\"\n        @click=\"goToValue(i)\"\n      />\n    </div>\n\n    <div ref=\"_relatedTarget\" class=\"carousel-inner\">\n      <TransitionGroup\n        :enter-from-class=\"enterClasses\"\n        :enter-active-class=\"enterClasses\"\n        :enter-to-class=\"enterClasses\"\n        :leave-from-class=\"leaveClasses\"\n        :leave-active-class=\"leaveClasses\"\n        :leave-to-class=\"leaveClasses\"\n        @before-leave=\"onBeforeLeave\"\n        @after-leave=\"onAfterLeave\"\n        @after-enter=\"onAfterEnter\"\n        @enter=\"onEnter\"\n      >\n        <component\n          :is=\"slide\"\n          v-for=\"(slide, i) in slides\"\n          v-show=\"i === modelValue\"\n          :key=\"i\"\n          ref=\"_slideValues\"\n          :class=\"{active: i === modelValue && isTransitioning === false}\"\n          :style=\"props.noAnimation && {transition: 'none'}\"\n        />\n      </TransitionGroup>\n    </div>\n\n    <template v-if=\"props.controls\">\n      <button class=\"carousel-control-prev\" type=\"button\" @click=\"onClickPrev\">\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsPrevText }}</span>\n      </button>\n      <button class=\"carousel-control-next\" type=\"button\" @click=\"onClickNext\">\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n        <span class=\"visually-hidden\">{{ props.controlsNextText }}</span>\n      </button>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvCarouselEvent} from '../../utils'\nimport {computed, onMounted, provide, ref, toRef, useTemplateRef, watch} from 'vue'\nimport {useId} from '../../composables/useId'\nimport type {BCarouselProps} from '../../types/ComponentProps'\nimport {onKeyStroke, useElementHover, useIntervalFn, useSwipe, useToNumber} from '@vueuse/core'\nimport type BCarouselSlide from './BCarouselSlide.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {Numberish} from '../../types/CommonTypes'\nimport {getSlotElements} from '../../utils/getSlotElements'\nimport {carouselInjectionKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<Omit<BCarouselProps, 'modelValue'>>(), {\n  background: undefined,\n  controls: false,\n  controlsNextText: 'Next',\n  controlsPrevText: 'Previous',\n  fade: false,\n  id: undefined,\n  imgHeight: undefined,\n  imgWidth: undefined,\n  indicators: false,\n  indicatorsButtonLabel: 'Slide',\n  interval: 5000,\n  labelIndicators: 'Select a slide to display',\n  keyboard: true,\n  noAnimation: false,\n  noHoverPause: false,\n  noTouch: false,\n  noWrap: false,\n  ride: false,\n  rideReverse: false,\n  touchThreshold: 50,\n})\nconst props = useDefaults(_props, 'BCarousel')\n\nconst emit = defineEmits<{\n  'slide': [value: BvCarouselEvent]\n  'slid': [value: BvCarouselEvent]\n  'prev-click': [value: MouseEvent]\n  'next-click': [value: MouseEvent]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel')\nconst buttonOwnership = useId(undefined, 'carousel-button-ownership')\n\nconst modelValue = defineModel<Exclude<BCarouselProps['modelValue'], undefined>>({default: 0})\n\nconst slideValues = useTemplateRef<InstanceType<typeof BCarouselSlide>[]>('_slideValues')\n\nconst touchThresholdNumber = useToNumber(() => props.touchThreshold)\nconst slideInterval = ref<Numberish | null>(null)\nonMounted(() => {\n  slideInterval.value =\n    slideValues.value?.find((slid) => slid.$el.style.display !== 'none')?._interval ?? null\n})\nconst intervalNumber = useToNumber(() => slideInterval.value ?? props.interval)\n\nconst isTransitioning = ref(false)\nconst rideStarted = ref(false)\nconst direction = ref(true)\nconst relatedTarget = useTemplateRef<HTMLElement>('_relatedTarget')\nconst element = useTemplateRef<HTMLElement>('_element')\nconst previousModelValue = ref(modelValue.value)\n\nconst isHovering = useElementHover(element)\n\n// Class carousel-item is a static property\n// If you make it static, the direction can be reversed -- properly (atm it does the carousel-item-${} logic backwards for entering, a weird hack)\n// So all that would be great. However, when you do this, it will break the transition flow. Something about it breaks and I'm not sure why!\n// Try it by removing carousel-item from below and making `!direction.value` => `direction.value` for enter\n// Then reviewing the behavior\nconst enterClasses = computed(\n  () =>\n    `carousel-item carousel-item-${!direction.value ? 'next' : 'prev'} carousel-item-${\n      !direction.value ? 'start' : 'end'\n    }`\n)\nconst leaveClasses = computed(\n  () => `carousel-item active carousel-item-${direction.value ? 'start' : 'end'}`\n)\n\nconst {pause, resume} = useIntervalFn(\n  () => {\n    if (props.rideReverse) {\n      prev()\n      return\n    }\n    next()\n  },\n  intervalNumber,\n  {immediate: props.ride === 'carousel'}\n)\n\nconst isRiding = computed(\n  () => (props.ride === true && rideStarted.value === true) || props.ride === 'carousel'\n)\nconst slides = computed(() => getSlotElements(slots.default, 'BCarouselSlide'))\nconst computedClasses = computed(() => ({'carousel-fade': props.fade}))\n\nconst buildBvCarouselEvent = (event: 'slid' | 'slide') =>\n  new BvCarouselEvent(event, {\n    componentId: computedId.value,\n    cancelable: false,\n    target: element.value,\n    direction: direction.value ? 'right' : 'left',\n    from: previousModelValue.value,\n    to: modelValue.value,\n    relatedTarget: relatedTarget.value?.children[modelValue.value] ?? null,\n  })\n\nconst goToValue = (value: number): void => {\n  if (isTransitioning.value === true) return\n\n  if (props.ride === true) {\n    rideStarted.value = true\n  }\n  if (isRiding.value === true) {\n    resume()\n  }\n  direction.value = value < modelValue.value ? false : true\n  if (value >= slides.value.length) {\n    if (props.noWrap) return\n    modelValue.value = 0\n    return\n  }\n  if (value < 0) {\n    if (props.noWrap) return\n    modelValue.value = slides.value.length - 1\n    return\n  }\n  previousModelValue.value = modelValue.value\n  modelValue.value = value\n}\n\nconst prev = (): void => {\n  goToValue(modelValue.value - 1)\n}\nconst next = (): void => {\n  goToValue(modelValue.value + 1)\n}\n\nconst onKeydown = (fn: () => void) => {\n  if (props.keyboard === false) return\n  fn()\n}\n\nconst onMouseEnter = () => {\n  if (props.noHoverPause) return\n  pause()\n}\nconst onMouseLeave = () => {\n  if (!isRiding.value) return\n  resume()\n}\n\nconst {lengthX} = useSwipe(element, {\n  passive: true,\n  onSwipeStart() {\n    if (props.noTouch === true) return\n    pause()\n  },\n  onSwipeEnd() {\n    if (props.noTouch === true) return\n    const resumeRiding = () => {\n      if (isRiding.value === false) return\n      resume()\n    }\n    if (lengthX.value >= touchThresholdNumber.value) {\n      next()\n      resumeRiding()\n      return\n    }\n    if (lengthX.value <= -touchThresholdNumber.value) {\n      prev()\n      resumeRiding()\n    }\n  },\n})\n\nconst onBeforeLeave = () => {\n  emit('slide', buildBvCarouselEvent('slide'))\n  isTransitioning.value = true\n}\nconst onAfterLeave = () => {\n  emit('slid', buildBvCarouselEvent('slid'))\n  isTransitioning.value = false\n}\n// carousel-item class is removed from the slide during the transition,\n// as is included within enter classes.\n// The first slide recovers carousel-item class,\nconst onAfterEnter = (el: Readonly<Element>) => {\n  if (modelValue.value !== 0) {\n    el.classList.add('carousel-item')\n  }\n}\nconst onEnter = (el: Readonly<Element>) => {\n  slideInterval.value = slideValues.value?.find((slid) => slid.$el === el)?._interval ?? null\n}\n\nonKeyStroke(\n  'ArrowLeft',\n  () => {\n    onKeydown(prev)\n  },\n  {target: element}\n)\nonKeyStroke(\n  'ArrowRight',\n  () => {\n    onKeydown(next)\n  },\n  {target: element}\n)\n\nwatch(\n  () => props.ride,\n  () => {\n    rideStarted.value = false\n  }\n)\n\nwatch(isHovering, (newValue) => {\n  if (newValue) {\n    onMouseEnter()\n    return\n  }\n  onMouseLeave()\n})\n\nconst onClickPrev = (event: MouseEvent) => {\n  emit('prev-click', event)\n  if (event.defaultPrevented) return\n  prev()\n}\nconst onClickNext = (event: MouseEvent) => {\n  emit('next-click', event)\n  if (event.defaultPrevented) return\n  next()\n}\n\ndefineExpose({\n  next,\n  pause,\n  prev,\n  resume,\n})\n\nprovide(carouselInjectionKey, {\n  background: toRef(() => props.background),\n  width: toRef(() => props.imgWidth),\n  height: toRef(() => props.imgHeight),\n})\n</script>\n","import type {Slot, VNode} from 'vue'\n\nexport const getSlotElements = (slot: Slot | undefined, filterBy: string): VNode[] =>\n  (slot?.() ?? [])\n    .reduce((arr: VNode[], slot: VNode) => {\n      if (typeof slot.type === 'symbol') {\n        arr = arr.concat(slot.children as unknown as VNode)\n      } else {\n        arr.push(slot)\n      }\n      return arr\n    }, [])\n    .filter((child) => (child.type as {__name: string} | undefined)?.__name === filterBy)\n","<template>\n  <div :id=\"computedId\" class=\"carousel-item\" :style=\"computedStyle\">\n    <slot name=\"img\">\n      <BImg\n        class=\"d-block w-100\"\n        :alt=\"props.imgAlt\"\n        :srcset=\"props.imgSrcset\"\n        :src=\"props.imgSrc\"\n        :width=\"props.imgWidth || parentData?.width.value\"\n        :height=\"props.imgHeight || parentData?.height.value\"\n        :blank=\"props.imgBlank\"\n        :blank-color=\"props.imgBlankColor\"\n      />\n    </slot>\n    <component\n      :is=\"props.contentTag\"\n      v-if=\"hasContent\"\n      class=\"carousel-caption\"\n      :class=\"computedContentClasses\"\n    >\n      <component :is=\"props.captionTag\" v-if=\"hasCaption\">\n        <slot name=\"caption\">\n          <span>{{ props.caption }}</span>\n        </slot>\n      </component>\n      <component :is=\"props.textTag\" v-if=\"hasText\">\n        <slot name=\"text\">\n          <span>{{ props.text }}</span>\n        </slot>\n      </component>\n      <slot />\n    </component>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type CSSProperties, inject, toRef} from 'vue'\nimport type {BCarouselSlideProps} from '../../types/ComponentProps'\nimport {carouselInjectionKey} from '../../utils/keys'\nimport BImg from '../BImg/BImg.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useId} from '../../composables/useId'\n\nconst _props = withDefaults(defineProps<BCarouselSlideProps>(), {\n  background: undefined,\n  caption: undefined,\n  captionTag: 'h3',\n  contentTag: 'div',\n  contentVisibleUp: undefined,\n  id: undefined,\n  imgAlt: undefined,\n  imgBlank: false,\n  imgBlankColor: 'transparent',\n  imgHeight: undefined,\n  imgSrc: undefined,\n  imgSrcset: undefined,\n  imgWidth: undefined,\n  interval: undefined,\n  text: undefined,\n  textTag: 'p',\n})\nconst props = useDefaults(_props, 'BCarouselSlide')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  caption?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  img?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  text?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'carousel-slide')\nconst parentData = inject(carouselInjectionKey, null)\n\nconst hasText = computed(() => props.text || !isEmptySlot(slots.text))\nconst hasCaption = computed(() => props.caption || !isEmptySlot(slots.caption))\nconst hasContent = computed(() => hasText.value || hasCaption.value || !isEmptySlot(slots.default))\n\nconst computedStyle = computed<CSSProperties>(() => ({\n  background: `${\n    props.background || parentData?.background.value || 'rgb(171, 171, 171)'\n  } none repeat scroll 0% 0%`,\n}))\n\nconst computedContentClasses = computed(() => ({\n  'd-none': props.contentVisibleUp !== undefined,\n  [`d-${props.contentVisibleUp}-block`]: props.contentVisibleUp !== undefined,\n}))\n\ndefineExpose({\n  _interval: toRef(() => props.interval),\n  _id: computedId,\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","slots","_useSlots","computedId","useId","id","buttonOwnership","modelValue","_useModel","slideValues","useTemplateRef","touchThresholdNumber","useToNumber","touchThreshold","slideInterval","ref","onMounted","value","_b","_a","find","slid","$el","style","display","_interval","intervalNumber","interval","isTransitioning","rideStarted","direction","relatedTarget","element","previousModelValue","isHovering","useElementHover","enterClasses","computed","leaveClasses","pause","resume","useIntervalFn","rideReverse","prev","next","immediate","ride","isRiding","slides","getSlotElements","slot","default","filterBy","reduce","arr","type","concat","children","push","filter","child","__name","computedClasses","fade","buildBvCarouselEvent","event","BvCarouselEvent","componentId","cancelable","target","from","to","goToValue","length","noWrap","onKeydown","fn","keyboard","lengthX","useSwipe","passive","onSwipeStart","noTouch","onSwipeEnd","resumeRiding","onBeforeLeave","onAfterLeave","onAfterEnter","el","classList","add","onEnter","index$1","onKeyStroke","vue","watch","newValue","noHoverPause","onClickPrev","defaultPrevented","onClickNext","__expose","provide","carouselInjectionKey","background","toRef","width","imgWidth","height","imgHeight","parentData","inject","hasText","text","isEmptySlot","hasCaption","caption","hasContent","computedStyle","computedContentClasses","contentVisibleUp","_id"],"mappings":"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"}