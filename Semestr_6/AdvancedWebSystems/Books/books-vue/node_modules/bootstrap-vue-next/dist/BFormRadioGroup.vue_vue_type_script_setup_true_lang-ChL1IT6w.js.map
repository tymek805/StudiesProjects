{"version":3,"file":"BFormRadioGroup.vue_vue_type_script_setup_true_lang-ChL1IT6w.js","sources":["../src/components/BFormRadio/BFormRadio.vue","../src/components/BFormRadio/BFormRadioGroup.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper :skip=\"isButtonGroup\" :class=\"computedClasses\">\n    <input\n      :id=\"computedId\"\n      v-bind=\"$attrs\"\n      ref=\"_input\"\n      v-model=\"localValue\"\n      :class=\"inputClasses\"\n      type=\"radio\"\n      :disabled=\"props.disabled || parentData?.disabled.value\"\n      :required=\"computedRequired || undefined\"\n      :name=\"props.name || parentData?.name.value\"\n      :form=\"props.form || parentData?.form.value\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-labelledby=\"props.ariaLabelledby\"\n      :value=\"props.value\"\n      :aria-required=\"computedRequired || undefined\"\n    />\n    <label v-if=\"hasDefaultSlot || props.plain === false\" :for=\"computedId\" :class=\"labelClasses\">\n      <slot />\n    </label>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {useFocus} from '@vueuse/core'\nimport {computed, inject, useTemplateRef} from 'vue'\nimport {getClasses, getInputClasses, getLabelClasses} from '../../composables/useFormCheck'\nimport type {BFormRadioProps} from '../../types/ComponentProps'\nimport {isEmptySlot} from '../../utils/dom'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {RadioValue} from '../../types/RadioTypes'\nimport {useId} from '../../composables/useId'\nimport {radioGroupKey} from '../../utils/keys'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<Omit<BFormRadioProps, 'modelValue'>>(), {\n  ariaLabel: undefined,\n  ariaLabelledby: undefined,\n  autofocus: false,\n  button: false,\n  buttonGroup: false,\n  buttonVariant: null,\n  disabled: false,\n  form: undefined,\n  id: undefined,\n  inline: false,\n  name: undefined,\n  plain: false,\n  required: false,\n  reverse: false,\n  size: undefined,\n  state: null,\n  value: true,\n})\nconst props = useDefaults(_props, 'BFormRadio')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst modelValue = defineModel<BFormRadioProps['modelValue']>({\n  default: undefined,\n})\n\nconst computedId = useId(() => props.id, 'form-check')\n\nconst parentData = inject(radioGroupKey, null)\n\nconst input = useTemplateRef<HTMLElement>('_input')\n\nconst {focused} = useFocus(input, {\n  initialValue: props.autofocus,\n})\n\nconst hasDefaultSlot = computed(() => !isEmptySlot(slots.default))\n\nconst localValue = computed({\n  get: () => (parentData ? parentData.modelValue.value : modelValue.value),\n  set: (newValue) => {\n    if (newValue === undefined) return\n    if (parentData !== null) {\n      parentData.modelValue.value = newValue as RadioValue\n      return\n    }\n    modelValue.value = newValue as RadioValue\n  },\n})\n\nconst computedRequired = computed(\n  () => !!(props.name ?? parentData?.name.value) && (props.required || parentData?.required.value)\n)\n\nconst isButtonGroup = computed(() => props.buttonGroup || (parentData?.buttons.value ?? false))\n\nconst classesObject = computed(() => ({\n  plain: props.plain || (parentData?.plain.value ?? false),\n  button: props.button || (parentData?.buttons.value ?? false),\n  inline: props.inline || (parentData?.inline.value ?? false),\n  state: props.state || parentData?.state.value,\n  reverse: props.reverse || (parentData?.reverse.value ?? false),\n  size: props.size ?? parentData?.size.value ?? 'md', // This is where the true default is made\n  buttonVariant: props.buttonVariant ?? parentData?.buttonVariant.value ?? 'secondary', // This is where the true default is made\n  hasDefaultSlot: hasDefaultSlot.value,\n}))\nconst computedClasses = getClasses(classesObject)\nconst inputClasses = getInputClasses(classesObject)\nconst labelClasses = getLabelClasses(classesObject)\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  element: input,\n  focus: () => {\n    focused.value = true\n  },\n})\n</script>\n","<template>\n  <div\n    v-bind=\"computedAttrs\"\n    :id=\"computedId\"\n    ref=\"_element\"\n    role=\"radiogroup\"\n    :class=\"computedClasses\"\n    class=\"bv-no-focus-ring\"\n    tabindex=\"-1\"\n  >\n    <slot name=\"first\" />\n    <BFormRadio v-for=\"(item, index) in normalizeOptions\" :key=\"index\" v-bind=\"item\">\n      <slot name=\"option\" v-bind=\"item\">\n        {{ item.text }}\n      </slot>\n    </BFormRadio>\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BFormRadioGroupProps} from '../../types/ComponentProps'\nimport {computed, provide, toRef, useTemplateRef} from 'vue'\nimport {radioGroupKey} from '../../utils/keys'\nimport BFormRadio from './BFormRadio.vue'\nimport {getGroupAttr, getGroupClasses} from '../../composables/useFormCheck'\nimport {useFocus} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\n\nconst _props = withDefaults(defineProps<Omit<BFormRadioGroupProps, 'modelValue'>>(), {\n  ariaInvalid: undefined,\n  autofocus: false,\n  buttonVariant: 'secondary',\n  buttons: false,\n  disabled: false,\n  disabledField: 'disabled',\n  form: undefined,\n  id: undefined,\n  name: undefined,\n  options: () => [],\n  plain: false,\n  required: false,\n  reverse: false,\n  size: 'md',\n  stacked: false,\n  state: null,\n  textField: 'text',\n  validated: false,\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormRadioGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  first?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  option: (props: Record<string, unknown>) => any\n}>()\n\nconst modelValue = defineModel<Exclude<BFormRadioGroupProps['modelValue'], undefined>>({\n  default: null,\n})\n\nconst computedId = useId(() => props.id, 'radio')\nconst computedName = useId(() => props.name, 'checkbox')\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst {focused} = useFocus(element, {\n  initialValue: props.autofocus,\n})\n\nprovide(radioGroupKey, {\n  modelValue,\n  buttonVariant: toRef(() => props.buttonVariant),\n  form: toRef(() => props.form),\n  name: computedName,\n  buttons: toRef(() => props.buttons),\n  state: toRef(() => props.state),\n  plain: toRef(() => props.plain),\n  size: toRef(() => props.size),\n  inline: toRef(() => !props.stacked),\n  reverse: toRef(() => props.reverse),\n  required: toRef(() => props.required),\n  disabled: toRef(() => props.disabled),\n})\n\nconst normalizeOptions = computed(() =>\n  props.options.map((el) =>\n    typeof el === 'string' || typeof el === 'number'\n      ? {\n          value: el,\n          disabled: props.disabled,\n          text: el.toString(),\n        }\n      : {\n          ...el,\n          value: el[props.valueField] as string | undefined,\n          disabled: el[props.disabledField] as boolean | undefined,\n          text: el[props.textField] as string | undefined,\n        }\n  )\n)\n\nconst classesObject = computed(() => ({\n  required: props.required,\n  ariaInvalid: props.ariaInvalid,\n  state: props.state,\n  validated: props.validated,\n  buttons: props.buttons,\n  stacked: props.stacked,\n  size: props.size,\n}))\nconst computedAttrs = getGroupAttr(classesObject)\nconst computedClasses = getGroupClasses(classesObject)\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  focus: () => {\n    focused.value = true\n  },\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","slots","_useSlots","modelValue","_useModel","computedId","useId","id","parentData","inject","radioGroupKey","input","useTemplateRef","focused","useFocus","initialValue","autofocus","hasDefaultSlot","computed","isEmptySlot","default","localValue","get","value","set","newValue","computedRequired","name","required","isButtonGroup","buttonGroup","buttons","classesObject","plain","button","inline","state","reverse","size","buttonVariant","computedClasses","getClasses","inputClasses","getInputClasses","labelClasses","getLabelClasses","__expose","blur","element","focus","computedName","provide","toRef","form","stacked","disabled","normalizeOptions","options","map","el","text","toString","valueField","disabledField","textField","ariaInvalid","validated","computedAttrs","getGroupAttr","getGroupClasses"],"mappings":"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"}